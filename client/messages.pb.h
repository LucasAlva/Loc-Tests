// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messages.proto

#ifndef PROTOBUF_INCLUDED_messages_2eproto
#define PROTOBUF_INCLUDED_messages_2eproto

#include <limits>
#include <string>

#include <google/protobuf/stubs/common.h>
#if GOOGLE_PROTOBUF_VERSION < 3006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_messages_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_messages_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[44]
    GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_messages_2eproto();
namespace com {
namespace cwrubotix {
namespace glennifer {
class Adjustment;
class AdjustmentDefaultTypeInternal;
extern AdjustmentDefaultTypeInternal _Adjustment_default_instance_;
class AllWheelsCommand;
class AllWheelsCommandDefaultTypeInternal;
extern AllWheelsCommandDefaultTypeInternal _AllWheelsCommand_default_instance_;
class AutonomyNextHeading;
class AutonomyNextHeadingDefaultTypeInternal;
extern AutonomyNextHeadingDefaultTypeInternal _AutonomyNextHeading_default_instance_;
class ClosedLoopCommand;
class ClosedLoopCommandDefaultTypeInternal;
extern ClosedLoopCommandDefaultTypeInternal _ClosedLoopCommand_default_instance_;
class CountUpdate;
class CountUpdateDefaultTypeInternal;
extern CountUpdateDefaultTypeInternal _CountUpdate_default_instance_;
class CurrentUpdate;
class CurrentUpdateDefaultTypeInternal;
extern CurrentUpdateDefaultTypeInternal _CurrentUpdate_default_instance_;
class DepositionStateDetailed;
class DepositionStateDetailedDefaultTypeInternal;
extern DepositionStateDetailedDefaultTypeInternal _DepositionStateDetailed_default_instance_;
class DepositionStateSummary;
class DepositionStateSummaryDefaultTypeInternal;
extern DepositionStateSummaryDefaultTypeInternal _DepositionStateSummary_default_instance_;
class DisplacementUpdate;
class DisplacementUpdateDefaultTypeInternal;
extern DisplacementUpdateDefaultTypeInternal _DisplacementUpdate_default_instance_;
class DrillHardStop;
class DrillHardStopDefaultTypeInternal;
extern DrillHardStopDefaultTypeInternal _DrillHardStop_default_instance_;
class DrillSoftStop;
class DrillSoftStopDefaultTypeInternal;
extern DrillSoftStopDefaultTypeInternal _DrillSoftStop_default_instance_;
class DumpHardStop;
class DumpHardStopDefaultTypeInternal;
extern DumpHardStopDefaultTypeInternal _DumpHardStop_default_instance_;
class DumpSoftStop;
class DumpSoftStopDefaultTypeInternal;
extern DumpSoftStopDefaultTypeInternal _DumpSoftStop_default_instance_;
class ErrorReport;
class ErrorReportDefaultTypeInternal;
extern ErrorReportDefaultTypeInternal _ErrorReport_default_instance_;
class ExcavationControlCommandDigDeep;
class ExcavationControlCommandDigDeepDefaultTypeInternal;
extern ExcavationControlCommandDigDeepDefaultTypeInternal _ExcavationControlCommandDigDeep_default_instance_;
class ExcavationControlCommandDigEnd;
class ExcavationControlCommandDigEndDefaultTypeInternal;
extern ExcavationControlCommandDigEndDefaultTypeInternal _ExcavationControlCommandDigEnd_default_instance_;
class ExcavationStateDetailed;
class ExcavationStateDetailedDefaultTypeInternal;
extern ExcavationStateDetailedDefaultTypeInternal _ExcavationStateDetailed_default_instance_;
class ExcavationStateSummary;
class ExcavationStateSummaryDefaultTypeInternal;
extern ExcavationStateSummaryDefaultTypeInternal _ExcavationStateSummary_default_instance_;
class Fault;
class FaultDefaultTypeInternal;
extern FaultDefaultTypeInternal _Fault_default_instance_;
class ImuUpdate;
class ImuUpdateDefaultTypeInternal;
extern ImuUpdateDefaultTypeInternal _ImuUpdate_default_instance_;
class LaunchDrill;
class LaunchDrillDefaultTypeInternal;
extern LaunchDrillDefaultTypeInternal _LaunchDrill_default_instance_;
class LaunchDump;
class LaunchDumpDefaultTypeInternal;
extern LaunchDumpDefaultTypeInternal _LaunchDump_default_instance_;
class LaunchTransit;
class LaunchTransitDefaultTypeInternal;
extern LaunchTransitDefaultTypeInternal _LaunchTransit_default_instance_;
class LimitUpdate;
class LimitUpdateDefaultTypeInternal;
extern LimitUpdateDefaultTypeInternal _LimitUpdate_default_instance_;
class LoadUpdate;
class LoadUpdateDefaultTypeInternal;
extern LoadUpdateDefaultTypeInternal _LoadUpdate_default_instance_;
class LocObsStateDetailed;
class LocObsStateDetailedDefaultTypeInternal;
extern LocObsStateDetailedDefaultTypeInternal _LocObsStateDetailed_default_instance_;
class LocalizationPosition;
class LocalizationPositionDefaultTypeInternal;
extern LocalizationPositionDefaultTypeInternal _LocalizationPosition_default_instance_;
class LocomotionControlCommandStraight;
class LocomotionControlCommandStraightDefaultTypeInternal;
extern LocomotionControlCommandStraightDefaultTypeInternal _LocomotionControlCommandStraight_default_instance_;
class LocomotionStateDetailed;
class LocomotionStateDetailedDefaultTypeInternal;
extern LocomotionStateDetailedDefaultTypeInternal _LocomotionStateDetailed_default_instance_;
class LocomotionStateSummary;
class LocomotionStateSummaryDefaultTypeInternal;
extern LocomotionStateSummaryDefaultTypeInternal _LocomotionStateSummary_default_instance_;
class ObstaclePosition;
class ObstaclePositionDefaultTypeInternal;
extern ObstaclePositionDefaultTypeInternal _ObstaclePosition_default_instance_;
class PositionControlCommand;
class PositionControlCommandDefaultTypeInternal;
extern PositionControlCommandDefaultTypeInternal _PositionControlCommand_default_instance_;
class PositionUpdate;
class PositionUpdateDefaultTypeInternal;
extern PositionUpdateDefaultTypeInternal _PositionUpdate_default_instance_;
class ProgressReport;
class ProgressReportDefaultTypeInternal;
extern ProgressReportDefaultTypeInternal _ProgressReport_default_instance_;
class RpmUpdate;
class RpmUpdateDefaultTypeInternal;
extern RpmUpdateDefaultTypeInternal _RpmUpdate_default_instance_;
class SpeedControlCommand;
class SpeedControlCommandDefaultTypeInternal;
extern SpeedControlCommandDefaultTypeInternal _SpeedControlCommand_default_instance_;
class State;
class StateDefaultTypeInternal;
extern StateDefaultTypeInternal _State_default_instance_;
class StateSubscribe;
class StateSubscribeDefaultTypeInternal;
extern StateSubscribeDefaultTypeInternal _StateSubscribe_default_instance_;
class StopAllCommand;
class StopAllCommandDefaultTypeInternal;
extern StopAllCommandDefaultTypeInternal _StopAllCommand_default_instance_;
class TransitHardStop;
class TransitHardStopDefaultTypeInternal;
extern TransitHardStopDefaultTypeInternal _TransitHardStop_default_instance_;
class TransitNewObstacle;
class TransitNewObstacleDefaultTypeInternal;
extern TransitNewObstacleDefaultTypeInternal _TransitNewObstacle_default_instance_;
class TransitSoftStop;
class TransitSoftStopDefaultTypeInternal;
extern TransitSoftStopDefaultTypeInternal _TransitSoftStop_default_instance_;
class TurnControlCommand;
class TurnControlCommandDefaultTypeInternal;
extern TurnControlCommandDefaultTypeInternal _TurnControlCommand_default_instance_;
class UnixTime;
class UnixTimeDefaultTypeInternal;
extern UnixTimeDefaultTypeInternal _UnixTime_default_instance_;
}  // namespace glennifer
}  // namespace cwrubotix
}  // namespace com
namespace google {
namespace protobuf {
template<> ::com::cwrubotix::glennifer::Adjustment* Arena::CreateMaybeMessage<::com::cwrubotix::glennifer::Adjustment>(Arena*);
template<> ::com::cwrubotix::glennifer::AllWheelsCommand* Arena::CreateMaybeMessage<::com::cwrubotix::glennifer::AllWheelsCommand>(Arena*);
template<> ::com::cwrubotix::glennifer::AutonomyNextHeading* Arena::CreateMaybeMessage<::com::cwrubotix::glennifer::AutonomyNextHeading>(Arena*);
template<> ::com::cwrubotix::glennifer::ClosedLoopCommand* Arena::CreateMaybeMessage<::com::cwrubotix::glennifer::ClosedLoopCommand>(Arena*);
template<> ::com::cwrubotix::glennifer::CountUpdate* Arena::CreateMaybeMessage<::com::cwrubotix::glennifer::CountUpdate>(Arena*);
template<> ::com::cwrubotix::glennifer::CurrentUpdate* Arena::CreateMaybeMessage<::com::cwrubotix::glennifer::CurrentUpdate>(Arena*);
template<> ::com::cwrubotix::glennifer::DepositionStateDetailed* Arena::CreateMaybeMessage<::com::cwrubotix::glennifer::DepositionStateDetailed>(Arena*);
template<> ::com::cwrubotix::glennifer::DepositionStateSummary* Arena::CreateMaybeMessage<::com::cwrubotix::glennifer::DepositionStateSummary>(Arena*);
template<> ::com::cwrubotix::glennifer::DisplacementUpdate* Arena::CreateMaybeMessage<::com::cwrubotix::glennifer::DisplacementUpdate>(Arena*);
template<> ::com::cwrubotix::glennifer::DrillHardStop* Arena::CreateMaybeMessage<::com::cwrubotix::glennifer::DrillHardStop>(Arena*);
template<> ::com::cwrubotix::glennifer::DrillSoftStop* Arena::CreateMaybeMessage<::com::cwrubotix::glennifer::DrillSoftStop>(Arena*);
template<> ::com::cwrubotix::glennifer::DumpHardStop* Arena::CreateMaybeMessage<::com::cwrubotix::glennifer::DumpHardStop>(Arena*);
template<> ::com::cwrubotix::glennifer::DumpSoftStop* Arena::CreateMaybeMessage<::com::cwrubotix::glennifer::DumpSoftStop>(Arena*);
template<> ::com::cwrubotix::glennifer::ErrorReport* Arena::CreateMaybeMessage<::com::cwrubotix::glennifer::ErrorReport>(Arena*);
template<> ::com::cwrubotix::glennifer::ExcavationControlCommandDigDeep* Arena::CreateMaybeMessage<::com::cwrubotix::glennifer::ExcavationControlCommandDigDeep>(Arena*);
template<> ::com::cwrubotix::glennifer::ExcavationControlCommandDigEnd* Arena::CreateMaybeMessage<::com::cwrubotix::glennifer::ExcavationControlCommandDigEnd>(Arena*);
template<> ::com::cwrubotix::glennifer::ExcavationStateDetailed* Arena::CreateMaybeMessage<::com::cwrubotix::glennifer::ExcavationStateDetailed>(Arena*);
template<> ::com::cwrubotix::glennifer::ExcavationStateSummary* Arena::CreateMaybeMessage<::com::cwrubotix::glennifer::ExcavationStateSummary>(Arena*);
template<> ::com::cwrubotix::glennifer::Fault* Arena::CreateMaybeMessage<::com::cwrubotix::glennifer::Fault>(Arena*);
template<> ::com::cwrubotix::glennifer::ImuUpdate* Arena::CreateMaybeMessage<::com::cwrubotix::glennifer::ImuUpdate>(Arena*);
template<> ::com::cwrubotix::glennifer::LaunchDrill* Arena::CreateMaybeMessage<::com::cwrubotix::glennifer::LaunchDrill>(Arena*);
template<> ::com::cwrubotix::glennifer::LaunchDump* Arena::CreateMaybeMessage<::com::cwrubotix::glennifer::LaunchDump>(Arena*);
template<> ::com::cwrubotix::glennifer::LaunchTransit* Arena::CreateMaybeMessage<::com::cwrubotix::glennifer::LaunchTransit>(Arena*);
template<> ::com::cwrubotix::glennifer::LimitUpdate* Arena::CreateMaybeMessage<::com::cwrubotix::glennifer::LimitUpdate>(Arena*);
template<> ::com::cwrubotix::glennifer::LoadUpdate* Arena::CreateMaybeMessage<::com::cwrubotix::glennifer::LoadUpdate>(Arena*);
template<> ::com::cwrubotix::glennifer::LocObsStateDetailed* Arena::CreateMaybeMessage<::com::cwrubotix::glennifer::LocObsStateDetailed>(Arena*);
template<> ::com::cwrubotix::glennifer::LocalizationPosition* Arena::CreateMaybeMessage<::com::cwrubotix::glennifer::LocalizationPosition>(Arena*);
template<> ::com::cwrubotix::glennifer::LocomotionControlCommandStraight* Arena::CreateMaybeMessage<::com::cwrubotix::glennifer::LocomotionControlCommandStraight>(Arena*);
template<> ::com::cwrubotix::glennifer::LocomotionStateDetailed* Arena::CreateMaybeMessage<::com::cwrubotix::glennifer::LocomotionStateDetailed>(Arena*);
template<> ::com::cwrubotix::glennifer::LocomotionStateSummary* Arena::CreateMaybeMessage<::com::cwrubotix::glennifer::LocomotionStateSummary>(Arena*);
template<> ::com::cwrubotix::glennifer::ObstaclePosition* Arena::CreateMaybeMessage<::com::cwrubotix::glennifer::ObstaclePosition>(Arena*);
template<> ::com::cwrubotix::glennifer::PositionControlCommand* Arena::CreateMaybeMessage<::com::cwrubotix::glennifer::PositionControlCommand>(Arena*);
template<> ::com::cwrubotix::glennifer::PositionUpdate* Arena::CreateMaybeMessage<::com::cwrubotix::glennifer::PositionUpdate>(Arena*);
template<> ::com::cwrubotix::glennifer::ProgressReport* Arena::CreateMaybeMessage<::com::cwrubotix::glennifer::ProgressReport>(Arena*);
template<> ::com::cwrubotix::glennifer::RpmUpdate* Arena::CreateMaybeMessage<::com::cwrubotix::glennifer::RpmUpdate>(Arena*);
template<> ::com::cwrubotix::glennifer::SpeedControlCommand* Arena::CreateMaybeMessage<::com::cwrubotix::glennifer::SpeedControlCommand>(Arena*);
template<> ::com::cwrubotix::glennifer::State* Arena::CreateMaybeMessage<::com::cwrubotix::glennifer::State>(Arena*);
template<> ::com::cwrubotix::glennifer::StateSubscribe* Arena::CreateMaybeMessage<::com::cwrubotix::glennifer::StateSubscribe>(Arena*);
template<> ::com::cwrubotix::glennifer::StopAllCommand* Arena::CreateMaybeMessage<::com::cwrubotix::glennifer::StopAllCommand>(Arena*);
template<> ::com::cwrubotix::glennifer::TransitHardStop* Arena::CreateMaybeMessage<::com::cwrubotix::glennifer::TransitHardStop>(Arena*);
template<> ::com::cwrubotix::glennifer::TransitNewObstacle* Arena::CreateMaybeMessage<::com::cwrubotix::glennifer::TransitNewObstacle>(Arena*);
template<> ::com::cwrubotix::glennifer::TransitSoftStop* Arena::CreateMaybeMessage<::com::cwrubotix::glennifer::TransitSoftStop>(Arena*);
template<> ::com::cwrubotix::glennifer::TurnControlCommand* Arena::CreateMaybeMessage<::com::cwrubotix::glennifer::TurnControlCommand>(Arena*);
template<> ::com::cwrubotix::glennifer::UnixTime* Arena::CreateMaybeMessage<::com::cwrubotix::glennifer::UnixTime>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace com {
namespace cwrubotix {
namespace glennifer {

// ===================================================================

class UnixTime : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.cwrubotix.glennifer.UnixTime) */ {
 public:
  UnixTime();
  virtual ~UnixTime();

  UnixTime(const UnixTime& from);

  inline UnixTime& operator=(const UnixTime& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UnixTime(UnixTime&& from) noexcept
    : UnixTime() {
    *this = ::std::move(from);
  }

  inline UnixTime& operator=(UnixTime&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const UnixTime& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UnixTime* internal_default_instance() {
    return reinterpret_cast<const UnixTime*>(
               &_UnixTime_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(UnixTime* other);
  friend void swap(UnixTime& a, UnixTime& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UnixTime* New() const final {
    return CreateMaybeMessage<UnixTime>(NULL);
  }

  UnixTime* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UnixTime>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UnixTime& from);
  void MergeFrom(const UnixTime& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UnixTime* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 time_int = 1;
  bool has_time_int() const;
  void clear_time_int();
  static const int kTimeIntFieldNumber = 1;
  ::google::protobuf::uint64 time_int() const;
  void set_time_int(::google::protobuf::uint64 value);

  // required float time_frac = 2;
  bool has_time_frac() const;
  void clear_time_frac();
  static const int kTimeFracFieldNumber = 2;
  float time_frac() const;
  void set_time_frac(float value);

  // @@protoc_insertion_point(class_scope:com.cwrubotix.glennifer.UnixTime)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 time_int_;
  float time_frac_;
  friend struct ::TableStruct_messages_2eproto;
};
// -------------------------------------------------------------------

class RpmUpdate : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.cwrubotix.glennifer.RpmUpdate) */ {
 public:
  RpmUpdate();
  virtual ~RpmUpdate();

  RpmUpdate(const RpmUpdate& from);

  inline RpmUpdate& operator=(const RpmUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RpmUpdate(RpmUpdate&& from) noexcept
    : RpmUpdate() {
    *this = ::std::move(from);
  }

  inline RpmUpdate& operator=(RpmUpdate&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const RpmUpdate& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RpmUpdate* internal_default_instance() {
    return reinterpret_cast<const RpmUpdate*>(
               &_RpmUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(RpmUpdate* other);
  friend void swap(RpmUpdate& a, RpmUpdate& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RpmUpdate* New() const final {
    return CreateMaybeMessage<RpmUpdate>(NULL);
  }

  RpmUpdate* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RpmUpdate>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RpmUpdate& from);
  void MergeFrom(const RpmUpdate& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RpmUpdate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .com.cwrubotix.glennifer.UnixTime timestamp = 2;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 2;
  const ::com::cwrubotix::glennifer::UnixTime& timestamp() const;
  ::com::cwrubotix::glennifer::UnixTime* release_timestamp();
  ::com::cwrubotix::glennifer::UnixTime* mutable_timestamp();
  void set_allocated_timestamp(::com::cwrubotix::glennifer::UnixTime* timestamp);

  // required float rpm = 1;
  bool has_rpm() const;
  void clear_rpm();
  static const int kRpmFieldNumber = 1;
  float rpm() const;
  void set_rpm(float value);

  // @@protoc_insertion_point(class_scope:com.cwrubotix.glennifer.RpmUpdate)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::com::cwrubotix::glennifer::UnixTime* timestamp_;
  float rpm_;
  friend struct ::TableStruct_messages_2eproto;
};
// -------------------------------------------------------------------

class DisplacementUpdate : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.cwrubotix.glennifer.DisplacementUpdate) */ {
 public:
  DisplacementUpdate();
  virtual ~DisplacementUpdate();

  DisplacementUpdate(const DisplacementUpdate& from);

  inline DisplacementUpdate& operator=(const DisplacementUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DisplacementUpdate(DisplacementUpdate&& from) noexcept
    : DisplacementUpdate() {
    *this = ::std::move(from);
  }

  inline DisplacementUpdate& operator=(DisplacementUpdate&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const DisplacementUpdate& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DisplacementUpdate* internal_default_instance() {
    return reinterpret_cast<const DisplacementUpdate*>(
               &_DisplacementUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(DisplacementUpdate* other);
  friend void swap(DisplacementUpdate& a, DisplacementUpdate& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DisplacementUpdate* New() const final {
    return CreateMaybeMessage<DisplacementUpdate>(NULL);
  }

  DisplacementUpdate* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DisplacementUpdate>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DisplacementUpdate& from);
  void MergeFrom(const DisplacementUpdate& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DisplacementUpdate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .com.cwrubotix.glennifer.UnixTime timestamp = 2;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 2;
  const ::com::cwrubotix::glennifer::UnixTime& timestamp() const;
  ::com::cwrubotix::glennifer::UnixTime* release_timestamp();
  ::com::cwrubotix::glennifer::UnixTime* mutable_timestamp();
  void set_allocated_timestamp(::com::cwrubotix::glennifer::UnixTime* timestamp);

  // required float displacement = 1;
  bool has_displacement() const;
  void clear_displacement();
  static const int kDisplacementFieldNumber = 1;
  float displacement() const;
  void set_displacement(float value);

  // @@protoc_insertion_point(class_scope:com.cwrubotix.glennifer.DisplacementUpdate)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::com::cwrubotix::glennifer::UnixTime* timestamp_;
  float displacement_;
  friend struct ::TableStruct_messages_2eproto;
};
// -------------------------------------------------------------------

class PositionUpdate : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.cwrubotix.glennifer.PositionUpdate) */ {
 public:
  PositionUpdate();
  virtual ~PositionUpdate();

  PositionUpdate(const PositionUpdate& from);

  inline PositionUpdate& operator=(const PositionUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PositionUpdate(PositionUpdate&& from) noexcept
    : PositionUpdate() {
    *this = ::std::move(from);
  }

  inline PositionUpdate& operator=(PositionUpdate&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PositionUpdate& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PositionUpdate* internal_default_instance() {
    return reinterpret_cast<const PositionUpdate*>(
               &_PositionUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(PositionUpdate* other);
  friend void swap(PositionUpdate& a, PositionUpdate& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PositionUpdate* New() const final {
    return CreateMaybeMessage<PositionUpdate>(NULL);
  }

  PositionUpdate* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PositionUpdate>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PositionUpdate& from);
  void MergeFrom(const PositionUpdate& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PositionUpdate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .com.cwrubotix.glennifer.UnixTime timestamp = 2;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 2;
  const ::com::cwrubotix::glennifer::UnixTime& timestamp() const;
  ::com::cwrubotix::glennifer::UnixTime* release_timestamp();
  ::com::cwrubotix::glennifer::UnixTime* mutable_timestamp();
  void set_allocated_timestamp(::com::cwrubotix::glennifer::UnixTime* timestamp);

  // required float position = 1;
  bool has_position() const;
  void clear_position();
  static const int kPositionFieldNumber = 1;
  float position() const;
  void set_position(float value);

  // @@protoc_insertion_point(class_scope:com.cwrubotix.glennifer.PositionUpdate)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::com::cwrubotix::glennifer::UnixTime* timestamp_;
  float position_;
  friend struct ::TableStruct_messages_2eproto;
};
// -------------------------------------------------------------------

class CurrentUpdate : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.cwrubotix.glennifer.CurrentUpdate) */ {
 public:
  CurrentUpdate();
  virtual ~CurrentUpdate();

  CurrentUpdate(const CurrentUpdate& from);

  inline CurrentUpdate& operator=(const CurrentUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CurrentUpdate(CurrentUpdate&& from) noexcept
    : CurrentUpdate() {
    *this = ::std::move(from);
  }

  inline CurrentUpdate& operator=(CurrentUpdate&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CurrentUpdate& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CurrentUpdate* internal_default_instance() {
    return reinterpret_cast<const CurrentUpdate*>(
               &_CurrentUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(CurrentUpdate* other);
  friend void swap(CurrentUpdate& a, CurrentUpdate& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CurrentUpdate* New() const final {
    return CreateMaybeMessage<CurrentUpdate>(NULL);
  }

  CurrentUpdate* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CurrentUpdate>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CurrentUpdate& from);
  void MergeFrom(const CurrentUpdate& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CurrentUpdate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .com.cwrubotix.glennifer.UnixTime timestamp = 2;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 2;
  const ::com::cwrubotix::glennifer::UnixTime& timestamp() const;
  ::com::cwrubotix::glennifer::UnixTime* release_timestamp();
  ::com::cwrubotix::glennifer::UnixTime* mutable_timestamp();
  void set_allocated_timestamp(::com::cwrubotix::glennifer::UnixTime* timestamp);

  // required float current = 1;
  bool has_current() const;
  void clear_current();
  static const int kCurrentFieldNumber = 1;
  float current() const;
  void set_current(float value);

  // @@protoc_insertion_point(class_scope:com.cwrubotix.glennifer.CurrentUpdate)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::com::cwrubotix::glennifer::UnixTime* timestamp_;
  float current_;
  friend struct ::TableStruct_messages_2eproto;
};
// -------------------------------------------------------------------

class LimitUpdate : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.cwrubotix.glennifer.LimitUpdate) */ {
 public:
  LimitUpdate();
  virtual ~LimitUpdate();

  LimitUpdate(const LimitUpdate& from);

  inline LimitUpdate& operator=(const LimitUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LimitUpdate(LimitUpdate&& from) noexcept
    : LimitUpdate() {
    *this = ::std::move(from);
  }

  inline LimitUpdate& operator=(LimitUpdate&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const LimitUpdate& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LimitUpdate* internal_default_instance() {
    return reinterpret_cast<const LimitUpdate*>(
               &_LimitUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(LimitUpdate* other);
  friend void swap(LimitUpdate& a, LimitUpdate& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LimitUpdate* New() const final {
    return CreateMaybeMessage<LimitUpdate>(NULL);
  }

  LimitUpdate* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LimitUpdate>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LimitUpdate& from);
  void MergeFrom(const LimitUpdate& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LimitUpdate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .com.cwrubotix.glennifer.UnixTime timestamp = 2;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 2;
  const ::com::cwrubotix::glennifer::UnixTime& timestamp() const;
  ::com::cwrubotix::glennifer::UnixTime* release_timestamp();
  ::com::cwrubotix::glennifer::UnixTime* mutable_timestamp();
  void set_allocated_timestamp(::com::cwrubotix::glennifer::UnixTime* timestamp);

  // required bool pressed = 1;
  bool has_pressed() const;
  void clear_pressed();
  static const int kPressedFieldNumber = 1;
  bool pressed() const;
  void set_pressed(bool value);

  // @@protoc_insertion_point(class_scope:com.cwrubotix.glennifer.LimitUpdate)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::com::cwrubotix::glennifer::UnixTime* timestamp_;
  bool pressed_;
  friend struct ::TableStruct_messages_2eproto;
};
// -------------------------------------------------------------------

class ImuUpdate : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.cwrubotix.glennifer.ImuUpdate) */ {
 public:
  ImuUpdate();
  virtual ~ImuUpdate();

  ImuUpdate(const ImuUpdate& from);

  inline ImuUpdate& operator=(const ImuUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ImuUpdate(ImuUpdate&& from) noexcept
    : ImuUpdate() {
    *this = ::std::move(from);
  }

  inline ImuUpdate& operator=(ImuUpdate&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ImuUpdate& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ImuUpdate* internal_default_instance() {
    return reinterpret_cast<const ImuUpdate*>(
               &_ImuUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(ImuUpdate* other);
  friend void swap(ImuUpdate& a, ImuUpdate& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ImuUpdate* New() const final {
    return CreateMaybeMessage<ImuUpdate>(NULL);
  }

  ImuUpdate* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ImuUpdate>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ImuUpdate& from);
  void MergeFrom(const ImuUpdate& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ImuUpdate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .com.cwrubotix.glennifer.UnixTime timestamp = 2;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 2;
  const ::com::cwrubotix::glennifer::UnixTime& timestamp() const;
  ::com::cwrubotix::glennifer::UnixTime* release_timestamp();
  ::com::cwrubotix::glennifer::UnixTime* mutable_timestamp();
  void set_allocated_timestamp(::com::cwrubotix::glennifer::UnixTime* timestamp);

  // required float orientation = 1;
  bool has_orientation() const;
  void clear_orientation();
  static const int kOrientationFieldNumber = 1;
  float orientation() const;
  void set_orientation(float value);

  // @@protoc_insertion_point(class_scope:com.cwrubotix.glennifer.ImuUpdate)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::com::cwrubotix::glennifer::UnixTime* timestamp_;
  float orientation_;
  friend struct ::TableStruct_messages_2eproto;
};
// -------------------------------------------------------------------

class LoadUpdate : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.cwrubotix.glennifer.LoadUpdate) */ {
 public:
  LoadUpdate();
  virtual ~LoadUpdate();

  LoadUpdate(const LoadUpdate& from);

  inline LoadUpdate& operator=(const LoadUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LoadUpdate(LoadUpdate&& from) noexcept
    : LoadUpdate() {
    *this = ::std::move(from);
  }

  inline LoadUpdate& operator=(LoadUpdate&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const LoadUpdate& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LoadUpdate* internal_default_instance() {
    return reinterpret_cast<const LoadUpdate*>(
               &_LoadUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(LoadUpdate* other);
  friend void swap(LoadUpdate& a, LoadUpdate& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LoadUpdate* New() const final {
    return CreateMaybeMessage<LoadUpdate>(NULL);
  }

  LoadUpdate* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LoadUpdate>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LoadUpdate& from);
  void MergeFrom(const LoadUpdate& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LoadUpdate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .com.cwrubotix.glennifer.UnixTime timestamp = 2;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 2;
  const ::com::cwrubotix::glennifer::UnixTime& timestamp() const;
  ::com::cwrubotix::glennifer::UnixTime* release_timestamp();
  ::com::cwrubotix::glennifer::UnixTime* mutable_timestamp();
  void set_allocated_timestamp(::com::cwrubotix::glennifer::UnixTime* timestamp);

  // required float load = 1;
  bool has_load() const;
  void clear_load();
  static const int kLoadFieldNumber = 1;
  float load() const;
  void set_load(float value);

  // @@protoc_insertion_point(class_scope:com.cwrubotix.glennifer.LoadUpdate)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::com::cwrubotix::glennifer::UnixTime* timestamp_;
  float load_;
  friend struct ::TableStruct_messages_2eproto;
};
// -------------------------------------------------------------------

class CountUpdate : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.cwrubotix.glennifer.CountUpdate) */ {
 public:
  CountUpdate();
  virtual ~CountUpdate();

  CountUpdate(const CountUpdate& from);

  inline CountUpdate& operator=(const CountUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CountUpdate(CountUpdate&& from) noexcept
    : CountUpdate() {
    *this = ::std::move(from);
  }

  inline CountUpdate& operator=(CountUpdate&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CountUpdate& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CountUpdate* internal_default_instance() {
    return reinterpret_cast<const CountUpdate*>(
               &_CountUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(CountUpdate* other);
  friend void swap(CountUpdate& a, CountUpdate& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CountUpdate* New() const final {
    return CreateMaybeMessage<CountUpdate>(NULL);
  }

  CountUpdate* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CountUpdate>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CountUpdate& from);
  void MergeFrom(const CountUpdate& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CountUpdate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .com.cwrubotix.glennifer.UnixTime timestamp = 2;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 2;
  const ::com::cwrubotix::glennifer::UnixTime& timestamp() const;
  ::com::cwrubotix::glennifer::UnixTime* release_timestamp();
  ::com::cwrubotix::glennifer::UnixTime* mutable_timestamp();
  void set_allocated_timestamp(::com::cwrubotix::glennifer::UnixTime* timestamp);

  // required uint32 count = 1;
  bool has_count() const;
  void clear_count();
  static const int kCountFieldNumber = 1;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:com.cwrubotix.glennifer.CountUpdate)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::com::cwrubotix::glennifer::UnixTime* timestamp_;
  ::google::protobuf::uint32 count_;
  friend struct ::TableStruct_messages_2eproto;
};
// -------------------------------------------------------------------

class Fault : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.cwrubotix.glennifer.Fault) */ {
 public:
  Fault();
  virtual ~Fault();

  Fault(const Fault& from);

  inline Fault& operator=(const Fault& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Fault(Fault&& from) noexcept
    : Fault() {
    *this = ::std::move(from);
  }

  inline Fault& operator=(Fault&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Fault& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Fault* internal_default_instance() {
    return reinterpret_cast<const Fault*>(
               &_Fault_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(Fault* other);
  friend void swap(Fault& a, Fault& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Fault* New() const final {
    return CreateMaybeMessage<Fault>(NULL);
  }

  Fault* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Fault>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Fault& from);
  void MergeFrom(const Fault& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Fault* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 params = 3;
  int params_size() const;
  void clear_params();
  static const int kParamsFieldNumber = 3;
  ::google::protobuf::uint32 params(int index) const;
  void set_params(int index, ::google::protobuf::uint32 value);
  void add_params(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      params() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_params();

  // required .com.cwrubotix.glennifer.UnixTime timestamp = 2;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 2;
  const ::com::cwrubotix::glennifer::UnixTime& timestamp() const;
  ::com::cwrubotix::glennifer::UnixTime* release_timestamp();
  ::com::cwrubotix::glennifer::UnixTime* mutable_timestamp();
  void set_allocated_timestamp(::com::cwrubotix::glennifer::UnixTime* timestamp);

  // required uint32 fault_code = 1;
  bool has_fault_code() const;
  void clear_fault_code();
  static const int kFaultCodeFieldNumber = 1;
  ::google::protobuf::uint32 fault_code() const;
  void set_fault_code(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:com.cwrubotix.glennifer.Fault)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > params_;
  ::com::cwrubotix::glennifer::UnixTime* timestamp_;
  ::google::protobuf::uint32 fault_code_;
  friend struct ::TableStruct_messages_2eproto;
};
// -------------------------------------------------------------------

class Adjustment : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.cwrubotix.glennifer.Adjustment) */ {
 public:
  Adjustment();
  virtual ~Adjustment();

  Adjustment(const Adjustment& from);

  inline Adjustment& operator=(const Adjustment& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Adjustment(Adjustment&& from) noexcept
    : Adjustment() {
    *this = ::std::move(from);
  }

  inline Adjustment& operator=(Adjustment&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Adjustment& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Adjustment* internal_default_instance() {
    return reinterpret_cast<const Adjustment*>(
               &_Adjustment_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(Adjustment* other);
  friend void swap(Adjustment& a, Adjustment& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Adjustment* New() const final {
    return CreateMaybeMessage<Adjustment>(NULL);
  }

  Adjustment* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Adjustment>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Adjustment& from);
  void MergeFrom(const Adjustment& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Adjustment* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 params = 4;
  int params_size() const;
  void clear_params();
  static const int kParamsFieldNumber = 4;
  ::google::protobuf::uint32 params(int index) const;
  void set_params(int index, ::google::protobuf::uint32 value);
  void add_params(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      params() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_params();

  // optional .com.cwrubotix.glennifer.Fault source_fault = 1;
  bool has_source_fault() const;
  void clear_source_fault();
  static const int kSourceFaultFieldNumber = 1;
  const ::com::cwrubotix::glennifer::Fault& source_fault() const;
  ::com::cwrubotix::glennifer::Fault* release_source_fault();
  ::com::cwrubotix::glennifer::Fault* mutable_source_fault();
  void set_allocated_source_fault(::com::cwrubotix::glennifer::Fault* source_fault);

  // required .com.cwrubotix.glennifer.UnixTime timestamp = 3;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 3;
  const ::com::cwrubotix::glennifer::UnixTime& timestamp() const;
  ::com::cwrubotix::glennifer::UnixTime* release_timestamp();
  ::com::cwrubotix::glennifer::UnixTime* mutable_timestamp();
  void set_allocated_timestamp(::com::cwrubotix::glennifer::UnixTime* timestamp);

  // required uint32 adjustment_code = 2;
  bool has_adjustment_code() const;
  void clear_adjustment_code();
  static const int kAdjustmentCodeFieldNumber = 2;
  ::google::protobuf::uint32 adjustment_code() const;
  void set_adjustment_code(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:com.cwrubotix.glennifer.Adjustment)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > params_;
  ::com::cwrubotix::glennifer::Fault* source_fault_;
  ::com::cwrubotix::glennifer::UnixTime* timestamp_;
  ::google::protobuf::uint32 adjustment_code_;
  friend struct ::TableStruct_messages_2eproto;
};
// -------------------------------------------------------------------

class SpeedControlCommand : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.cwrubotix.glennifer.SpeedControlCommand) */ {
 public:
  SpeedControlCommand();
  virtual ~SpeedControlCommand();

  SpeedControlCommand(const SpeedControlCommand& from);

  inline SpeedControlCommand& operator=(const SpeedControlCommand& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SpeedControlCommand(SpeedControlCommand&& from) noexcept
    : SpeedControlCommand() {
    *this = ::std::move(from);
  }

  inline SpeedControlCommand& operator=(SpeedControlCommand&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SpeedControlCommand& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SpeedControlCommand* internal_default_instance() {
    return reinterpret_cast<const SpeedControlCommand*>(
               &_SpeedControlCommand_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(SpeedControlCommand* other);
  friend void swap(SpeedControlCommand& a, SpeedControlCommand& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SpeedControlCommand* New() const final {
    return CreateMaybeMessage<SpeedControlCommand>(NULL);
  }

  SpeedControlCommand* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SpeedControlCommand>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SpeedControlCommand& from);
  void MergeFrom(const SpeedControlCommand& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SpeedControlCommand* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float rpm = 1;
  bool has_rpm() const;
  void clear_rpm();
  static const int kRpmFieldNumber = 1;
  float rpm() const;
  void set_rpm(float value);

  // required float timeout = 2;
  bool has_timeout() const;
  void clear_timeout();
  static const int kTimeoutFieldNumber = 2;
  float timeout() const;
  void set_timeout(float value);

  // @@protoc_insertion_point(class_scope:com.cwrubotix.glennifer.SpeedControlCommand)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  float rpm_;
  float timeout_;
  friend struct ::TableStruct_messages_2eproto;
};
// -------------------------------------------------------------------

class AllWheelsCommand : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.cwrubotix.glennifer.AllWheelsCommand) */ {
 public:
  AllWheelsCommand();
  virtual ~AllWheelsCommand();

  AllWheelsCommand(const AllWheelsCommand& from);

  inline AllWheelsCommand& operator=(const AllWheelsCommand& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AllWheelsCommand(AllWheelsCommand&& from) noexcept
    : AllWheelsCommand() {
    *this = ::std::move(from);
  }

  inline AllWheelsCommand& operator=(AllWheelsCommand&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const AllWheelsCommand& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AllWheelsCommand* internal_default_instance() {
    return reinterpret_cast<const AllWheelsCommand*>(
               &_AllWheelsCommand_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(AllWheelsCommand* other);
  friend void swap(AllWheelsCommand& a, AllWheelsCommand& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AllWheelsCommand* New() const final {
    return CreateMaybeMessage<AllWheelsCommand>(NULL);
  }

  AllWheelsCommand* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AllWheelsCommand>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AllWheelsCommand& from);
  void MergeFrom(const AllWheelsCommand& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AllWheelsCommand* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float front_left = 1;
  bool has_front_left() const;
  void clear_front_left();
  static const int kFrontLeftFieldNumber = 1;
  float front_left() const;
  void set_front_left(float value);

  // required float front_right = 2;
  bool has_front_right() const;
  void clear_front_right();
  static const int kFrontRightFieldNumber = 2;
  float front_right() const;
  void set_front_right(float value);

  // required float back_left = 3;
  bool has_back_left() const;
  void clear_back_left();
  static const int kBackLeftFieldNumber = 3;
  float back_left() const;
  void set_back_left(float value);

  // required float back_right = 4;
  bool has_back_right() const;
  void clear_back_right();
  static const int kBackRightFieldNumber = 4;
  float back_right() const;
  void set_back_right(float value);

  // @@protoc_insertion_point(class_scope:com.cwrubotix.glennifer.AllWheelsCommand)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  float front_left_;
  float front_right_;
  float back_left_;
  float back_right_;
  friend struct ::TableStruct_messages_2eproto;
};
// -------------------------------------------------------------------

class ClosedLoopCommand : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.cwrubotix.glennifer.ClosedLoopCommand) */ {
 public:
  ClosedLoopCommand();
  virtual ~ClosedLoopCommand();

  ClosedLoopCommand(const ClosedLoopCommand& from);

  inline ClosedLoopCommand& operator=(const ClosedLoopCommand& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClosedLoopCommand(ClosedLoopCommand&& from) noexcept
    : ClosedLoopCommand() {
    *this = ::std::move(from);
  }

  inline ClosedLoopCommand& operator=(ClosedLoopCommand&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ClosedLoopCommand& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ClosedLoopCommand* internal_default_instance() {
    return reinterpret_cast<const ClosedLoopCommand*>(
               &_ClosedLoopCommand_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(ClosedLoopCommand* other);
  friend void swap(ClosedLoopCommand& a, ClosedLoopCommand& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClosedLoopCommand* New() const final {
    return CreateMaybeMessage<ClosedLoopCommand>(NULL);
  }

  ClosedLoopCommand* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ClosedLoopCommand>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ClosedLoopCommand& from);
  void MergeFrom(const ClosedLoopCommand& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ClosedLoopCommand* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool closed = 1;
  bool has_closed() const;
  void clear_closed();
  static const int kClosedFieldNumber = 1;
  bool closed() const;
  void set_closed(bool value);

  // @@protoc_insertion_point(class_scope:com.cwrubotix.glennifer.ClosedLoopCommand)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  bool closed_;
  friend struct ::TableStruct_messages_2eproto;
};
// -------------------------------------------------------------------

class PositionControlCommand : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.cwrubotix.glennifer.PositionControlCommand) */ {
 public:
  PositionControlCommand();
  virtual ~PositionControlCommand();

  PositionControlCommand(const PositionControlCommand& from);

  inline PositionControlCommand& operator=(const PositionControlCommand& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PositionControlCommand(PositionControlCommand&& from) noexcept
    : PositionControlCommand() {
    *this = ::std::move(from);
  }

  inline PositionControlCommand& operator=(PositionControlCommand&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PositionControlCommand& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PositionControlCommand* internal_default_instance() {
    return reinterpret_cast<const PositionControlCommand*>(
               &_PositionControlCommand_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(PositionControlCommand* other);
  friend void swap(PositionControlCommand& a, PositionControlCommand& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PositionControlCommand* New() const final {
    return CreateMaybeMessage<PositionControlCommand>(NULL);
  }

  PositionControlCommand* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PositionControlCommand>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PositionControlCommand& from);
  void MergeFrom(const PositionControlCommand& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PositionControlCommand* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float position = 1;
  bool has_position() const;
  void clear_position();
  static const int kPositionFieldNumber = 1;
  float position() const;
  void set_position(float value);

  // required float timeout = 2;
  bool has_timeout() const;
  void clear_timeout();
  static const int kTimeoutFieldNumber = 2;
  float timeout() const;
  void set_timeout(float value);

  // @@protoc_insertion_point(class_scope:com.cwrubotix.glennifer.PositionControlCommand)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  float position_;
  float timeout_;
  friend struct ::TableStruct_messages_2eproto;
};
// -------------------------------------------------------------------

class TurnControlCommand : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.cwrubotix.glennifer.TurnControlCommand) */ {
 public:
  TurnControlCommand();
  virtual ~TurnControlCommand();

  TurnControlCommand(const TurnControlCommand& from);

  inline TurnControlCommand& operator=(const TurnControlCommand& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TurnControlCommand(TurnControlCommand&& from) noexcept
    : TurnControlCommand() {
    *this = ::std::move(from);
  }

  inline TurnControlCommand& operator=(TurnControlCommand&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const TurnControlCommand& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TurnControlCommand* internal_default_instance() {
    return reinterpret_cast<const TurnControlCommand*>(
               &_TurnControlCommand_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(TurnControlCommand* other);
  friend void swap(TurnControlCommand& a, TurnControlCommand& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TurnControlCommand* New() const final {
    return CreateMaybeMessage<TurnControlCommand>(NULL);
  }

  TurnControlCommand* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TurnControlCommand>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TurnControlCommand& from);
  void MergeFrom(const TurnControlCommand& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TurnControlCommand* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float speed = 1;
  bool has_speed() const;
  void clear_speed();
  static const int kSpeedFieldNumber = 1;
  float speed() const;
  void set_speed(float value);

  // required float curvature = 2;
  bool has_curvature() const;
  void clear_curvature();
  static const int kCurvatureFieldNumber = 2;
  float curvature() const;
  void set_curvature(float value);

  // @@protoc_insertion_point(class_scope:com.cwrubotix.glennifer.TurnControlCommand)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  float speed_;
  float curvature_;
  friend struct ::TableStruct_messages_2eproto;
};
// -------------------------------------------------------------------

class StopAllCommand : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.cwrubotix.glennifer.StopAllCommand) */ {
 public:
  StopAllCommand();
  virtual ~StopAllCommand();

  StopAllCommand(const StopAllCommand& from);

  inline StopAllCommand& operator=(const StopAllCommand& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StopAllCommand(StopAllCommand&& from) noexcept
    : StopAllCommand() {
    *this = ::std::move(from);
  }

  inline StopAllCommand& operator=(StopAllCommand&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const StopAllCommand& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StopAllCommand* internal_default_instance() {
    return reinterpret_cast<const StopAllCommand*>(
               &_StopAllCommand_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void Swap(StopAllCommand* other);
  friend void swap(StopAllCommand& a, StopAllCommand& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StopAllCommand* New() const final {
    return CreateMaybeMessage<StopAllCommand>(NULL);
  }

  StopAllCommand* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StopAllCommand>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StopAllCommand& from);
  void MergeFrom(const StopAllCommand& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StopAllCommand* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool stop = 1;
  bool has_stop() const;
  void clear_stop();
  static const int kStopFieldNumber = 1;
  bool stop() const;
  void set_stop(bool value);

  // required float timeout = 2;
  bool has_timeout() const;
  void clear_timeout();
  static const int kTimeoutFieldNumber = 2;
  float timeout() const;
  void set_timeout(float value);

  // @@protoc_insertion_point(class_scope:com.cwrubotix.glennifer.StopAllCommand)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  bool stop_;
  float timeout_;
  friend struct ::TableStruct_messages_2eproto;
};
// -------------------------------------------------------------------

class LocomotionControlCommandStraight : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.cwrubotix.glennifer.LocomotionControlCommandStraight) */ {
 public:
  LocomotionControlCommandStraight();
  virtual ~LocomotionControlCommandStraight();

  LocomotionControlCommandStraight(const LocomotionControlCommandStraight& from);

  inline LocomotionControlCommandStraight& operator=(const LocomotionControlCommandStraight& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LocomotionControlCommandStraight(LocomotionControlCommandStraight&& from) noexcept
    : LocomotionControlCommandStraight() {
    *this = ::std::move(from);
  }

  inline LocomotionControlCommandStraight& operator=(LocomotionControlCommandStraight&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const LocomotionControlCommandStraight& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LocomotionControlCommandStraight* internal_default_instance() {
    return reinterpret_cast<const LocomotionControlCommandStraight*>(
               &_LocomotionControlCommandStraight_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void Swap(LocomotionControlCommandStraight* other);
  friend void swap(LocomotionControlCommandStraight& a, LocomotionControlCommandStraight& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LocomotionControlCommandStraight* New() const final {
    return CreateMaybeMessage<LocomotionControlCommandStraight>(NULL);
  }

  LocomotionControlCommandStraight* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LocomotionControlCommandStraight>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LocomotionControlCommandStraight& from);
  void MergeFrom(const LocomotionControlCommandStraight& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LocomotionControlCommandStraight* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float speed = 1;
  bool has_speed() const;
  void clear_speed();
  static const int kSpeedFieldNumber = 1;
  float speed() const;
  void set_speed(float value);

  // required float timeout = 2;
  bool has_timeout() const;
  void clear_timeout();
  static const int kTimeoutFieldNumber = 2;
  float timeout() const;
  void set_timeout(float value);

  // @@protoc_insertion_point(class_scope:com.cwrubotix.glennifer.LocomotionControlCommandStraight)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  float speed_;
  float timeout_;
  friend struct ::TableStruct_messages_2eproto;
};
// -------------------------------------------------------------------

class ExcavationControlCommandDigDeep : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.cwrubotix.glennifer.ExcavationControlCommandDigDeep) */ {
 public:
  ExcavationControlCommandDigDeep();
  virtual ~ExcavationControlCommandDigDeep();

  ExcavationControlCommandDigDeep(const ExcavationControlCommandDigDeep& from);

  inline ExcavationControlCommandDigDeep& operator=(const ExcavationControlCommandDigDeep& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExcavationControlCommandDigDeep(ExcavationControlCommandDigDeep&& from) noexcept
    : ExcavationControlCommandDigDeep() {
    *this = ::std::move(from);
  }

  inline ExcavationControlCommandDigDeep& operator=(ExcavationControlCommandDigDeep&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ExcavationControlCommandDigDeep& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExcavationControlCommandDigDeep* internal_default_instance() {
    return reinterpret_cast<const ExcavationControlCommandDigDeep*>(
               &_ExcavationControlCommandDigDeep_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  void Swap(ExcavationControlCommandDigDeep* other);
  friend void swap(ExcavationControlCommandDigDeep& a, ExcavationControlCommandDigDeep& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExcavationControlCommandDigDeep* New() const final {
    return CreateMaybeMessage<ExcavationControlCommandDigDeep>(NULL);
  }

  ExcavationControlCommandDigDeep* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ExcavationControlCommandDigDeep>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ExcavationControlCommandDigDeep& from);
  void MergeFrom(const ExcavationControlCommandDigDeep& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ExcavationControlCommandDigDeep* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float depth = 1;
  bool has_depth() const;
  void clear_depth();
  static const int kDepthFieldNumber = 1;
  float depth() const;
  void set_depth(float value);

  // @@protoc_insertion_point(class_scope:com.cwrubotix.glennifer.ExcavationControlCommandDigDeep)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  float depth_;
  friend struct ::TableStruct_messages_2eproto;
};
// -------------------------------------------------------------------

class ExcavationControlCommandDigEnd : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.cwrubotix.glennifer.ExcavationControlCommandDigEnd) */ {
 public:
  ExcavationControlCommandDigEnd();
  virtual ~ExcavationControlCommandDigEnd();

  ExcavationControlCommandDigEnd(const ExcavationControlCommandDigEnd& from);

  inline ExcavationControlCommandDigEnd& operator=(const ExcavationControlCommandDigEnd& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExcavationControlCommandDigEnd(ExcavationControlCommandDigEnd&& from) noexcept
    : ExcavationControlCommandDigEnd() {
    *this = ::std::move(from);
  }

  inline ExcavationControlCommandDigEnd& operator=(ExcavationControlCommandDigEnd&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ExcavationControlCommandDigEnd& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExcavationControlCommandDigEnd* internal_default_instance() {
    return reinterpret_cast<const ExcavationControlCommandDigEnd*>(
               &_ExcavationControlCommandDigEnd_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  void Swap(ExcavationControlCommandDigEnd* other);
  friend void swap(ExcavationControlCommandDigEnd& a, ExcavationControlCommandDigEnd& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExcavationControlCommandDigEnd* New() const final {
    return CreateMaybeMessage<ExcavationControlCommandDigEnd>(NULL);
  }

  ExcavationControlCommandDigEnd* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ExcavationControlCommandDigEnd>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ExcavationControlCommandDigEnd& from);
  void MergeFrom(const ExcavationControlCommandDigEnd& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ExcavationControlCommandDigEnd* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:com.cwrubotix.glennifer.ExcavationControlCommandDigEnd)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_messages_2eproto;
};
// -------------------------------------------------------------------

class StateSubscribe : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.cwrubotix.glennifer.StateSubscribe) */ {
 public:
  StateSubscribe();
  virtual ~StateSubscribe();

  StateSubscribe(const StateSubscribe& from);

  inline StateSubscribe& operator=(const StateSubscribe& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StateSubscribe(StateSubscribe&& from) noexcept
    : StateSubscribe() {
    *this = ::std::move(from);
  }

  inline StateSubscribe& operator=(StateSubscribe&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const StateSubscribe& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StateSubscribe* internal_default_instance() {
    return reinterpret_cast<const StateSubscribe*>(
               &_StateSubscribe_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  void Swap(StateSubscribe* other);
  friend void swap(StateSubscribe& a, StateSubscribe& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StateSubscribe* New() const final {
    return CreateMaybeMessage<StateSubscribe>(NULL);
  }

  StateSubscribe* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StateSubscribe>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StateSubscribe& from);
  void MergeFrom(const StateSubscribe& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StateSubscribe* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string replyKey = 1;
  bool has_replykey() const;
  void clear_replykey();
  static const int kReplyKeyFieldNumber = 1;
  const ::std::string& replykey() const;
  void set_replykey(const ::std::string& value);
  #if LANG_CXX11
  void set_replykey(::std::string&& value);
  #endif
  void set_replykey(const char* value);
  void set_replykey(const char* value, size_t size);
  ::std::string* mutable_replykey();
  ::std::string* release_replykey();
  void set_allocated_replykey(::std::string* replykey);

  // optional .com.cwrubotix.glennifer.UnixTime startTime = 10;
  bool has_starttime() const;
  void clear_starttime();
  static const int kStartTimeFieldNumber = 10;
  const ::com::cwrubotix::glennifer::UnixTime& starttime() const;
  ::com::cwrubotix::glennifer::UnixTime* release_starttime();
  ::com::cwrubotix::glennifer::UnixTime* mutable_starttime();
  void set_allocated_starttime(::com::cwrubotix::glennifer::UnixTime* starttime);

  // required float interval = 2;
  bool has_interval() const;
  void clear_interval();
  static const int kIntervalFieldNumber = 2;
  float interval() const;
  void set_interval(float value);

  // required bool locomotion_summary = 3;
  bool has_locomotion_summary() const;
  void clear_locomotion_summary();
  static const int kLocomotionSummaryFieldNumber = 3;
  bool locomotion_summary() const;
  void set_locomotion_summary(bool value);

  // required bool locomotion_detailed = 4;
  bool has_locomotion_detailed() const;
  void clear_locomotion_detailed();
  static const int kLocomotionDetailedFieldNumber = 4;
  bool locomotion_detailed() const;
  void set_locomotion_detailed(bool value);

  // required bool excavation_summary = 5;
  bool has_excavation_summary() const;
  void clear_excavation_summary();
  static const int kExcavationSummaryFieldNumber = 5;
  bool excavation_summary() const;
  void set_excavation_summary(bool value);

  // required bool excavation_detailed = 6;
  bool has_excavation_detailed() const;
  void clear_excavation_detailed();
  static const int kExcavationDetailedFieldNumber = 6;
  bool excavation_detailed() const;
  void set_excavation_detailed(bool value);

  // required bool deposition_summary = 7;
  bool has_deposition_summary() const;
  void clear_deposition_summary();
  static const int kDepositionSummaryFieldNumber = 7;
  bool deposition_summary() const;
  void set_deposition_summary(bool value);

  // required bool deposition_detailed = 8;
  bool has_deposition_detailed() const;
  void clear_deposition_detailed();
  static const int kDepositionDetailedFieldNumber = 8;
  bool deposition_detailed() const;
  void set_deposition_detailed(bool value);

  // required bool loc_obs_detailed = 9;
  bool has_loc_obs_detailed() const;
  void clear_loc_obs_detailed();
  static const int kLocObsDetailedFieldNumber = 9;
  bool loc_obs_detailed() const;
  void set_loc_obs_detailed(bool value);

  // @@protoc_insertion_point(class_scope:com.cwrubotix.glennifer.StateSubscribe)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr replykey_;
  ::com::cwrubotix::glennifer::UnixTime* starttime_;
  float interval_;
  bool locomotion_summary_;
  bool locomotion_detailed_;
  bool excavation_summary_;
  bool excavation_detailed_;
  bool deposition_summary_;
  bool deposition_detailed_;
  bool loc_obs_detailed_;
  friend struct ::TableStruct_messages_2eproto;
};
// -------------------------------------------------------------------

class State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.cwrubotix.glennifer.State) */ {
 public:
  State();
  virtual ~State();

  State(const State& from);

  inline State& operator=(const State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  State(State&& from) noexcept
    : State() {
    *this = ::std::move(from);
  }

  inline State& operator=(State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const State* internal_default_instance() {
    return reinterpret_cast<const State*>(
               &_State_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  void Swap(State* other);
  friend void swap(State& a, State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline State* New() const final {
    return CreateMaybeMessage<State>(NULL);
  }

  State* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<State>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const State& from);
  void MergeFrom(const State& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .com.cwrubotix.glennifer.LocomotionStateSummary loc_summary = 1;
  bool has_loc_summary() const;
  void clear_loc_summary();
  static const int kLocSummaryFieldNumber = 1;
  const ::com::cwrubotix::glennifer::LocomotionStateSummary& loc_summary() const;
  ::com::cwrubotix::glennifer::LocomotionStateSummary* release_loc_summary();
  ::com::cwrubotix::glennifer::LocomotionStateSummary* mutable_loc_summary();
  void set_allocated_loc_summary(::com::cwrubotix::glennifer::LocomotionStateSummary* loc_summary);

  // optional .com.cwrubotix.glennifer.LocomotionStateDetailed loc_detailed = 2;
  bool has_loc_detailed() const;
  void clear_loc_detailed();
  static const int kLocDetailedFieldNumber = 2;
  const ::com::cwrubotix::glennifer::LocomotionStateDetailed& loc_detailed() const;
  ::com::cwrubotix::glennifer::LocomotionStateDetailed* release_loc_detailed();
  ::com::cwrubotix::glennifer::LocomotionStateDetailed* mutable_loc_detailed();
  void set_allocated_loc_detailed(::com::cwrubotix::glennifer::LocomotionStateDetailed* loc_detailed);

  // optional .com.cwrubotix.glennifer.ExcavationStateSummary exc_summary = 3;
  bool has_exc_summary() const;
  void clear_exc_summary();
  static const int kExcSummaryFieldNumber = 3;
  const ::com::cwrubotix::glennifer::ExcavationStateSummary& exc_summary() const;
  ::com::cwrubotix::glennifer::ExcavationStateSummary* release_exc_summary();
  ::com::cwrubotix::glennifer::ExcavationStateSummary* mutable_exc_summary();
  void set_allocated_exc_summary(::com::cwrubotix::glennifer::ExcavationStateSummary* exc_summary);

  // optional .com.cwrubotix.glennifer.ExcavationStateDetailed exc_detailed = 4;
  bool has_exc_detailed() const;
  void clear_exc_detailed();
  static const int kExcDetailedFieldNumber = 4;
  const ::com::cwrubotix::glennifer::ExcavationStateDetailed& exc_detailed() const;
  ::com::cwrubotix::glennifer::ExcavationStateDetailed* release_exc_detailed();
  ::com::cwrubotix::glennifer::ExcavationStateDetailed* mutable_exc_detailed();
  void set_allocated_exc_detailed(::com::cwrubotix::glennifer::ExcavationStateDetailed* exc_detailed);

  // optional .com.cwrubotix.glennifer.DepositionStateSummary dep_summary = 5;
  bool has_dep_summary() const;
  void clear_dep_summary();
  static const int kDepSummaryFieldNumber = 5;
  const ::com::cwrubotix::glennifer::DepositionStateSummary& dep_summary() const;
  ::com::cwrubotix::glennifer::DepositionStateSummary* release_dep_summary();
  ::com::cwrubotix::glennifer::DepositionStateSummary* mutable_dep_summary();
  void set_allocated_dep_summary(::com::cwrubotix::glennifer::DepositionStateSummary* dep_summary);

  // optional .com.cwrubotix.glennifer.DepositionStateDetailed dep_detailed = 6;
  bool has_dep_detailed() const;
  void clear_dep_detailed();
  static const int kDepDetailedFieldNumber = 6;
  const ::com::cwrubotix::glennifer::DepositionStateDetailed& dep_detailed() const;
  ::com::cwrubotix::glennifer::DepositionStateDetailed* release_dep_detailed();
  ::com::cwrubotix::glennifer::DepositionStateDetailed* mutable_dep_detailed();
  void set_allocated_dep_detailed(::com::cwrubotix::glennifer::DepositionStateDetailed* dep_detailed);

  // optional .com.cwrubotix.glennifer.LocObsStateDetailed loc_obs_detailed = 7;
  bool has_loc_obs_detailed() const;
  void clear_loc_obs_detailed();
  static const int kLocObsDetailedFieldNumber = 7;
  const ::com::cwrubotix::glennifer::LocObsStateDetailed& loc_obs_detailed() const;
  ::com::cwrubotix::glennifer::LocObsStateDetailed* release_loc_obs_detailed();
  ::com::cwrubotix::glennifer::LocObsStateDetailed* mutable_loc_obs_detailed();
  void set_allocated_loc_obs_detailed(::com::cwrubotix::glennifer::LocObsStateDetailed* loc_obs_detailed);

  // required .com.cwrubotix.glennifer.UnixTime timestamp = 8;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 8;
  const ::com::cwrubotix::glennifer::UnixTime& timestamp() const;
  ::com::cwrubotix::glennifer::UnixTime* release_timestamp();
  ::com::cwrubotix::glennifer::UnixTime* mutable_timestamp();
  void set_allocated_timestamp(::com::cwrubotix::glennifer::UnixTime* timestamp);

  // @@protoc_insertion_point(class_scope:com.cwrubotix.glennifer.State)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::com::cwrubotix::glennifer::LocomotionStateSummary* loc_summary_;
  ::com::cwrubotix::glennifer::LocomotionStateDetailed* loc_detailed_;
  ::com::cwrubotix::glennifer::ExcavationStateSummary* exc_summary_;
  ::com::cwrubotix::glennifer::ExcavationStateDetailed* exc_detailed_;
  ::com::cwrubotix::glennifer::DepositionStateSummary* dep_summary_;
  ::com::cwrubotix::glennifer::DepositionStateDetailed* dep_detailed_;
  ::com::cwrubotix::glennifer::LocObsStateDetailed* loc_obs_detailed_;
  ::com::cwrubotix::glennifer::UnixTime* timestamp_;
  friend struct ::TableStruct_messages_2eproto;
};
// -------------------------------------------------------------------

class LocomotionStateSummary : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.cwrubotix.glennifer.LocomotionStateSummary) */ {
 public:
  LocomotionStateSummary();
  virtual ~LocomotionStateSummary();

  LocomotionStateSummary(const LocomotionStateSummary& from);

  inline LocomotionStateSummary& operator=(const LocomotionStateSummary& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LocomotionStateSummary(LocomotionStateSummary&& from) noexcept
    : LocomotionStateSummary() {
    *this = ::std::move(from);
  }

  inline LocomotionStateSummary& operator=(LocomotionStateSummary&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const LocomotionStateSummary& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LocomotionStateSummary* internal_default_instance() {
    return reinterpret_cast<const LocomotionStateSummary*>(
               &_LocomotionStateSummary_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  void Swap(LocomotionStateSummary* other);
  friend void swap(LocomotionStateSummary& a, LocomotionStateSummary& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LocomotionStateSummary* New() const final {
    return CreateMaybeMessage<LocomotionStateSummary>(NULL);
  }

  LocomotionStateSummary* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LocomotionStateSummary>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LocomotionStateSummary& from);
  void MergeFrom(const LocomotionStateSummary& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LocomotionStateSummary* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float speed = 1;
  bool has_speed() const;
  void clear_speed();
  static const int kSpeedFieldNumber = 1;
  float speed() const;
  void set_speed(float value);

  // @@protoc_insertion_point(class_scope:com.cwrubotix.glennifer.LocomotionStateSummary)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  float speed_;
  friend struct ::TableStruct_messages_2eproto;
};
// -------------------------------------------------------------------

class LocomotionStateDetailed : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.cwrubotix.glennifer.LocomotionStateDetailed) */ {
 public:
  LocomotionStateDetailed();
  virtual ~LocomotionStateDetailed();

  LocomotionStateDetailed(const LocomotionStateDetailed& from);

  inline LocomotionStateDetailed& operator=(const LocomotionStateDetailed& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LocomotionStateDetailed(LocomotionStateDetailed&& from) noexcept
    : LocomotionStateDetailed() {
    *this = ::std::move(from);
  }

  inline LocomotionStateDetailed& operator=(LocomotionStateDetailed&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const LocomotionStateDetailed& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LocomotionStateDetailed* internal_default_instance() {
    return reinterpret_cast<const LocomotionStateDetailed*>(
               &_LocomotionStateDetailed_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  void Swap(LocomotionStateDetailed* other);
  friend void swap(LocomotionStateDetailed& a, LocomotionStateDetailed& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LocomotionStateDetailed* New() const final {
    return CreateMaybeMessage<LocomotionStateDetailed>(NULL);
  }

  LocomotionStateDetailed* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LocomotionStateDetailed>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LocomotionStateDetailed& from);
  void MergeFrom(const LocomotionStateDetailed& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LocomotionStateDetailed* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float front_left_rpm = 1;
  bool has_front_left_rpm() const;
  void clear_front_left_rpm();
  static const int kFrontLeftRpmFieldNumber = 1;
  float front_left_rpm() const;
  void set_front_left_rpm(float value);

  // required float front_right_rpm = 2;
  bool has_front_right_rpm() const;
  void clear_front_right_rpm();
  static const int kFrontRightRpmFieldNumber = 2;
  float front_right_rpm() const;
  void set_front_right_rpm(float value);

  // required float back_left_rpm = 3;
  bool has_back_left_rpm() const;
  void clear_back_left_rpm();
  static const int kBackLeftRpmFieldNumber = 3;
  float back_left_rpm() const;
  void set_back_left_rpm(float value);

  // required float back_right_rpm = 4;
  bool has_back_right_rpm() const;
  void clear_back_right_rpm();
  static const int kBackRightRpmFieldNumber = 4;
  float back_right_rpm() const;
  void set_back_right_rpm(float value);

  // @@protoc_insertion_point(class_scope:com.cwrubotix.glennifer.LocomotionStateDetailed)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  float front_left_rpm_;
  float front_right_rpm_;
  float back_left_rpm_;
  float back_right_rpm_;
  friend struct ::TableStruct_messages_2eproto;
};
// -------------------------------------------------------------------

class ExcavationStateSummary : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.cwrubotix.glennifer.ExcavationStateSummary) */ {
 public:
  ExcavationStateSummary();
  virtual ~ExcavationStateSummary();

  ExcavationStateSummary(const ExcavationStateSummary& from);

  inline ExcavationStateSummary& operator=(const ExcavationStateSummary& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExcavationStateSummary(ExcavationStateSummary&& from) noexcept
    : ExcavationStateSummary() {
    *this = ::std::move(from);
  }

  inline ExcavationStateSummary& operator=(ExcavationStateSummary&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ExcavationStateSummary& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExcavationStateSummary* internal_default_instance() {
    return reinterpret_cast<const ExcavationStateSummary*>(
               &_ExcavationStateSummary_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  void Swap(ExcavationStateSummary* other);
  friend void swap(ExcavationStateSummary& a, ExcavationStateSummary& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExcavationStateSummary* New() const final {
    return CreateMaybeMessage<ExcavationStateSummary>(NULL);
  }

  ExcavationStateSummary* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ExcavationStateSummary>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ExcavationStateSummary& from);
  void MergeFrom(const ExcavationStateSummary& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ExcavationStateSummary* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float rpm = 1;
  bool has_rpm() const;
  void clear_rpm();
  static const int kRpmFieldNumber = 1;
  float rpm() const;
  void set_rpm(float value);

  // required float displacement = 2;
  bool has_displacement() const;
  void clear_displacement();
  static const int kDisplacementFieldNumber = 2;
  float displacement() const;
  void set_displacement(float value);

  // required float arm_pos = 3;
  bool has_arm_pos() const;
  void clear_arm_pos();
  static const int kArmPosFieldNumber = 3;
  float arm_pos() const;
  void set_arm_pos(float value);

  // required float current = 4;
  bool has_current() const;
  void clear_current();
  static const int kCurrentFieldNumber = 4;
  float current() const;
  void set_current(float value);

  // required bool arm_extended = 5;
  bool has_arm_extended() const;
  void clear_arm_extended();
  static const int kArmExtendedFieldNumber = 5;
  bool arm_extended() const;
  void set_arm_extended(bool value);

  // required bool translation_extended = 6;
  bool has_translation_extended() const;
  void clear_translation_extended();
  static const int kTranslationExtendedFieldNumber = 6;
  bool translation_extended() const;
  void set_translation_extended(bool value);

  // required bool translation_retracted = 7;
  bool has_translation_retracted() const;
  void clear_translation_retracted();
  static const int kTranslationRetractedFieldNumber = 7;
  bool translation_retracted() const;
  void set_translation_retracted(bool value);

  // @@protoc_insertion_point(class_scope:com.cwrubotix.glennifer.ExcavationStateSummary)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  float rpm_;
  float displacement_;
  float arm_pos_;
  float current_;
  bool arm_extended_;
  bool translation_extended_;
  bool translation_retracted_;
  friend struct ::TableStruct_messages_2eproto;
};
// -------------------------------------------------------------------

class ExcavationStateDetailed : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.cwrubotix.glennifer.ExcavationStateDetailed) */ {
 public:
  ExcavationStateDetailed();
  virtual ~ExcavationStateDetailed();

  ExcavationStateDetailed(const ExcavationStateDetailed& from);

  inline ExcavationStateDetailed& operator=(const ExcavationStateDetailed& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExcavationStateDetailed(ExcavationStateDetailed&& from) noexcept
    : ExcavationStateDetailed() {
    *this = ::std::move(from);
  }

  inline ExcavationStateDetailed& operator=(ExcavationStateDetailed&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ExcavationStateDetailed& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExcavationStateDetailed* internal_default_instance() {
    return reinterpret_cast<const ExcavationStateDetailed*>(
               &_ExcavationStateDetailed_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  void Swap(ExcavationStateDetailed* other);
  friend void swap(ExcavationStateDetailed& a, ExcavationStateDetailed& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExcavationStateDetailed* New() const final {
    return CreateMaybeMessage<ExcavationStateDetailed>(NULL);
  }

  ExcavationStateDetailed* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ExcavationStateDetailed>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ExcavationStateDetailed& from);
  void MergeFrom(const ExcavationStateDetailed& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ExcavationStateDetailed* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float rpm = 1;
  bool has_rpm() const;
  void clear_rpm();
  static const int kRpmFieldNumber = 1;
  float rpm() const;
  void set_rpm(float value);

  // required float displacement = 2;
  bool has_displacement() const;
  void clear_displacement();
  static const int kDisplacementFieldNumber = 2;
  float displacement() const;
  void set_displacement(float value);

  // required float arm_pos = 3;
  bool has_arm_pos() const;
  void clear_arm_pos();
  static const int kArmPosFieldNumber = 3;
  float arm_pos() const;
  void set_arm_pos(float value);

  // required float current = 4;
  bool has_current() const;
  void clear_current();
  static const int kCurrentFieldNumber = 4;
  float current() const;
  void set_current(float value);

  // required bool arm_left_extended = 5;
  bool has_arm_left_extended() const;
  void clear_arm_left_extended();
  static const int kArmLeftExtendedFieldNumber = 5;
  bool arm_left_extended() const;
  void set_arm_left_extended(bool value);

  // required bool arm_right_extended = 6;
  bool has_arm_right_extended() const;
  void clear_arm_right_extended();
  static const int kArmRightExtendedFieldNumber = 6;
  bool arm_right_extended() const;
  void set_arm_right_extended(bool value);

  // required bool translation_left_extended = 7;
  bool has_translation_left_extended() const;
  void clear_translation_left_extended();
  static const int kTranslationLeftExtendedFieldNumber = 7;
  bool translation_left_extended() const;
  void set_translation_left_extended(bool value);

  // required bool translation_right_extended = 8;
  bool has_translation_right_extended() const;
  void clear_translation_right_extended();
  static const int kTranslationRightExtendedFieldNumber = 8;
  bool translation_right_extended() const;
  void set_translation_right_extended(bool value);

  // required bool translation_retracted = 9;
  bool has_translation_retracted() const;
  void clear_translation_retracted();
  static const int kTranslationRetractedFieldNumber = 9;
  bool translation_retracted() const;
  void set_translation_retracted(bool value);

  // @@protoc_insertion_point(class_scope:com.cwrubotix.glennifer.ExcavationStateDetailed)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  float rpm_;
  float displacement_;
  float arm_pos_;
  float current_;
  bool arm_left_extended_;
  bool arm_right_extended_;
  bool translation_left_extended_;
  bool translation_right_extended_;
  bool translation_retracted_;
  friend struct ::TableStruct_messages_2eproto;
};
// -------------------------------------------------------------------

class DepositionStateSummary : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.cwrubotix.glennifer.DepositionStateSummary) */ {
 public:
  DepositionStateSummary();
  virtual ~DepositionStateSummary();

  DepositionStateSummary(const DepositionStateSummary& from);

  inline DepositionStateSummary& operator=(const DepositionStateSummary& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DepositionStateSummary(DepositionStateSummary&& from) noexcept
    : DepositionStateSummary() {
    *this = ::std::move(from);
  }

  inline DepositionStateSummary& operator=(DepositionStateSummary&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const DepositionStateSummary& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DepositionStateSummary* internal_default_instance() {
    return reinterpret_cast<const DepositionStateSummary*>(
               &_DepositionStateSummary_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  void Swap(DepositionStateSummary* other);
  friend void swap(DepositionStateSummary& a, DepositionStateSummary& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DepositionStateSummary* New() const final {
    return CreateMaybeMessage<DepositionStateSummary>(NULL);
  }

  DepositionStateSummary* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DepositionStateSummary>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DepositionStateSummary& from);
  void MergeFrom(const DepositionStateSummary& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DepositionStateSummary* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float load = 1;
  bool has_load() const;
  void clear_load();
  static const int kLoadFieldNumber = 1;
  float load() const;
  void set_load(float value);

  // required bool dump_extended = 2;
  bool has_dump_extended() const;
  void clear_dump_extended();
  static const int kDumpExtendedFieldNumber = 2;
  bool dump_extended() const;
  void set_dump_extended(bool value);

  // required bool dump_retracted = 3;
  bool has_dump_retracted() const;
  void clear_dump_retracted();
  static const int kDumpRetractedFieldNumber = 3;
  bool dump_retracted() const;
  void set_dump_retracted(bool value);

  // @@protoc_insertion_point(class_scope:com.cwrubotix.glennifer.DepositionStateSummary)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  float load_;
  bool dump_extended_;
  bool dump_retracted_;
  friend struct ::TableStruct_messages_2eproto;
};
// -------------------------------------------------------------------

class DepositionStateDetailed : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.cwrubotix.glennifer.DepositionStateDetailed) */ {
 public:
  DepositionStateDetailed();
  virtual ~DepositionStateDetailed();

  DepositionStateDetailed(const DepositionStateDetailed& from);

  inline DepositionStateDetailed& operator=(const DepositionStateDetailed& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DepositionStateDetailed(DepositionStateDetailed&& from) noexcept
    : DepositionStateDetailed() {
    *this = ::std::move(from);
  }

  inline DepositionStateDetailed& operator=(DepositionStateDetailed&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const DepositionStateDetailed& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DepositionStateDetailed* internal_default_instance() {
    return reinterpret_cast<const DepositionStateDetailed*>(
               &_DepositionStateDetailed_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  void Swap(DepositionStateDetailed* other);
  friend void swap(DepositionStateDetailed& a, DepositionStateDetailed& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DepositionStateDetailed* New() const final {
    return CreateMaybeMessage<DepositionStateDetailed>(NULL);
  }

  DepositionStateDetailed* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DepositionStateDetailed>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DepositionStateDetailed& from);
  void MergeFrom(const DepositionStateDetailed& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DepositionStateDetailed* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float left_load = 1;
  bool has_left_load() const;
  void clear_left_load();
  static const int kLeftLoadFieldNumber = 1;
  float left_load() const;
  void set_left_load(float value);

  // required float right_load = 2;
  bool has_right_load() const;
  void clear_right_load();
  static const int kRightLoadFieldNumber = 2;
  float right_load() const;
  void set_right_load(float value);

  // required bool dump_left_extended = 3;
  bool has_dump_left_extended() const;
  void clear_dump_left_extended();
  static const int kDumpLeftExtendedFieldNumber = 3;
  bool dump_left_extended() const;
  void set_dump_left_extended(bool value);

  // required bool dump_right_extended = 4;
  bool has_dump_right_extended() const;
  void clear_dump_right_extended();
  static const int kDumpRightExtendedFieldNumber = 4;
  bool dump_right_extended() const;
  void set_dump_right_extended(bool value);

  // required bool dump_left_retracted = 5;
  bool has_dump_left_retracted() const;
  void clear_dump_left_retracted();
  static const int kDumpLeftRetractedFieldNumber = 5;
  bool dump_left_retracted() const;
  void set_dump_left_retracted(bool value);

  // required bool dump_right_retracted = 6;
  bool has_dump_right_retracted() const;
  void clear_dump_right_retracted();
  static const int kDumpRightRetractedFieldNumber = 6;
  bool dump_right_retracted() const;
  void set_dump_right_retracted(bool value);

  // @@protoc_insertion_point(class_scope:com.cwrubotix.glennifer.DepositionStateDetailed)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  float left_load_;
  float right_load_;
  bool dump_left_extended_;
  bool dump_right_extended_;
  bool dump_left_retracted_;
  bool dump_right_retracted_;
  friend struct ::TableStruct_messages_2eproto;
};
// -------------------------------------------------------------------

class LocObsStateDetailed : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.cwrubotix.glennifer.LocObsStateDetailed) */ {
 public:
  LocObsStateDetailed();
  virtual ~LocObsStateDetailed();

  LocObsStateDetailed(const LocObsStateDetailed& from);

  inline LocObsStateDetailed& operator=(const LocObsStateDetailed& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LocObsStateDetailed(LocObsStateDetailed&& from) noexcept
    : LocObsStateDetailed() {
    *this = ::std::move(from);
  }

  inline LocObsStateDetailed& operator=(LocObsStateDetailed&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const LocObsStateDetailed& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LocObsStateDetailed* internal_default_instance() {
    return reinterpret_cast<const LocObsStateDetailed*>(
               &_LocObsStateDetailed_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  void Swap(LocObsStateDetailed* other);
  friend void swap(LocObsStateDetailed& a, LocObsStateDetailed& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LocObsStateDetailed* New() const final {
    return CreateMaybeMessage<LocObsStateDetailed>(NULL);
  }

  LocObsStateDetailed* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LocObsStateDetailed>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LocObsStateDetailed& from);
  void MergeFrom(const LocObsStateDetailed& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LocObsStateDetailed* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .com.cwrubotix.glennifer.ObstaclePosition obstacles = 2;
  int obstacles_size() const;
  void clear_obstacles();
  static const int kObstaclesFieldNumber = 2;
  ::com::cwrubotix::glennifer::ObstaclePosition* mutable_obstacles(int index);
  ::google::protobuf::RepeatedPtrField< ::com::cwrubotix::glennifer::ObstaclePosition >*
      mutable_obstacles();
  const ::com::cwrubotix::glennifer::ObstaclePosition& obstacles(int index) const;
  ::com::cwrubotix::glennifer::ObstaclePosition* add_obstacles();
  const ::google::protobuf::RepeatedPtrField< ::com::cwrubotix::glennifer::ObstaclePosition >&
      obstacles() const;

  // required .com.cwrubotix.glennifer.LocalizationPosition loc_position = 1;
  bool has_loc_position() const;
  void clear_loc_position();
  static const int kLocPositionFieldNumber = 1;
  const ::com::cwrubotix::glennifer::LocalizationPosition& loc_position() const;
  ::com::cwrubotix::glennifer::LocalizationPosition* release_loc_position();
  ::com::cwrubotix::glennifer::LocalizationPosition* mutable_loc_position();
  void set_allocated_loc_position(::com::cwrubotix::glennifer::LocalizationPosition* loc_position);

  // @@protoc_insertion_point(class_scope:com.cwrubotix.glennifer.LocObsStateDetailed)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::com::cwrubotix::glennifer::ObstaclePosition > obstacles_;
  ::com::cwrubotix::glennifer::LocalizationPosition* loc_position_;
  friend struct ::TableStruct_messages_2eproto;
};
// -------------------------------------------------------------------

class LocalizationPosition : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.cwrubotix.glennifer.LocalizationPosition) */ {
 public:
  LocalizationPosition();
  virtual ~LocalizationPosition();

  LocalizationPosition(const LocalizationPosition& from);

  inline LocalizationPosition& operator=(const LocalizationPosition& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LocalizationPosition(LocalizationPosition&& from) noexcept
    : LocalizationPosition() {
    *this = ::std::move(from);
  }

  inline LocalizationPosition& operator=(LocalizationPosition&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const LocalizationPosition& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LocalizationPosition* internal_default_instance() {
    return reinterpret_cast<const LocalizationPosition*>(
               &_LocalizationPosition_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  void Swap(LocalizationPosition* other);
  friend void swap(LocalizationPosition& a, LocalizationPosition& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LocalizationPosition* New() const final {
    return CreateMaybeMessage<LocalizationPosition>(NULL);
  }

  LocalizationPosition* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LocalizationPosition>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LocalizationPosition& from);
  void MergeFrom(const LocalizationPosition& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LocalizationPosition* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float x_position = 1;
  bool has_x_position() const;
  void clear_x_position();
  static const int kXPositionFieldNumber = 1;
  float x_position() const;
  void set_x_position(float value);

  // required float y_position = 2;
  bool has_y_position() const;
  void clear_y_position();
  static const int kYPositionFieldNumber = 2;
  float y_position() const;
  void set_y_position(float value);

  // required float bearing_angle = 3;
  bool has_bearing_angle() const;
  void clear_bearing_angle();
  static const int kBearingAngleFieldNumber = 3;
  float bearing_angle() const;
  void set_bearing_angle(float value);

  // @@protoc_insertion_point(class_scope:com.cwrubotix.glennifer.LocalizationPosition)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  float x_position_;
  float y_position_;
  float bearing_angle_;
  friend struct ::TableStruct_messages_2eproto;
};
// -------------------------------------------------------------------

class ObstaclePosition : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.cwrubotix.glennifer.ObstaclePosition) */ {
 public:
  ObstaclePosition();
  virtual ~ObstaclePosition();

  ObstaclePosition(const ObstaclePosition& from);

  inline ObstaclePosition& operator=(const ObstaclePosition& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ObstaclePosition(ObstaclePosition&& from) noexcept
    : ObstaclePosition() {
    *this = ::std::move(from);
  }

  inline ObstaclePosition& operator=(ObstaclePosition&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ObstaclePosition& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ObstaclePosition* internal_default_instance() {
    return reinterpret_cast<const ObstaclePosition*>(
               &_ObstaclePosition_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  void Swap(ObstaclePosition* other);
  friend void swap(ObstaclePosition& a, ObstaclePosition& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ObstaclePosition* New() const final {
    return CreateMaybeMessage<ObstaclePosition>(NULL);
  }

  ObstaclePosition* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ObstaclePosition>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ObstaclePosition& from);
  void MergeFrom(const ObstaclePosition& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ObstaclePosition* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float x_position = 1;
  bool has_x_position() const;
  void clear_x_position();
  static const int kXPositionFieldNumber = 1;
  float x_position() const;
  void set_x_position(float value);

  // required float y_position = 2;
  bool has_y_position() const;
  void clear_y_position();
  static const int kYPositionFieldNumber = 2;
  float y_position() const;
  void set_y_position(float value);

  // required float z_position = 3;
  bool has_z_position() const;
  void clear_z_position();
  static const int kZPositionFieldNumber = 3;
  float z_position() const;
  void set_z_position(float value);

  // required float diameter = 4;
  bool has_diameter() const;
  void clear_diameter();
  static const int kDiameterFieldNumber = 4;
  float diameter() const;
  void set_diameter(float value);

  // @@protoc_insertion_point(class_scope:com.cwrubotix.glennifer.ObstaclePosition)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  float x_position_;
  float y_position_;
  float z_position_;
  float diameter_;
  friend struct ::TableStruct_messages_2eproto;
};
// -------------------------------------------------------------------

class LaunchTransit : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.cwrubotix.glennifer.LaunchTransit) */ {
 public:
  LaunchTransit();
  virtual ~LaunchTransit();

  LaunchTransit(const LaunchTransit& from);

  inline LaunchTransit& operator=(const LaunchTransit& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LaunchTransit(LaunchTransit&& from) noexcept
    : LaunchTransit() {
    *this = ::std::move(from);
  }

  inline LaunchTransit& operator=(LaunchTransit&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const LaunchTransit& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LaunchTransit* internal_default_instance() {
    return reinterpret_cast<const LaunchTransit*>(
               &_LaunchTransit_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  void Swap(LaunchTransit* other);
  friend void swap(LaunchTransit& a, LaunchTransit& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LaunchTransit* New() const final {
    return CreateMaybeMessage<LaunchTransit>(NULL);
  }

  LaunchTransit* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LaunchTransit>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LaunchTransit& from);
  void MergeFrom(const LaunchTransit& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LaunchTransit* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .com.cwrubotix.glennifer.UnixTime timestamp = 7;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 7;
  const ::com::cwrubotix::glennifer::UnixTime& timestamp() const;
  ::com::cwrubotix::glennifer::UnixTime* release_timestamp();
  ::com::cwrubotix::glennifer::UnixTime* mutable_timestamp();
  void set_allocated_timestamp(::com::cwrubotix::glennifer::UnixTime* timestamp);

  // required float cur_x_pos = 1;
  bool has_cur_x_pos() const;
  void clear_cur_x_pos();
  static const int kCurXPosFieldNumber = 1;
  float cur_x_pos() const;
  void set_cur_x_pos(float value);

  // required float cur_y_pos = 2;
  bool has_cur_y_pos() const;
  void clear_cur_y_pos();
  static const int kCurYPosFieldNumber = 2;
  float cur_y_pos() const;
  void set_cur_y_pos(float value);

  // required float cur_heading = 3;
  bool has_cur_heading() const;
  void clear_cur_heading();
  static const int kCurHeadingFieldNumber = 3;
  float cur_heading() const;
  void set_cur_heading(float value);

  // required float dest_x_pos = 4;
  bool has_dest_x_pos() const;
  void clear_dest_x_pos();
  static const int kDestXPosFieldNumber = 4;
  float dest_x_pos() const;
  void set_dest_x_pos(float value);

  // required float dest_y_pos = 5;
  bool has_dest_y_pos() const;
  void clear_dest_y_pos();
  static const int kDestYPosFieldNumber = 5;
  float dest_y_pos() const;
  void set_dest_y_pos(float value);

  // required float time_alloc = 6;
  bool has_time_alloc() const;
  void clear_time_alloc();
  static const int kTimeAllocFieldNumber = 6;
  float time_alloc() const;
  void set_time_alloc(float value);

  // @@protoc_insertion_point(class_scope:com.cwrubotix.glennifer.LaunchTransit)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::com::cwrubotix::glennifer::UnixTime* timestamp_;
  float cur_x_pos_;
  float cur_y_pos_;
  float cur_heading_;
  float dest_x_pos_;
  float dest_y_pos_;
  float time_alloc_;
  friend struct ::TableStruct_messages_2eproto;
};
// -------------------------------------------------------------------

class LaunchDrill : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.cwrubotix.glennifer.LaunchDrill) */ {
 public:
  LaunchDrill();
  virtual ~LaunchDrill();

  LaunchDrill(const LaunchDrill& from);

  inline LaunchDrill& operator=(const LaunchDrill& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LaunchDrill(LaunchDrill&& from) noexcept
    : LaunchDrill() {
    *this = ::std::move(from);
  }

  inline LaunchDrill& operator=(LaunchDrill&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const LaunchDrill& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LaunchDrill* internal_default_instance() {
    return reinterpret_cast<const LaunchDrill*>(
               &_LaunchDrill_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  void Swap(LaunchDrill* other);
  friend void swap(LaunchDrill& a, LaunchDrill& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LaunchDrill* New() const final {
    return CreateMaybeMessage<LaunchDrill>(NULL);
  }

  LaunchDrill* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LaunchDrill>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LaunchDrill& from);
  void MergeFrom(const LaunchDrill& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LaunchDrill* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .com.cwrubotix.glennifer.UnixTime timestamp = 7;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 7;
  const ::com::cwrubotix::glennifer::UnixTime& timestamp() const;
  ::com::cwrubotix::glennifer::UnixTime* release_timestamp();
  ::com::cwrubotix::glennifer::UnixTime* mutable_timestamp();
  void set_allocated_timestamp(::com::cwrubotix::glennifer::UnixTime* timestamp);

  // required float current_x = 1;
  bool has_current_x() const;
  void clear_current_x();
  static const int kCurrentXFieldNumber = 1;
  float current_x() const;
  void set_current_x(float value);

  // required float current_y = 2;
  bool has_current_y() const;
  void clear_current_y();
  static const int kCurrentYFieldNumber = 2;
  float current_y() const;
  void set_current_y(float value);

  // required float current_Heading = 3;
  bool has_current_heading() const;
  void clear_current_heading();
  static const int kCurrentHeadingFieldNumber = 3;
  float current_heading() const;
  void set_current_heading(float value);

  // required float load_desired = 4;
  bool has_load_desired() const;
  void clear_load_desired();
  static const int kLoadDesiredFieldNumber = 4;
  float load_desired() const;
  void set_load_desired(float value);

  // required bool start = 5;
  bool has_start() const;
  void clear_start();
  static const int kStartFieldNumber = 5;
  bool start() const;
  void set_start(bool value);

  // required float time_allocation = 6;
  bool has_time_allocation() const;
  void clear_time_allocation();
  static const int kTimeAllocationFieldNumber = 6;
  float time_allocation() const;
  void set_time_allocation(float value);

  // @@protoc_insertion_point(class_scope:com.cwrubotix.glennifer.LaunchDrill)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::com::cwrubotix::glennifer::UnixTime* timestamp_;
  float current_x_;
  float current_y_;
  float current_heading_;
  float load_desired_;
  bool start_;
  float time_allocation_;
  friend struct ::TableStruct_messages_2eproto;
};
// -------------------------------------------------------------------

class LaunchDump : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.cwrubotix.glennifer.LaunchDump) */ {
 public:
  LaunchDump();
  virtual ~LaunchDump();

  LaunchDump(const LaunchDump& from);

  inline LaunchDump& operator=(const LaunchDump& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LaunchDump(LaunchDump&& from) noexcept
    : LaunchDump() {
    *this = ::std::move(from);
  }

  inline LaunchDump& operator=(LaunchDump&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const LaunchDump& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LaunchDump* internal_default_instance() {
    return reinterpret_cast<const LaunchDump*>(
               &_LaunchDump_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  void Swap(LaunchDump* other);
  friend void swap(LaunchDump& a, LaunchDump& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LaunchDump* New() const final {
    return CreateMaybeMessage<LaunchDump>(NULL);
  }

  LaunchDump* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LaunchDump>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LaunchDump& from);
  void MergeFrom(const LaunchDump& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LaunchDump* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .com.cwrubotix.glennifer.UnixTime timestamp = 5;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 5;
  const ::com::cwrubotix::glennifer::UnixTime& timestamp() const;
  ::com::cwrubotix::glennifer::UnixTime* release_timestamp();
  ::com::cwrubotix::glennifer::UnixTime* mutable_timestamp();
  void set_allocated_timestamp(::com::cwrubotix::glennifer::UnixTime* timestamp);

  // required float current_length = 1;
  bool has_current_length() const;
  void clear_current_length();
  static const int kCurrentLengthFieldNumber = 1;
  float current_length() const;
  void set_current_length(float value);

  // required float current_angle = 2;
  bool has_current_angle() const;
  void clear_current_angle();
  static const int kCurrentAngleFieldNumber = 2;
  float current_angle() const;
  void set_current_angle(float value);

  // required bool start = 3;
  bool has_start() const;
  void clear_start();
  static const int kStartFieldNumber = 3;
  bool start() const;
  void set_start(bool value);

  // required float time_allocation = 4;
  bool has_time_allocation() const;
  void clear_time_allocation();
  static const int kTimeAllocationFieldNumber = 4;
  float time_allocation() const;
  void set_time_allocation(float value);

  // @@protoc_insertion_point(class_scope:com.cwrubotix.glennifer.LaunchDump)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::com::cwrubotix::glennifer::UnixTime* timestamp_;
  float current_length_;
  float current_angle_;
  bool start_;
  float time_allocation_;
  friend struct ::TableStruct_messages_2eproto;
};
// -------------------------------------------------------------------

class ProgressReport : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.cwrubotix.glennifer.ProgressReport) */ {
 public:
  ProgressReport();
  virtual ~ProgressReport();

  ProgressReport(const ProgressReport& from);

  inline ProgressReport& operator=(const ProgressReport& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProgressReport(ProgressReport&& from) noexcept
    : ProgressReport() {
    *this = ::std::move(from);
  }

  inline ProgressReport& operator=(ProgressReport&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ProgressReport& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProgressReport* internal_default_instance() {
    return reinterpret_cast<const ProgressReport*>(
               &_ProgressReport_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  void Swap(ProgressReport* other);
  friend void swap(ProgressReport& a, ProgressReport& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProgressReport* New() const final {
    return CreateMaybeMessage<ProgressReport>(NULL);
  }

  ProgressReport* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ProgressReport>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ProgressReport& from);
  void MergeFrom(const ProgressReport& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProgressReport* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .com.cwrubotix.glennifer.UnixTime timestamp = 2;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 2;
  const ::com::cwrubotix::glennifer::UnixTime& timestamp() const;
  ::com::cwrubotix::glennifer::UnixTime* release_timestamp();
  ::com::cwrubotix::glennifer::UnixTime* mutable_timestamp();
  void set_allocated_timestamp(::com::cwrubotix::glennifer::UnixTime* timestamp);

  // required bool done = 1;
  bool has_done() const;
  void clear_done();
  static const int kDoneFieldNumber = 1;
  bool done() const;
  void set_done(bool value);

  // @@protoc_insertion_point(class_scope:com.cwrubotix.glennifer.ProgressReport)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::com::cwrubotix::glennifer::UnixTime* timestamp_;
  bool done_;
  friend struct ::TableStruct_messages_2eproto;
};
// -------------------------------------------------------------------

class ErrorReport : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.cwrubotix.glennifer.ErrorReport) */ {
 public:
  ErrorReport();
  virtual ~ErrorReport();

  ErrorReport(const ErrorReport& from);

  inline ErrorReport& operator=(const ErrorReport& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ErrorReport(ErrorReport&& from) noexcept
    : ErrorReport() {
    *this = ::std::move(from);
  }

  inline ErrorReport& operator=(ErrorReport&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ErrorReport& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ErrorReport* internal_default_instance() {
    return reinterpret_cast<const ErrorReport*>(
               &_ErrorReport_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  void Swap(ErrorReport* other);
  friend void swap(ErrorReport& a, ErrorReport& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ErrorReport* New() const final {
    return CreateMaybeMessage<ErrorReport>(NULL);
  }

  ErrorReport* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ErrorReport>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ErrorReport& from);
  void MergeFrom(const ErrorReport& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ErrorReport* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .com.cwrubotix.glennifer.UnixTime timestamp = 2;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 2;
  const ::com::cwrubotix::glennifer::UnixTime& timestamp() const;
  ::com::cwrubotix::glennifer::UnixTime* release_timestamp();
  ::com::cwrubotix::glennifer::UnixTime* mutable_timestamp();
  void set_allocated_timestamp(::com::cwrubotix::glennifer::UnixTime* timestamp);

  // required bool resolved = 1;
  bool has_resolved() const;
  void clear_resolved();
  static const int kResolvedFieldNumber = 1;
  bool resolved() const;
  void set_resolved(bool value);

  // @@protoc_insertion_point(class_scope:com.cwrubotix.glennifer.ErrorReport)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::com::cwrubotix::glennifer::UnixTime* timestamp_;
  bool resolved_;
  friend struct ::TableStruct_messages_2eproto;
};
// -------------------------------------------------------------------

class TransitSoftStop : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.cwrubotix.glennifer.TransitSoftStop) */ {
 public:
  TransitSoftStop();
  virtual ~TransitSoftStop();

  TransitSoftStop(const TransitSoftStop& from);

  inline TransitSoftStop& operator=(const TransitSoftStop& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TransitSoftStop(TransitSoftStop&& from) noexcept
    : TransitSoftStop() {
    *this = ::std::move(from);
  }

  inline TransitSoftStop& operator=(TransitSoftStop&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const TransitSoftStop& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TransitSoftStop* internal_default_instance() {
    return reinterpret_cast<const TransitSoftStop*>(
               &_TransitSoftStop_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  void Swap(TransitSoftStop* other);
  friend void swap(TransitSoftStop& a, TransitSoftStop& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TransitSoftStop* New() const final {
    return CreateMaybeMessage<TransitSoftStop>(NULL);
  }

  TransitSoftStop* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TransitSoftStop>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TransitSoftStop& from);
  void MergeFrom(const TransitSoftStop& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TransitSoftStop* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .com.cwrubotix.glennifer.UnixTime timestamp = 3;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 3;
  const ::com::cwrubotix::glennifer::UnixTime& timestamp() const;
  ::com::cwrubotix::glennifer::UnixTime* release_timestamp();
  ::com::cwrubotix::glennifer::UnixTime* mutable_timestamp();
  void set_allocated_timestamp(::com::cwrubotix::glennifer::UnixTime* timestamp);

  // required float timeLeft = 1;
  bool has_timeleft() const;
  void clear_timeleft();
  static const int kTimeLeftFieldNumber = 1;
  float timeleft() const;
  void set_timeleft(float value);

  // required bool stop = 2;
  bool has_stop() const;
  void clear_stop();
  static const int kStopFieldNumber = 2;
  bool stop() const;
  void set_stop(bool value);

  // @@protoc_insertion_point(class_scope:com.cwrubotix.glennifer.TransitSoftStop)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::com::cwrubotix::glennifer::UnixTime* timestamp_;
  float timeleft_;
  bool stop_;
  friend struct ::TableStruct_messages_2eproto;
};
// -------------------------------------------------------------------

class DrillSoftStop : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.cwrubotix.glennifer.DrillSoftStop) */ {
 public:
  DrillSoftStop();
  virtual ~DrillSoftStop();

  DrillSoftStop(const DrillSoftStop& from);

  inline DrillSoftStop& operator=(const DrillSoftStop& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DrillSoftStop(DrillSoftStop&& from) noexcept
    : DrillSoftStop() {
    *this = ::std::move(from);
  }

  inline DrillSoftStop& operator=(DrillSoftStop&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const DrillSoftStop& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DrillSoftStop* internal_default_instance() {
    return reinterpret_cast<const DrillSoftStop*>(
               &_DrillSoftStop_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    37;

  void Swap(DrillSoftStop* other);
  friend void swap(DrillSoftStop& a, DrillSoftStop& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DrillSoftStop* New() const final {
    return CreateMaybeMessage<DrillSoftStop>(NULL);
  }

  DrillSoftStop* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DrillSoftStop>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DrillSoftStop& from);
  void MergeFrom(const DrillSoftStop& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DrillSoftStop* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .com.cwrubotix.glennifer.UnixTime timestamp = 3;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 3;
  const ::com::cwrubotix::glennifer::UnixTime& timestamp() const;
  ::com::cwrubotix::glennifer::UnixTime* release_timestamp();
  ::com::cwrubotix::glennifer::UnixTime* mutable_timestamp();
  void set_allocated_timestamp(::com::cwrubotix::glennifer::UnixTime* timestamp);

  // required float timeLeft = 1;
  bool has_timeleft() const;
  void clear_timeleft();
  static const int kTimeLeftFieldNumber = 1;
  float timeleft() const;
  void set_timeleft(float value);

  // required bool stop = 2;
  bool has_stop() const;
  void clear_stop();
  static const int kStopFieldNumber = 2;
  bool stop() const;
  void set_stop(bool value);

  // @@protoc_insertion_point(class_scope:com.cwrubotix.glennifer.DrillSoftStop)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::com::cwrubotix::glennifer::UnixTime* timestamp_;
  float timeleft_;
  bool stop_;
  friend struct ::TableStruct_messages_2eproto;
};
// -------------------------------------------------------------------

class DumpSoftStop : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.cwrubotix.glennifer.DumpSoftStop) */ {
 public:
  DumpSoftStop();
  virtual ~DumpSoftStop();

  DumpSoftStop(const DumpSoftStop& from);

  inline DumpSoftStop& operator=(const DumpSoftStop& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DumpSoftStop(DumpSoftStop&& from) noexcept
    : DumpSoftStop() {
    *this = ::std::move(from);
  }

  inline DumpSoftStop& operator=(DumpSoftStop&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const DumpSoftStop& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DumpSoftStop* internal_default_instance() {
    return reinterpret_cast<const DumpSoftStop*>(
               &_DumpSoftStop_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    38;

  void Swap(DumpSoftStop* other);
  friend void swap(DumpSoftStop& a, DumpSoftStop& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DumpSoftStop* New() const final {
    return CreateMaybeMessage<DumpSoftStop>(NULL);
  }

  DumpSoftStop* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DumpSoftStop>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DumpSoftStop& from);
  void MergeFrom(const DumpSoftStop& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DumpSoftStop* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .com.cwrubotix.glennifer.UnixTime timestamp = 3;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 3;
  const ::com::cwrubotix::glennifer::UnixTime& timestamp() const;
  ::com::cwrubotix::glennifer::UnixTime* release_timestamp();
  ::com::cwrubotix::glennifer::UnixTime* mutable_timestamp();
  void set_allocated_timestamp(::com::cwrubotix::glennifer::UnixTime* timestamp);

  // required float timeLeft = 1;
  bool has_timeleft() const;
  void clear_timeleft();
  static const int kTimeLeftFieldNumber = 1;
  float timeleft() const;
  void set_timeleft(float value);

  // required bool stop = 2;
  bool has_stop() const;
  void clear_stop();
  static const int kStopFieldNumber = 2;
  bool stop() const;
  void set_stop(bool value);

  // @@protoc_insertion_point(class_scope:com.cwrubotix.glennifer.DumpSoftStop)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::com::cwrubotix::glennifer::UnixTime* timestamp_;
  float timeleft_;
  bool stop_;
  friend struct ::TableStruct_messages_2eproto;
};
// -------------------------------------------------------------------

class TransitHardStop : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.cwrubotix.glennifer.TransitHardStop) */ {
 public:
  TransitHardStop();
  virtual ~TransitHardStop();

  TransitHardStop(const TransitHardStop& from);

  inline TransitHardStop& operator=(const TransitHardStop& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TransitHardStop(TransitHardStop&& from) noexcept
    : TransitHardStop() {
    *this = ::std::move(from);
  }

  inline TransitHardStop& operator=(TransitHardStop&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const TransitHardStop& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TransitHardStop* internal_default_instance() {
    return reinterpret_cast<const TransitHardStop*>(
               &_TransitHardStop_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    39;

  void Swap(TransitHardStop* other);
  friend void swap(TransitHardStop& a, TransitHardStop& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TransitHardStop* New() const final {
    return CreateMaybeMessage<TransitHardStop>(NULL);
  }

  TransitHardStop* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TransitHardStop>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TransitHardStop& from);
  void MergeFrom(const TransitHardStop& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TransitHardStop* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .com.cwrubotix.glennifer.UnixTime timestamp = 2;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 2;
  const ::com::cwrubotix::glennifer::UnixTime& timestamp() const;
  ::com::cwrubotix::glennifer::UnixTime* release_timestamp();
  ::com::cwrubotix::glennifer::UnixTime* mutable_timestamp();
  void set_allocated_timestamp(::com::cwrubotix::glennifer::UnixTime* timestamp);

  // required bool stop = 1;
  bool has_stop() const;
  void clear_stop();
  static const int kStopFieldNumber = 1;
  bool stop() const;
  void set_stop(bool value);

  // @@protoc_insertion_point(class_scope:com.cwrubotix.glennifer.TransitHardStop)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::com::cwrubotix::glennifer::UnixTime* timestamp_;
  bool stop_;
  friend struct ::TableStruct_messages_2eproto;
};
// -------------------------------------------------------------------

class DrillHardStop : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.cwrubotix.glennifer.DrillHardStop) */ {
 public:
  DrillHardStop();
  virtual ~DrillHardStop();

  DrillHardStop(const DrillHardStop& from);

  inline DrillHardStop& operator=(const DrillHardStop& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DrillHardStop(DrillHardStop&& from) noexcept
    : DrillHardStop() {
    *this = ::std::move(from);
  }

  inline DrillHardStop& operator=(DrillHardStop&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const DrillHardStop& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DrillHardStop* internal_default_instance() {
    return reinterpret_cast<const DrillHardStop*>(
               &_DrillHardStop_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    40;

  void Swap(DrillHardStop* other);
  friend void swap(DrillHardStop& a, DrillHardStop& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DrillHardStop* New() const final {
    return CreateMaybeMessage<DrillHardStop>(NULL);
  }

  DrillHardStop* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DrillHardStop>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DrillHardStop& from);
  void MergeFrom(const DrillHardStop& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DrillHardStop* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .com.cwrubotix.glennifer.UnixTime timestamp = 2;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 2;
  const ::com::cwrubotix::glennifer::UnixTime& timestamp() const;
  ::com::cwrubotix::glennifer::UnixTime* release_timestamp();
  ::com::cwrubotix::glennifer::UnixTime* mutable_timestamp();
  void set_allocated_timestamp(::com::cwrubotix::glennifer::UnixTime* timestamp);

  // required bool stop = 1;
  bool has_stop() const;
  void clear_stop();
  static const int kStopFieldNumber = 1;
  bool stop() const;
  void set_stop(bool value);

  // @@protoc_insertion_point(class_scope:com.cwrubotix.glennifer.DrillHardStop)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::com::cwrubotix::glennifer::UnixTime* timestamp_;
  bool stop_;
  friend struct ::TableStruct_messages_2eproto;
};
// -------------------------------------------------------------------

class DumpHardStop : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.cwrubotix.glennifer.DumpHardStop) */ {
 public:
  DumpHardStop();
  virtual ~DumpHardStop();

  DumpHardStop(const DumpHardStop& from);

  inline DumpHardStop& operator=(const DumpHardStop& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DumpHardStop(DumpHardStop&& from) noexcept
    : DumpHardStop() {
    *this = ::std::move(from);
  }

  inline DumpHardStop& operator=(DumpHardStop&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const DumpHardStop& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DumpHardStop* internal_default_instance() {
    return reinterpret_cast<const DumpHardStop*>(
               &_DumpHardStop_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    41;

  void Swap(DumpHardStop* other);
  friend void swap(DumpHardStop& a, DumpHardStop& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DumpHardStop* New() const final {
    return CreateMaybeMessage<DumpHardStop>(NULL);
  }

  DumpHardStop* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DumpHardStop>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DumpHardStop& from);
  void MergeFrom(const DumpHardStop& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DumpHardStop* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .com.cwrubotix.glennifer.UnixTime timestamp = 2;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 2;
  const ::com::cwrubotix::glennifer::UnixTime& timestamp() const;
  ::com::cwrubotix::glennifer::UnixTime* release_timestamp();
  ::com::cwrubotix::glennifer::UnixTime* mutable_timestamp();
  void set_allocated_timestamp(::com::cwrubotix::glennifer::UnixTime* timestamp);

  // required bool stop = 1;
  bool has_stop() const;
  void clear_stop();
  static const int kStopFieldNumber = 1;
  bool stop() const;
  void set_stop(bool value);

  // @@protoc_insertion_point(class_scope:com.cwrubotix.glennifer.DumpHardStop)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::com::cwrubotix::glennifer::UnixTime* timestamp_;
  bool stop_;
  friend struct ::TableStruct_messages_2eproto;
};
// -------------------------------------------------------------------

class TransitNewObstacle : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.cwrubotix.glennifer.TransitNewObstacle) */ {
 public:
  TransitNewObstacle();
  virtual ~TransitNewObstacle();

  TransitNewObstacle(const TransitNewObstacle& from);

  inline TransitNewObstacle& operator=(const TransitNewObstacle& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TransitNewObstacle(TransitNewObstacle&& from) noexcept
    : TransitNewObstacle() {
    *this = ::std::move(from);
  }

  inline TransitNewObstacle& operator=(TransitNewObstacle&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const TransitNewObstacle& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TransitNewObstacle* internal_default_instance() {
    return reinterpret_cast<const TransitNewObstacle*>(
               &_TransitNewObstacle_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    42;

  void Swap(TransitNewObstacle* other);
  friend void swap(TransitNewObstacle& a, TransitNewObstacle& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TransitNewObstacle* New() const final {
    return CreateMaybeMessage<TransitNewObstacle>(NULL);
  }

  TransitNewObstacle* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TransitNewObstacle>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TransitNewObstacle& from);
  void MergeFrom(const TransitNewObstacle& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TransitNewObstacle* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .com.cwrubotix.glennifer.UnixTime timestamp = 4;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 4;
  const ::com::cwrubotix::glennifer::UnixTime& timestamp() const;
  ::com::cwrubotix::glennifer::UnixTime* release_timestamp();
  ::com::cwrubotix::glennifer::UnixTime* mutable_timestamp();
  void set_allocated_timestamp(::com::cwrubotix::glennifer::UnixTime* timestamp);

  // required float x_pos = 1;
  bool has_x_pos() const;
  void clear_x_pos();
  static const int kXPosFieldNumber = 1;
  float x_pos() const;
  void set_x_pos(float value);

  // required float y_pos = 2;
  bool has_y_pos() const;
  void clear_y_pos();
  static const int kYPosFieldNumber = 2;
  float y_pos() const;
  void set_y_pos(float value);

  // required float diameter = 3;
  bool has_diameter() const;
  void clear_diameter();
  static const int kDiameterFieldNumber = 3;
  float diameter() const;
  void set_diameter(float value);

  // @@protoc_insertion_point(class_scope:com.cwrubotix.glennifer.TransitNewObstacle)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::com::cwrubotix::glennifer::UnixTime* timestamp_;
  float x_pos_;
  float y_pos_;
  float diameter_;
  friend struct ::TableStruct_messages_2eproto;
};
// -------------------------------------------------------------------

class AutonomyNextHeading : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.cwrubotix.glennifer.AutonomyNextHeading) */ {
 public:
  AutonomyNextHeading();
  virtual ~AutonomyNextHeading();

  AutonomyNextHeading(const AutonomyNextHeading& from);

  inline AutonomyNextHeading& operator=(const AutonomyNextHeading& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AutonomyNextHeading(AutonomyNextHeading&& from) noexcept
    : AutonomyNextHeading() {
    *this = ::std::move(from);
  }

  inline AutonomyNextHeading& operator=(AutonomyNextHeading&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const AutonomyNextHeading& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AutonomyNextHeading* internal_default_instance() {
    return reinterpret_cast<const AutonomyNextHeading*>(
               &_AutonomyNextHeading_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    43;

  void Swap(AutonomyNextHeading* other);
  friend void swap(AutonomyNextHeading& a, AutonomyNextHeading& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AutonomyNextHeading* New() const final {
    return CreateMaybeMessage<AutonomyNextHeading>(NULL);
  }

  AutonomyNextHeading* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AutonomyNextHeading>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AutonomyNextHeading& from);
  void MergeFrom(const AutonomyNextHeading& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AutonomyNextHeading* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .com.cwrubotix.glennifer.UnixTime timestamp = 2;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 2;
  const ::com::cwrubotix::glennifer::UnixTime& timestamp() const;
  ::com::cwrubotix::glennifer::UnixTime* release_timestamp();
  ::com::cwrubotix::glennifer::UnixTime* mutable_timestamp();
  void set_allocated_timestamp(::com::cwrubotix::glennifer::UnixTime* timestamp);

  // required float heading = 1;
  bool has_heading() const;
  void clear_heading();
  static const int kHeadingFieldNumber = 1;
  float heading() const;
  void set_heading(float value);

  // @@protoc_insertion_point(class_scope:com.cwrubotix.glennifer.AutonomyNextHeading)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::com::cwrubotix::glennifer::UnixTime* timestamp_;
  float heading_;
  friend struct ::TableStruct_messages_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// UnixTime

// required uint64 time_int = 1;
inline bool UnixTime::has_time_int() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UnixTime::clear_time_int() {
  time_int_ = GOOGLE_PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 UnixTime::time_int() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.UnixTime.time_int)
  return time_int_;
}
inline void UnixTime::set_time_int(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  time_int_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.UnixTime.time_int)
}

// required float time_frac = 2;
inline bool UnixTime::has_time_frac() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UnixTime::clear_time_frac() {
  time_frac_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float UnixTime::time_frac() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.UnixTime.time_frac)
  return time_frac_;
}
inline void UnixTime::set_time_frac(float value) {
  _has_bits_[0] |= 0x00000002u;
  time_frac_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.UnixTime.time_frac)
}

// -------------------------------------------------------------------

// RpmUpdate

// required float rpm = 1;
inline bool RpmUpdate::has_rpm() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RpmUpdate::clear_rpm() {
  rpm_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float RpmUpdate::rpm() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.RpmUpdate.rpm)
  return rpm_;
}
inline void RpmUpdate::set_rpm(float value) {
  _has_bits_[0] |= 0x00000002u;
  rpm_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.RpmUpdate.rpm)
}

// required .com.cwrubotix.glennifer.UnixTime timestamp = 2;
inline bool RpmUpdate::has_timestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RpmUpdate::clear_timestamp() {
  if (timestamp_ != NULL) timestamp_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::com::cwrubotix::glennifer::UnixTime& RpmUpdate::timestamp() const {
  const ::com::cwrubotix::glennifer::UnixTime* p = timestamp_;
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.RpmUpdate.timestamp)
  return p != NULL ? *p : *reinterpret_cast<const ::com::cwrubotix::glennifer::UnixTime*>(
      &::com::cwrubotix::glennifer::_UnixTime_default_instance_);
}
inline ::com::cwrubotix::glennifer::UnixTime* RpmUpdate::release_timestamp() {
  // @@protoc_insertion_point(field_release:com.cwrubotix.glennifer.RpmUpdate.timestamp)
  _has_bits_[0] &= ~0x00000001u;
  ::com::cwrubotix::glennifer::UnixTime* temp = timestamp_;
  timestamp_ = NULL;
  return temp;
}
inline ::com::cwrubotix::glennifer::UnixTime* RpmUpdate::mutable_timestamp() {
  _has_bits_[0] |= 0x00000001u;
  if (timestamp_ == NULL) {
    auto* p = CreateMaybeMessage<::com::cwrubotix::glennifer::UnixTime>(GetArenaNoVirtual());
    timestamp_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.cwrubotix.glennifer.RpmUpdate.timestamp)
  return timestamp_;
}
inline void RpmUpdate::set_allocated_timestamp(::com::cwrubotix::glennifer::UnixTime* timestamp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete timestamp_;
  }
  if (timestamp) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      timestamp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, timestamp, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  timestamp_ = timestamp;
  // @@protoc_insertion_point(field_set_allocated:com.cwrubotix.glennifer.RpmUpdate.timestamp)
}

// -------------------------------------------------------------------

// DisplacementUpdate

// required float displacement = 1;
inline bool DisplacementUpdate::has_displacement() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DisplacementUpdate::clear_displacement() {
  displacement_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float DisplacementUpdate::displacement() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.DisplacementUpdate.displacement)
  return displacement_;
}
inline void DisplacementUpdate::set_displacement(float value) {
  _has_bits_[0] |= 0x00000002u;
  displacement_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.DisplacementUpdate.displacement)
}

// required .com.cwrubotix.glennifer.UnixTime timestamp = 2;
inline bool DisplacementUpdate::has_timestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DisplacementUpdate::clear_timestamp() {
  if (timestamp_ != NULL) timestamp_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::com::cwrubotix::glennifer::UnixTime& DisplacementUpdate::timestamp() const {
  const ::com::cwrubotix::glennifer::UnixTime* p = timestamp_;
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.DisplacementUpdate.timestamp)
  return p != NULL ? *p : *reinterpret_cast<const ::com::cwrubotix::glennifer::UnixTime*>(
      &::com::cwrubotix::glennifer::_UnixTime_default_instance_);
}
inline ::com::cwrubotix::glennifer::UnixTime* DisplacementUpdate::release_timestamp() {
  // @@protoc_insertion_point(field_release:com.cwrubotix.glennifer.DisplacementUpdate.timestamp)
  _has_bits_[0] &= ~0x00000001u;
  ::com::cwrubotix::glennifer::UnixTime* temp = timestamp_;
  timestamp_ = NULL;
  return temp;
}
inline ::com::cwrubotix::glennifer::UnixTime* DisplacementUpdate::mutable_timestamp() {
  _has_bits_[0] |= 0x00000001u;
  if (timestamp_ == NULL) {
    auto* p = CreateMaybeMessage<::com::cwrubotix::glennifer::UnixTime>(GetArenaNoVirtual());
    timestamp_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.cwrubotix.glennifer.DisplacementUpdate.timestamp)
  return timestamp_;
}
inline void DisplacementUpdate::set_allocated_timestamp(::com::cwrubotix::glennifer::UnixTime* timestamp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete timestamp_;
  }
  if (timestamp) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      timestamp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, timestamp, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  timestamp_ = timestamp;
  // @@protoc_insertion_point(field_set_allocated:com.cwrubotix.glennifer.DisplacementUpdate.timestamp)
}

// -------------------------------------------------------------------

// PositionUpdate

// required float position = 1;
inline bool PositionUpdate::has_position() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PositionUpdate::clear_position() {
  position_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float PositionUpdate::position() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.PositionUpdate.position)
  return position_;
}
inline void PositionUpdate::set_position(float value) {
  _has_bits_[0] |= 0x00000002u;
  position_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.PositionUpdate.position)
}

// required .com.cwrubotix.glennifer.UnixTime timestamp = 2;
inline bool PositionUpdate::has_timestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PositionUpdate::clear_timestamp() {
  if (timestamp_ != NULL) timestamp_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::com::cwrubotix::glennifer::UnixTime& PositionUpdate::timestamp() const {
  const ::com::cwrubotix::glennifer::UnixTime* p = timestamp_;
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.PositionUpdate.timestamp)
  return p != NULL ? *p : *reinterpret_cast<const ::com::cwrubotix::glennifer::UnixTime*>(
      &::com::cwrubotix::glennifer::_UnixTime_default_instance_);
}
inline ::com::cwrubotix::glennifer::UnixTime* PositionUpdate::release_timestamp() {
  // @@protoc_insertion_point(field_release:com.cwrubotix.glennifer.PositionUpdate.timestamp)
  _has_bits_[0] &= ~0x00000001u;
  ::com::cwrubotix::glennifer::UnixTime* temp = timestamp_;
  timestamp_ = NULL;
  return temp;
}
inline ::com::cwrubotix::glennifer::UnixTime* PositionUpdate::mutable_timestamp() {
  _has_bits_[0] |= 0x00000001u;
  if (timestamp_ == NULL) {
    auto* p = CreateMaybeMessage<::com::cwrubotix::glennifer::UnixTime>(GetArenaNoVirtual());
    timestamp_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.cwrubotix.glennifer.PositionUpdate.timestamp)
  return timestamp_;
}
inline void PositionUpdate::set_allocated_timestamp(::com::cwrubotix::glennifer::UnixTime* timestamp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete timestamp_;
  }
  if (timestamp) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      timestamp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, timestamp, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  timestamp_ = timestamp;
  // @@protoc_insertion_point(field_set_allocated:com.cwrubotix.glennifer.PositionUpdate.timestamp)
}

// -------------------------------------------------------------------

// CurrentUpdate

// required float current = 1;
inline bool CurrentUpdate::has_current() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CurrentUpdate::clear_current() {
  current_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float CurrentUpdate::current() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.CurrentUpdate.current)
  return current_;
}
inline void CurrentUpdate::set_current(float value) {
  _has_bits_[0] |= 0x00000002u;
  current_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.CurrentUpdate.current)
}

// required .com.cwrubotix.glennifer.UnixTime timestamp = 2;
inline bool CurrentUpdate::has_timestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CurrentUpdate::clear_timestamp() {
  if (timestamp_ != NULL) timestamp_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::com::cwrubotix::glennifer::UnixTime& CurrentUpdate::timestamp() const {
  const ::com::cwrubotix::glennifer::UnixTime* p = timestamp_;
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.CurrentUpdate.timestamp)
  return p != NULL ? *p : *reinterpret_cast<const ::com::cwrubotix::glennifer::UnixTime*>(
      &::com::cwrubotix::glennifer::_UnixTime_default_instance_);
}
inline ::com::cwrubotix::glennifer::UnixTime* CurrentUpdate::release_timestamp() {
  // @@protoc_insertion_point(field_release:com.cwrubotix.glennifer.CurrentUpdate.timestamp)
  _has_bits_[0] &= ~0x00000001u;
  ::com::cwrubotix::glennifer::UnixTime* temp = timestamp_;
  timestamp_ = NULL;
  return temp;
}
inline ::com::cwrubotix::glennifer::UnixTime* CurrentUpdate::mutable_timestamp() {
  _has_bits_[0] |= 0x00000001u;
  if (timestamp_ == NULL) {
    auto* p = CreateMaybeMessage<::com::cwrubotix::glennifer::UnixTime>(GetArenaNoVirtual());
    timestamp_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.cwrubotix.glennifer.CurrentUpdate.timestamp)
  return timestamp_;
}
inline void CurrentUpdate::set_allocated_timestamp(::com::cwrubotix::glennifer::UnixTime* timestamp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete timestamp_;
  }
  if (timestamp) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      timestamp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, timestamp, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  timestamp_ = timestamp;
  // @@protoc_insertion_point(field_set_allocated:com.cwrubotix.glennifer.CurrentUpdate.timestamp)
}

// -------------------------------------------------------------------

// LimitUpdate

// required bool pressed = 1;
inline bool LimitUpdate::has_pressed() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LimitUpdate::clear_pressed() {
  pressed_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool LimitUpdate::pressed() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.LimitUpdate.pressed)
  return pressed_;
}
inline void LimitUpdate::set_pressed(bool value) {
  _has_bits_[0] |= 0x00000002u;
  pressed_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.LimitUpdate.pressed)
}

// required .com.cwrubotix.glennifer.UnixTime timestamp = 2;
inline bool LimitUpdate::has_timestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LimitUpdate::clear_timestamp() {
  if (timestamp_ != NULL) timestamp_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::com::cwrubotix::glennifer::UnixTime& LimitUpdate::timestamp() const {
  const ::com::cwrubotix::glennifer::UnixTime* p = timestamp_;
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.LimitUpdate.timestamp)
  return p != NULL ? *p : *reinterpret_cast<const ::com::cwrubotix::glennifer::UnixTime*>(
      &::com::cwrubotix::glennifer::_UnixTime_default_instance_);
}
inline ::com::cwrubotix::glennifer::UnixTime* LimitUpdate::release_timestamp() {
  // @@protoc_insertion_point(field_release:com.cwrubotix.glennifer.LimitUpdate.timestamp)
  _has_bits_[0] &= ~0x00000001u;
  ::com::cwrubotix::glennifer::UnixTime* temp = timestamp_;
  timestamp_ = NULL;
  return temp;
}
inline ::com::cwrubotix::glennifer::UnixTime* LimitUpdate::mutable_timestamp() {
  _has_bits_[0] |= 0x00000001u;
  if (timestamp_ == NULL) {
    auto* p = CreateMaybeMessage<::com::cwrubotix::glennifer::UnixTime>(GetArenaNoVirtual());
    timestamp_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.cwrubotix.glennifer.LimitUpdate.timestamp)
  return timestamp_;
}
inline void LimitUpdate::set_allocated_timestamp(::com::cwrubotix::glennifer::UnixTime* timestamp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete timestamp_;
  }
  if (timestamp) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      timestamp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, timestamp, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  timestamp_ = timestamp;
  // @@protoc_insertion_point(field_set_allocated:com.cwrubotix.glennifer.LimitUpdate.timestamp)
}

// -------------------------------------------------------------------

// ImuUpdate

// required float orientation = 1;
inline bool ImuUpdate::has_orientation() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ImuUpdate::clear_orientation() {
  orientation_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float ImuUpdate::orientation() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.ImuUpdate.orientation)
  return orientation_;
}
inline void ImuUpdate::set_orientation(float value) {
  _has_bits_[0] |= 0x00000002u;
  orientation_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.ImuUpdate.orientation)
}

// required .com.cwrubotix.glennifer.UnixTime timestamp = 2;
inline bool ImuUpdate::has_timestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ImuUpdate::clear_timestamp() {
  if (timestamp_ != NULL) timestamp_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::com::cwrubotix::glennifer::UnixTime& ImuUpdate::timestamp() const {
  const ::com::cwrubotix::glennifer::UnixTime* p = timestamp_;
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.ImuUpdate.timestamp)
  return p != NULL ? *p : *reinterpret_cast<const ::com::cwrubotix::glennifer::UnixTime*>(
      &::com::cwrubotix::glennifer::_UnixTime_default_instance_);
}
inline ::com::cwrubotix::glennifer::UnixTime* ImuUpdate::release_timestamp() {
  // @@protoc_insertion_point(field_release:com.cwrubotix.glennifer.ImuUpdate.timestamp)
  _has_bits_[0] &= ~0x00000001u;
  ::com::cwrubotix::glennifer::UnixTime* temp = timestamp_;
  timestamp_ = NULL;
  return temp;
}
inline ::com::cwrubotix::glennifer::UnixTime* ImuUpdate::mutable_timestamp() {
  _has_bits_[0] |= 0x00000001u;
  if (timestamp_ == NULL) {
    auto* p = CreateMaybeMessage<::com::cwrubotix::glennifer::UnixTime>(GetArenaNoVirtual());
    timestamp_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.cwrubotix.glennifer.ImuUpdate.timestamp)
  return timestamp_;
}
inline void ImuUpdate::set_allocated_timestamp(::com::cwrubotix::glennifer::UnixTime* timestamp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete timestamp_;
  }
  if (timestamp) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      timestamp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, timestamp, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  timestamp_ = timestamp;
  // @@protoc_insertion_point(field_set_allocated:com.cwrubotix.glennifer.ImuUpdate.timestamp)
}

// -------------------------------------------------------------------

// LoadUpdate

// required float load = 1;
inline bool LoadUpdate::has_load() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoadUpdate::clear_load() {
  load_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float LoadUpdate::load() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.LoadUpdate.load)
  return load_;
}
inline void LoadUpdate::set_load(float value) {
  _has_bits_[0] |= 0x00000002u;
  load_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.LoadUpdate.load)
}

// required .com.cwrubotix.glennifer.UnixTime timestamp = 2;
inline bool LoadUpdate::has_timestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoadUpdate::clear_timestamp() {
  if (timestamp_ != NULL) timestamp_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::com::cwrubotix::glennifer::UnixTime& LoadUpdate::timestamp() const {
  const ::com::cwrubotix::glennifer::UnixTime* p = timestamp_;
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.LoadUpdate.timestamp)
  return p != NULL ? *p : *reinterpret_cast<const ::com::cwrubotix::glennifer::UnixTime*>(
      &::com::cwrubotix::glennifer::_UnixTime_default_instance_);
}
inline ::com::cwrubotix::glennifer::UnixTime* LoadUpdate::release_timestamp() {
  // @@protoc_insertion_point(field_release:com.cwrubotix.glennifer.LoadUpdate.timestamp)
  _has_bits_[0] &= ~0x00000001u;
  ::com::cwrubotix::glennifer::UnixTime* temp = timestamp_;
  timestamp_ = NULL;
  return temp;
}
inline ::com::cwrubotix::glennifer::UnixTime* LoadUpdate::mutable_timestamp() {
  _has_bits_[0] |= 0x00000001u;
  if (timestamp_ == NULL) {
    auto* p = CreateMaybeMessage<::com::cwrubotix::glennifer::UnixTime>(GetArenaNoVirtual());
    timestamp_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.cwrubotix.glennifer.LoadUpdate.timestamp)
  return timestamp_;
}
inline void LoadUpdate::set_allocated_timestamp(::com::cwrubotix::glennifer::UnixTime* timestamp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete timestamp_;
  }
  if (timestamp) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      timestamp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, timestamp, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  timestamp_ = timestamp;
  // @@protoc_insertion_point(field_set_allocated:com.cwrubotix.glennifer.LoadUpdate.timestamp)
}

// -------------------------------------------------------------------

// CountUpdate

// required uint32 count = 1;
inline bool CountUpdate::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CountUpdate::clear_count() {
  count_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CountUpdate::count() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.CountUpdate.count)
  return count_;
}
inline void CountUpdate::set_count(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  count_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.CountUpdate.count)
}

// required .com.cwrubotix.glennifer.UnixTime timestamp = 2;
inline bool CountUpdate::has_timestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CountUpdate::clear_timestamp() {
  if (timestamp_ != NULL) timestamp_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::com::cwrubotix::glennifer::UnixTime& CountUpdate::timestamp() const {
  const ::com::cwrubotix::glennifer::UnixTime* p = timestamp_;
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.CountUpdate.timestamp)
  return p != NULL ? *p : *reinterpret_cast<const ::com::cwrubotix::glennifer::UnixTime*>(
      &::com::cwrubotix::glennifer::_UnixTime_default_instance_);
}
inline ::com::cwrubotix::glennifer::UnixTime* CountUpdate::release_timestamp() {
  // @@protoc_insertion_point(field_release:com.cwrubotix.glennifer.CountUpdate.timestamp)
  _has_bits_[0] &= ~0x00000001u;
  ::com::cwrubotix::glennifer::UnixTime* temp = timestamp_;
  timestamp_ = NULL;
  return temp;
}
inline ::com::cwrubotix::glennifer::UnixTime* CountUpdate::mutable_timestamp() {
  _has_bits_[0] |= 0x00000001u;
  if (timestamp_ == NULL) {
    auto* p = CreateMaybeMessage<::com::cwrubotix::glennifer::UnixTime>(GetArenaNoVirtual());
    timestamp_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.cwrubotix.glennifer.CountUpdate.timestamp)
  return timestamp_;
}
inline void CountUpdate::set_allocated_timestamp(::com::cwrubotix::glennifer::UnixTime* timestamp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete timestamp_;
  }
  if (timestamp) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      timestamp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, timestamp, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  timestamp_ = timestamp;
  // @@protoc_insertion_point(field_set_allocated:com.cwrubotix.glennifer.CountUpdate.timestamp)
}

// -------------------------------------------------------------------

// Fault

// required uint32 fault_code = 1;
inline bool Fault::has_fault_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Fault::clear_fault_code() {
  fault_code_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 Fault::fault_code() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.Fault.fault_code)
  return fault_code_;
}
inline void Fault::set_fault_code(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  fault_code_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.Fault.fault_code)
}

// required .com.cwrubotix.glennifer.UnixTime timestamp = 2;
inline bool Fault::has_timestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Fault::clear_timestamp() {
  if (timestamp_ != NULL) timestamp_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::com::cwrubotix::glennifer::UnixTime& Fault::timestamp() const {
  const ::com::cwrubotix::glennifer::UnixTime* p = timestamp_;
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.Fault.timestamp)
  return p != NULL ? *p : *reinterpret_cast<const ::com::cwrubotix::glennifer::UnixTime*>(
      &::com::cwrubotix::glennifer::_UnixTime_default_instance_);
}
inline ::com::cwrubotix::glennifer::UnixTime* Fault::release_timestamp() {
  // @@protoc_insertion_point(field_release:com.cwrubotix.glennifer.Fault.timestamp)
  _has_bits_[0] &= ~0x00000001u;
  ::com::cwrubotix::glennifer::UnixTime* temp = timestamp_;
  timestamp_ = NULL;
  return temp;
}
inline ::com::cwrubotix::glennifer::UnixTime* Fault::mutable_timestamp() {
  _has_bits_[0] |= 0x00000001u;
  if (timestamp_ == NULL) {
    auto* p = CreateMaybeMessage<::com::cwrubotix::glennifer::UnixTime>(GetArenaNoVirtual());
    timestamp_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.cwrubotix.glennifer.Fault.timestamp)
  return timestamp_;
}
inline void Fault::set_allocated_timestamp(::com::cwrubotix::glennifer::UnixTime* timestamp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete timestamp_;
  }
  if (timestamp) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      timestamp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, timestamp, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  timestamp_ = timestamp;
  // @@protoc_insertion_point(field_set_allocated:com.cwrubotix.glennifer.Fault.timestamp)
}

// repeated uint32 params = 3;
inline int Fault::params_size() const {
  return params_.size();
}
inline void Fault::clear_params() {
  params_.Clear();
}
inline ::google::protobuf::uint32 Fault::params(int index) const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.Fault.params)
  return params_.Get(index);
}
inline void Fault::set_params(int index, ::google::protobuf::uint32 value) {
  params_.Set(index, value);
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.Fault.params)
}
inline void Fault::add_params(::google::protobuf::uint32 value) {
  params_.Add(value);
  // @@protoc_insertion_point(field_add:com.cwrubotix.glennifer.Fault.params)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Fault::params() const {
  // @@protoc_insertion_point(field_list:com.cwrubotix.glennifer.Fault.params)
  return params_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Fault::mutable_params() {
  // @@protoc_insertion_point(field_mutable_list:com.cwrubotix.glennifer.Fault.params)
  return &params_;
}

// -------------------------------------------------------------------

// Adjustment

// optional .com.cwrubotix.glennifer.Fault source_fault = 1;
inline bool Adjustment::has_source_fault() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Adjustment::clear_source_fault() {
  if (source_fault_ != NULL) source_fault_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::com::cwrubotix::glennifer::Fault& Adjustment::source_fault() const {
  const ::com::cwrubotix::glennifer::Fault* p = source_fault_;
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.Adjustment.source_fault)
  return p != NULL ? *p : *reinterpret_cast<const ::com::cwrubotix::glennifer::Fault*>(
      &::com::cwrubotix::glennifer::_Fault_default_instance_);
}
inline ::com::cwrubotix::glennifer::Fault* Adjustment::release_source_fault() {
  // @@protoc_insertion_point(field_release:com.cwrubotix.glennifer.Adjustment.source_fault)
  _has_bits_[0] &= ~0x00000001u;
  ::com::cwrubotix::glennifer::Fault* temp = source_fault_;
  source_fault_ = NULL;
  return temp;
}
inline ::com::cwrubotix::glennifer::Fault* Adjustment::mutable_source_fault() {
  _has_bits_[0] |= 0x00000001u;
  if (source_fault_ == NULL) {
    auto* p = CreateMaybeMessage<::com::cwrubotix::glennifer::Fault>(GetArenaNoVirtual());
    source_fault_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.cwrubotix.glennifer.Adjustment.source_fault)
  return source_fault_;
}
inline void Adjustment::set_allocated_source_fault(::com::cwrubotix::glennifer::Fault* source_fault) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete source_fault_;
  }
  if (source_fault) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      source_fault = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, source_fault, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  source_fault_ = source_fault;
  // @@protoc_insertion_point(field_set_allocated:com.cwrubotix.glennifer.Adjustment.source_fault)
}

// required uint32 adjustment_code = 2;
inline bool Adjustment::has_adjustment_code() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Adjustment::clear_adjustment_code() {
  adjustment_code_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 Adjustment::adjustment_code() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.Adjustment.adjustment_code)
  return adjustment_code_;
}
inline void Adjustment::set_adjustment_code(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  adjustment_code_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.Adjustment.adjustment_code)
}

// required .com.cwrubotix.glennifer.UnixTime timestamp = 3;
inline bool Adjustment::has_timestamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Adjustment::clear_timestamp() {
  if (timestamp_ != NULL) timestamp_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::com::cwrubotix::glennifer::UnixTime& Adjustment::timestamp() const {
  const ::com::cwrubotix::glennifer::UnixTime* p = timestamp_;
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.Adjustment.timestamp)
  return p != NULL ? *p : *reinterpret_cast<const ::com::cwrubotix::glennifer::UnixTime*>(
      &::com::cwrubotix::glennifer::_UnixTime_default_instance_);
}
inline ::com::cwrubotix::glennifer::UnixTime* Adjustment::release_timestamp() {
  // @@protoc_insertion_point(field_release:com.cwrubotix.glennifer.Adjustment.timestamp)
  _has_bits_[0] &= ~0x00000002u;
  ::com::cwrubotix::glennifer::UnixTime* temp = timestamp_;
  timestamp_ = NULL;
  return temp;
}
inline ::com::cwrubotix::glennifer::UnixTime* Adjustment::mutable_timestamp() {
  _has_bits_[0] |= 0x00000002u;
  if (timestamp_ == NULL) {
    auto* p = CreateMaybeMessage<::com::cwrubotix::glennifer::UnixTime>(GetArenaNoVirtual());
    timestamp_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.cwrubotix.glennifer.Adjustment.timestamp)
  return timestamp_;
}
inline void Adjustment::set_allocated_timestamp(::com::cwrubotix::glennifer::UnixTime* timestamp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete timestamp_;
  }
  if (timestamp) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      timestamp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, timestamp, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  timestamp_ = timestamp;
  // @@protoc_insertion_point(field_set_allocated:com.cwrubotix.glennifer.Adjustment.timestamp)
}

// repeated uint32 params = 4;
inline int Adjustment::params_size() const {
  return params_.size();
}
inline void Adjustment::clear_params() {
  params_.Clear();
}
inline ::google::protobuf::uint32 Adjustment::params(int index) const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.Adjustment.params)
  return params_.Get(index);
}
inline void Adjustment::set_params(int index, ::google::protobuf::uint32 value) {
  params_.Set(index, value);
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.Adjustment.params)
}
inline void Adjustment::add_params(::google::protobuf::uint32 value) {
  params_.Add(value);
  // @@protoc_insertion_point(field_add:com.cwrubotix.glennifer.Adjustment.params)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Adjustment::params() const {
  // @@protoc_insertion_point(field_list:com.cwrubotix.glennifer.Adjustment.params)
  return params_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Adjustment::mutable_params() {
  // @@protoc_insertion_point(field_mutable_list:com.cwrubotix.glennifer.Adjustment.params)
  return &params_;
}

// -------------------------------------------------------------------

// SpeedControlCommand

// required float rpm = 1;
inline bool SpeedControlCommand::has_rpm() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SpeedControlCommand::clear_rpm() {
  rpm_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline float SpeedControlCommand::rpm() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.SpeedControlCommand.rpm)
  return rpm_;
}
inline void SpeedControlCommand::set_rpm(float value) {
  _has_bits_[0] |= 0x00000001u;
  rpm_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.SpeedControlCommand.rpm)
}

// required float timeout = 2;
inline bool SpeedControlCommand::has_timeout() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SpeedControlCommand::clear_timeout() {
  timeout_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float SpeedControlCommand::timeout() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.SpeedControlCommand.timeout)
  return timeout_;
}
inline void SpeedControlCommand::set_timeout(float value) {
  _has_bits_[0] |= 0x00000002u;
  timeout_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.SpeedControlCommand.timeout)
}

// -------------------------------------------------------------------

// AllWheelsCommand

// required float front_left = 1;
inline bool AllWheelsCommand::has_front_left() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AllWheelsCommand::clear_front_left() {
  front_left_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline float AllWheelsCommand::front_left() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.AllWheelsCommand.front_left)
  return front_left_;
}
inline void AllWheelsCommand::set_front_left(float value) {
  _has_bits_[0] |= 0x00000001u;
  front_left_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.AllWheelsCommand.front_left)
}

// required float front_right = 2;
inline bool AllWheelsCommand::has_front_right() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AllWheelsCommand::clear_front_right() {
  front_right_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float AllWheelsCommand::front_right() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.AllWheelsCommand.front_right)
  return front_right_;
}
inline void AllWheelsCommand::set_front_right(float value) {
  _has_bits_[0] |= 0x00000002u;
  front_right_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.AllWheelsCommand.front_right)
}

// required float back_left = 3;
inline bool AllWheelsCommand::has_back_left() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AllWheelsCommand::clear_back_left() {
  back_left_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline float AllWheelsCommand::back_left() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.AllWheelsCommand.back_left)
  return back_left_;
}
inline void AllWheelsCommand::set_back_left(float value) {
  _has_bits_[0] |= 0x00000004u;
  back_left_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.AllWheelsCommand.back_left)
}

// required float back_right = 4;
inline bool AllWheelsCommand::has_back_right() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AllWheelsCommand::clear_back_right() {
  back_right_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline float AllWheelsCommand::back_right() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.AllWheelsCommand.back_right)
  return back_right_;
}
inline void AllWheelsCommand::set_back_right(float value) {
  _has_bits_[0] |= 0x00000008u;
  back_right_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.AllWheelsCommand.back_right)
}

// -------------------------------------------------------------------

// ClosedLoopCommand

// required bool closed = 1;
inline bool ClosedLoopCommand::has_closed() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClosedLoopCommand::clear_closed() {
  closed_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool ClosedLoopCommand::closed() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.ClosedLoopCommand.closed)
  return closed_;
}
inline void ClosedLoopCommand::set_closed(bool value) {
  _has_bits_[0] |= 0x00000001u;
  closed_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.ClosedLoopCommand.closed)
}

// -------------------------------------------------------------------

// PositionControlCommand

// required float position = 1;
inline bool PositionControlCommand::has_position() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PositionControlCommand::clear_position() {
  position_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline float PositionControlCommand::position() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.PositionControlCommand.position)
  return position_;
}
inline void PositionControlCommand::set_position(float value) {
  _has_bits_[0] |= 0x00000001u;
  position_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.PositionControlCommand.position)
}

// required float timeout = 2;
inline bool PositionControlCommand::has_timeout() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PositionControlCommand::clear_timeout() {
  timeout_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float PositionControlCommand::timeout() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.PositionControlCommand.timeout)
  return timeout_;
}
inline void PositionControlCommand::set_timeout(float value) {
  _has_bits_[0] |= 0x00000002u;
  timeout_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.PositionControlCommand.timeout)
}

// -------------------------------------------------------------------

// TurnControlCommand

// required float speed = 1;
inline bool TurnControlCommand::has_speed() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TurnControlCommand::clear_speed() {
  speed_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline float TurnControlCommand::speed() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.TurnControlCommand.speed)
  return speed_;
}
inline void TurnControlCommand::set_speed(float value) {
  _has_bits_[0] |= 0x00000001u;
  speed_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.TurnControlCommand.speed)
}

// required float curvature = 2;
inline bool TurnControlCommand::has_curvature() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TurnControlCommand::clear_curvature() {
  curvature_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float TurnControlCommand::curvature() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.TurnControlCommand.curvature)
  return curvature_;
}
inline void TurnControlCommand::set_curvature(float value) {
  _has_bits_[0] |= 0x00000002u;
  curvature_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.TurnControlCommand.curvature)
}

// -------------------------------------------------------------------

// StopAllCommand

// required bool stop = 1;
inline bool StopAllCommand::has_stop() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StopAllCommand::clear_stop() {
  stop_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool StopAllCommand::stop() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.StopAllCommand.stop)
  return stop_;
}
inline void StopAllCommand::set_stop(bool value) {
  _has_bits_[0] |= 0x00000001u;
  stop_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.StopAllCommand.stop)
}

// required float timeout = 2;
inline bool StopAllCommand::has_timeout() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StopAllCommand::clear_timeout() {
  timeout_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float StopAllCommand::timeout() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.StopAllCommand.timeout)
  return timeout_;
}
inline void StopAllCommand::set_timeout(float value) {
  _has_bits_[0] |= 0x00000002u;
  timeout_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.StopAllCommand.timeout)
}

// -------------------------------------------------------------------

// LocomotionControlCommandStraight

// required float speed = 1;
inline bool LocomotionControlCommandStraight::has_speed() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LocomotionControlCommandStraight::clear_speed() {
  speed_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline float LocomotionControlCommandStraight::speed() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.LocomotionControlCommandStraight.speed)
  return speed_;
}
inline void LocomotionControlCommandStraight::set_speed(float value) {
  _has_bits_[0] |= 0x00000001u;
  speed_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.LocomotionControlCommandStraight.speed)
}

// required float timeout = 2;
inline bool LocomotionControlCommandStraight::has_timeout() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LocomotionControlCommandStraight::clear_timeout() {
  timeout_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float LocomotionControlCommandStraight::timeout() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.LocomotionControlCommandStraight.timeout)
  return timeout_;
}
inline void LocomotionControlCommandStraight::set_timeout(float value) {
  _has_bits_[0] |= 0x00000002u;
  timeout_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.LocomotionControlCommandStraight.timeout)
}

// -------------------------------------------------------------------

// ExcavationControlCommandDigDeep

// required float depth = 1;
inline bool ExcavationControlCommandDigDeep::has_depth() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExcavationControlCommandDigDeep::clear_depth() {
  depth_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline float ExcavationControlCommandDigDeep::depth() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.ExcavationControlCommandDigDeep.depth)
  return depth_;
}
inline void ExcavationControlCommandDigDeep::set_depth(float value) {
  _has_bits_[0] |= 0x00000001u;
  depth_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.ExcavationControlCommandDigDeep.depth)
}

// -------------------------------------------------------------------

// ExcavationControlCommandDigEnd

// -------------------------------------------------------------------

// StateSubscribe

// required string replyKey = 1;
inline bool StateSubscribe::has_replykey() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StateSubscribe::clear_replykey() {
  replykey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& StateSubscribe::replykey() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.StateSubscribe.replyKey)
  return replykey_.GetNoArena();
}
inline void StateSubscribe::set_replykey(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  replykey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.StateSubscribe.replyKey)
}
#if LANG_CXX11
inline void StateSubscribe::set_replykey(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  replykey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.cwrubotix.glennifer.StateSubscribe.replyKey)
}
#endif
inline void StateSubscribe::set_replykey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  _has_bits_[0] |= 0x00000001u;
  replykey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.cwrubotix.glennifer.StateSubscribe.replyKey)
}
inline void StateSubscribe::set_replykey(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  replykey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.cwrubotix.glennifer.StateSubscribe.replyKey)
}
inline ::std::string* StateSubscribe::mutable_replykey() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:com.cwrubotix.glennifer.StateSubscribe.replyKey)
  return replykey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StateSubscribe::release_replykey() {
  // @@protoc_insertion_point(field_release:com.cwrubotix.glennifer.StateSubscribe.replyKey)
  if (!has_replykey()) {
    return NULL;
  }
  _has_bits_[0] &= ~0x00000001u;
  return replykey_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StateSubscribe::set_allocated_replykey(::std::string* replykey) {
  if (replykey != NULL) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  replykey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), replykey);
  // @@protoc_insertion_point(field_set_allocated:com.cwrubotix.glennifer.StateSubscribe.replyKey)
}

// required float interval = 2;
inline bool StateSubscribe::has_interval() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StateSubscribe::clear_interval() {
  interval_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline float StateSubscribe::interval() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.StateSubscribe.interval)
  return interval_;
}
inline void StateSubscribe::set_interval(float value) {
  _has_bits_[0] |= 0x00000004u;
  interval_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.StateSubscribe.interval)
}

// required bool locomotion_summary = 3;
inline bool StateSubscribe::has_locomotion_summary() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void StateSubscribe::clear_locomotion_summary() {
  locomotion_summary_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool StateSubscribe::locomotion_summary() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.StateSubscribe.locomotion_summary)
  return locomotion_summary_;
}
inline void StateSubscribe::set_locomotion_summary(bool value) {
  _has_bits_[0] |= 0x00000008u;
  locomotion_summary_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.StateSubscribe.locomotion_summary)
}

// required bool locomotion_detailed = 4;
inline bool StateSubscribe::has_locomotion_detailed() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void StateSubscribe::clear_locomotion_detailed() {
  locomotion_detailed_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool StateSubscribe::locomotion_detailed() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.StateSubscribe.locomotion_detailed)
  return locomotion_detailed_;
}
inline void StateSubscribe::set_locomotion_detailed(bool value) {
  _has_bits_[0] |= 0x00000010u;
  locomotion_detailed_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.StateSubscribe.locomotion_detailed)
}

// required bool excavation_summary = 5;
inline bool StateSubscribe::has_excavation_summary() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void StateSubscribe::clear_excavation_summary() {
  excavation_summary_ = false;
  _has_bits_[0] &= ~0x00000020u;
}
inline bool StateSubscribe::excavation_summary() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.StateSubscribe.excavation_summary)
  return excavation_summary_;
}
inline void StateSubscribe::set_excavation_summary(bool value) {
  _has_bits_[0] |= 0x00000020u;
  excavation_summary_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.StateSubscribe.excavation_summary)
}

// required bool excavation_detailed = 6;
inline bool StateSubscribe::has_excavation_detailed() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void StateSubscribe::clear_excavation_detailed() {
  excavation_detailed_ = false;
  _has_bits_[0] &= ~0x00000040u;
}
inline bool StateSubscribe::excavation_detailed() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.StateSubscribe.excavation_detailed)
  return excavation_detailed_;
}
inline void StateSubscribe::set_excavation_detailed(bool value) {
  _has_bits_[0] |= 0x00000040u;
  excavation_detailed_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.StateSubscribe.excavation_detailed)
}

// required bool deposition_summary = 7;
inline bool StateSubscribe::has_deposition_summary() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void StateSubscribe::clear_deposition_summary() {
  deposition_summary_ = false;
  _has_bits_[0] &= ~0x00000080u;
}
inline bool StateSubscribe::deposition_summary() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.StateSubscribe.deposition_summary)
  return deposition_summary_;
}
inline void StateSubscribe::set_deposition_summary(bool value) {
  _has_bits_[0] |= 0x00000080u;
  deposition_summary_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.StateSubscribe.deposition_summary)
}

// required bool deposition_detailed = 8;
inline bool StateSubscribe::has_deposition_detailed() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void StateSubscribe::clear_deposition_detailed() {
  deposition_detailed_ = false;
  _has_bits_[0] &= ~0x00000100u;
}
inline bool StateSubscribe::deposition_detailed() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.StateSubscribe.deposition_detailed)
  return deposition_detailed_;
}
inline void StateSubscribe::set_deposition_detailed(bool value) {
  _has_bits_[0] |= 0x00000100u;
  deposition_detailed_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.StateSubscribe.deposition_detailed)
}

// required bool loc_obs_detailed = 9;
inline bool StateSubscribe::has_loc_obs_detailed() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void StateSubscribe::clear_loc_obs_detailed() {
  loc_obs_detailed_ = false;
  _has_bits_[0] &= ~0x00000200u;
}
inline bool StateSubscribe::loc_obs_detailed() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.StateSubscribe.loc_obs_detailed)
  return loc_obs_detailed_;
}
inline void StateSubscribe::set_loc_obs_detailed(bool value) {
  _has_bits_[0] |= 0x00000200u;
  loc_obs_detailed_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.StateSubscribe.loc_obs_detailed)
}

// optional .com.cwrubotix.glennifer.UnixTime startTime = 10;
inline bool StateSubscribe::has_starttime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StateSubscribe::clear_starttime() {
  if (starttime_ != NULL) starttime_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::com::cwrubotix::glennifer::UnixTime& StateSubscribe::starttime() const {
  const ::com::cwrubotix::glennifer::UnixTime* p = starttime_;
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.StateSubscribe.startTime)
  return p != NULL ? *p : *reinterpret_cast<const ::com::cwrubotix::glennifer::UnixTime*>(
      &::com::cwrubotix::glennifer::_UnixTime_default_instance_);
}
inline ::com::cwrubotix::glennifer::UnixTime* StateSubscribe::release_starttime() {
  // @@protoc_insertion_point(field_release:com.cwrubotix.glennifer.StateSubscribe.startTime)
  _has_bits_[0] &= ~0x00000002u;
  ::com::cwrubotix::glennifer::UnixTime* temp = starttime_;
  starttime_ = NULL;
  return temp;
}
inline ::com::cwrubotix::glennifer::UnixTime* StateSubscribe::mutable_starttime() {
  _has_bits_[0] |= 0x00000002u;
  if (starttime_ == NULL) {
    auto* p = CreateMaybeMessage<::com::cwrubotix::glennifer::UnixTime>(GetArenaNoVirtual());
    starttime_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.cwrubotix.glennifer.StateSubscribe.startTime)
  return starttime_;
}
inline void StateSubscribe::set_allocated_starttime(::com::cwrubotix::glennifer::UnixTime* starttime) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete starttime_;
  }
  if (starttime) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      starttime = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, starttime, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  starttime_ = starttime;
  // @@protoc_insertion_point(field_set_allocated:com.cwrubotix.glennifer.StateSubscribe.startTime)
}

// -------------------------------------------------------------------

// State

// optional .com.cwrubotix.glennifer.LocomotionStateSummary loc_summary = 1;
inline bool State::has_loc_summary() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void State::clear_loc_summary() {
  if (loc_summary_ != NULL) loc_summary_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::com::cwrubotix::glennifer::LocomotionStateSummary& State::loc_summary() const {
  const ::com::cwrubotix::glennifer::LocomotionStateSummary* p = loc_summary_;
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.State.loc_summary)
  return p != NULL ? *p : *reinterpret_cast<const ::com::cwrubotix::glennifer::LocomotionStateSummary*>(
      &::com::cwrubotix::glennifer::_LocomotionStateSummary_default_instance_);
}
inline ::com::cwrubotix::glennifer::LocomotionStateSummary* State::release_loc_summary() {
  // @@protoc_insertion_point(field_release:com.cwrubotix.glennifer.State.loc_summary)
  _has_bits_[0] &= ~0x00000001u;
  ::com::cwrubotix::glennifer::LocomotionStateSummary* temp = loc_summary_;
  loc_summary_ = NULL;
  return temp;
}
inline ::com::cwrubotix::glennifer::LocomotionStateSummary* State::mutable_loc_summary() {
  _has_bits_[0] |= 0x00000001u;
  if (loc_summary_ == NULL) {
    auto* p = CreateMaybeMessage<::com::cwrubotix::glennifer::LocomotionStateSummary>(GetArenaNoVirtual());
    loc_summary_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.cwrubotix.glennifer.State.loc_summary)
  return loc_summary_;
}
inline void State::set_allocated_loc_summary(::com::cwrubotix::glennifer::LocomotionStateSummary* loc_summary) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete loc_summary_;
  }
  if (loc_summary) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      loc_summary = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, loc_summary, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  loc_summary_ = loc_summary;
  // @@protoc_insertion_point(field_set_allocated:com.cwrubotix.glennifer.State.loc_summary)
}

// optional .com.cwrubotix.glennifer.LocomotionStateDetailed loc_detailed = 2;
inline bool State::has_loc_detailed() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void State::clear_loc_detailed() {
  if (loc_detailed_ != NULL) loc_detailed_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::com::cwrubotix::glennifer::LocomotionStateDetailed& State::loc_detailed() const {
  const ::com::cwrubotix::glennifer::LocomotionStateDetailed* p = loc_detailed_;
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.State.loc_detailed)
  return p != NULL ? *p : *reinterpret_cast<const ::com::cwrubotix::glennifer::LocomotionStateDetailed*>(
      &::com::cwrubotix::glennifer::_LocomotionStateDetailed_default_instance_);
}
inline ::com::cwrubotix::glennifer::LocomotionStateDetailed* State::release_loc_detailed() {
  // @@protoc_insertion_point(field_release:com.cwrubotix.glennifer.State.loc_detailed)
  _has_bits_[0] &= ~0x00000002u;
  ::com::cwrubotix::glennifer::LocomotionStateDetailed* temp = loc_detailed_;
  loc_detailed_ = NULL;
  return temp;
}
inline ::com::cwrubotix::glennifer::LocomotionStateDetailed* State::mutable_loc_detailed() {
  _has_bits_[0] |= 0x00000002u;
  if (loc_detailed_ == NULL) {
    auto* p = CreateMaybeMessage<::com::cwrubotix::glennifer::LocomotionStateDetailed>(GetArenaNoVirtual());
    loc_detailed_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.cwrubotix.glennifer.State.loc_detailed)
  return loc_detailed_;
}
inline void State::set_allocated_loc_detailed(::com::cwrubotix::glennifer::LocomotionStateDetailed* loc_detailed) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete loc_detailed_;
  }
  if (loc_detailed) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      loc_detailed = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, loc_detailed, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  loc_detailed_ = loc_detailed;
  // @@protoc_insertion_point(field_set_allocated:com.cwrubotix.glennifer.State.loc_detailed)
}

// optional .com.cwrubotix.glennifer.ExcavationStateSummary exc_summary = 3;
inline bool State::has_exc_summary() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void State::clear_exc_summary() {
  if (exc_summary_ != NULL) exc_summary_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::com::cwrubotix::glennifer::ExcavationStateSummary& State::exc_summary() const {
  const ::com::cwrubotix::glennifer::ExcavationStateSummary* p = exc_summary_;
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.State.exc_summary)
  return p != NULL ? *p : *reinterpret_cast<const ::com::cwrubotix::glennifer::ExcavationStateSummary*>(
      &::com::cwrubotix::glennifer::_ExcavationStateSummary_default_instance_);
}
inline ::com::cwrubotix::glennifer::ExcavationStateSummary* State::release_exc_summary() {
  // @@protoc_insertion_point(field_release:com.cwrubotix.glennifer.State.exc_summary)
  _has_bits_[0] &= ~0x00000004u;
  ::com::cwrubotix::glennifer::ExcavationStateSummary* temp = exc_summary_;
  exc_summary_ = NULL;
  return temp;
}
inline ::com::cwrubotix::glennifer::ExcavationStateSummary* State::mutable_exc_summary() {
  _has_bits_[0] |= 0x00000004u;
  if (exc_summary_ == NULL) {
    auto* p = CreateMaybeMessage<::com::cwrubotix::glennifer::ExcavationStateSummary>(GetArenaNoVirtual());
    exc_summary_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.cwrubotix.glennifer.State.exc_summary)
  return exc_summary_;
}
inline void State::set_allocated_exc_summary(::com::cwrubotix::glennifer::ExcavationStateSummary* exc_summary) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete exc_summary_;
  }
  if (exc_summary) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      exc_summary = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, exc_summary, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  exc_summary_ = exc_summary;
  // @@protoc_insertion_point(field_set_allocated:com.cwrubotix.glennifer.State.exc_summary)
}

// optional .com.cwrubotix.glennifer.ExcavationStateDetailed exc_detailed = 4;
inline bool State::has_exc_detailed() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void State::clear_exc_detailed() {
  if (exc_detailed_ != NULL) exc_detailed_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::com::cwrubotix::glennifer::ExcavationStateDetailed& State::exc_detailed() const {
  const ::com::cwrubotix::glennifer::ExcavationStateDetailed* p = exc_detailed_;
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.State.exc_detailed)
  return p != NULL ? *p : *reinterpret_cast<const ::com::cwrubotix::glennifer::ExcavationStateDetailed*>(
      &::com::cwrubotix::glennifer::_ExcavationStateDetailed_default_instance_);
}
inline ::com::cwrubotix::glennifer::ExcavationStateDetailed* State::release_exc_detailed() {
  // @@protoc_insertion_point(field_release:com.cwrubotix.glennifer.State.exc_detailed)
  _has_bits_[0] &= ~0x00000008u;
  ::com::cwrubotix::glennifer::ExcavationStateDetailed* temp = exc_detailed_;
  exc_detailed_ = NULL;
  return temp;
}
inline ::com::cwrubotix::glennifer::ExcavationStateDetailed* State::mutable_exc_detailed() {
  _has_bits_[0] |= 0x00000008u;
  if (exc_detailed_ == NULL) {
    auto* p = CreateMaybeMessage<::com::cwrubotix::glennifer::ExcavationStateDetailed>(GetArenaNoVirtual());
    exc_detailed_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.cwrubotix.glennifer.State.exc_detailed)
  return exc_detailed_;
}
inline void State::set_allocated_exc_detailed(::com::cwrubotix::glennifer::ExcavationStateDetailed* exc_detailed) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete exc_detailed_;
  }
  if (exc_detailed) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      exc_detailed = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, exc_detailed, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  exc_detailed_ = exc_detailed;
  // @@protoc_insertion_point(field_set_allocated:com.cwrubotix.glennifer.State.exc_detailed)
}

// optional .com.cwrubotix.glennifer.DepositionStateSummary dep_summary = 5;
inline bool State::has_dep_summary() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void State::clear_dep_summary() {
  if (dep_summary_ != NULL) dep_summary_->Clear();
  _has_bits_[0] &= ~0x00000010u;
}
inline const ::com::cwrubotix::glennifer::DepositionStateSummary& State::dep_summary() const {
  const ::com::cwrubotix::glennifer::DepositionStateSummary* p = dep_summary_;
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.State.dep_summary)
  return p != NULL ? *p : *reinterpret_cast<const ::com::cwrubotix::glennifer::DepositionStateSummary*>(
      &::com::cwrubotix::glennifer::_DepositionStateSummary_default_instance_);
}
inline ::com::cwrubotix::glennifer::DepositionStateSummary* State::release_dep_summary() {
  // @@protoc_insertion_point(field_release:com.cwrubotix.glennifer.State.dep_summary)
  _has_bits_[0] &= ~0x00000010u;
  ::com::cwrubotix::glennifer::DepositionStateSummary* temp = dep_summary_;
  dep_summary_ = NULL;
  return temp;
}
inline ::com::cwrubotix::glennifer::DepositionStateSummary* State::mutable_dep_summary() {
  _has_bits_[0] |= 0x00000010u;
  if (dep_summary_ == NULL) {
    auto* p = CreateMaybeMessage<::com::cwrubotix::glennifer::DepositionStateSummary>(GetArenaNoVirtual());
    dep_summary_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.cwrubotix.glennifer.State.dep_summary)
  return dep_summary_;
}
inline void State::set_allocated_dep_summary(::com::cwrubotix::glennifer::DepositionStateSummary* dep_summary) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete dep_summary_;
  }
  if (dep_summary) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      dep_summary = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, dep_summary, submessage_arena);
    }
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  dep_summary_ = dep_summary;
  // @@protoc_insertion_point(field_set_allocated:com.cwrubotix.glennifer.State.dep_summary)
}

// optional .com.cwrubotix.glennifer.DepositionStateDetailed dep_detailed = 6;
inline bool State::has_dep_detailed() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void State::clear_dep_detailed() {
  if (dep_detailed_ != NULL) dep_detailed_->Clear();
  _has_bits_[0] &= ~0x00000020u;
}
inline const ::com::cwrubotix::glennifer::DepositionStateDetailed& State::dep_detailed() const {
  const ::com::cwrubotix::glennifer::DepositionStateDetailed* p = dep_detailed_;
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.State.dep_detailed)
  return p != NULL ? *p : *reinterpret_cast<const ::com::cwrubotix::glennifer::DepositionStateDetailed*>(
      &::com::cwrubotix::glennifer::_DepositionStateDetailed_default_instance_);
}
inline ::com::cwrubotix::glennifer::DepositionStateDetailed* State::release_dep_detailed() {
  // @@protoc_insertion_point(field_release:com.cwrubotix.glennifer.State.dep_detailed)
  _has_bits_[0] &= ~0x00000020u;
  ::com::cwrubotix::glennifer::DepositionStateDetailed* temp = dep_detailed_;
  dep_detailed_ = NULL;
  return temp;
}
inline ::com::cwrubotix::glennifer::DepositionStateDetailed* State::mutable_dep_detailed() {
  _has_bits_[0] |= 0x00000020u;
  if (dep_detailed_ == NULL) {
    auto* p = CreateMaybeMessage<::com::cwrubotix::glennifer::DepositionStateDetailed>(GetArenaNoVirtual());
    dep_detailed_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.cwrubotix.glennifer.State.dep_detailed)
  return dep_detailed_;
}
inline void State::set_allocated_dep_detailed(::com::cwrubotix::glennifer::DepositionStateDetailed* dep_detailed) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete dep_detailed_;
  }
  if (dep_detailed) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      dep_detailed = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, dep_detailed, submessage_arena);
    }
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  dep_detailed_ = dep_detailed;
  // @@protoc_insertion_point(field_set_allocated:com.cwrubotix.glennifer.State.dep_detailed)
}

// optional .com.cwrubotix.glennifer.LocObsStateDetailed loc_obs_detailed = 7;
inline bool State::has_loc_obs_detailed() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void State::clear_loc_obs_detailed() {
  if (loc_obs_detailed_ != NULL) loc_obs_detailed_->Clear();
  _has_bits_[0] &= ~0x00000040u;
}
inline const ::com::cwrubotix::glennifer::LocObsStateDetailed& State::loc_obs_detailed() const {
  const ::com::cwrubotix::glennifer::LocObsStateDetailed* p = loc_obs_detailed_;
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.State.loc_obs_detailed)
  return p != NULL ? *p : *reinterpret_cast<const ::com::cwrubotix::glennifer::LocObsStateDetailed*>(
      &::com::cwrubotix::glennifer::_LocObsStateDetailed_default_instance_);
}
inline ::com::cwrubotix::glennifer::LocObsStateDetailed* State::release_loc_obs_detailed() {
  // @@protoc_insertion_point(field_release:com.cwrubotix.glennifer.State.loc_obs_detailed)
  _has_bits_[0] &= ~0x00000040u;
  ::com::cwrubotix::glennifer::LocObsStateDetailed* temp = loc_obs_detailed_;
  loc_obs_detailed_ = NULL;
  return temp;
}
inline ::com::cwrubotix::glennifer::LocObsStateDetailed* State::mutable_loc_obs_detailed() {
  _has_bits_[0] |= 0x00000040u;
  if (loc_obs_detailed_ == NULL) {
    auto* p = CreateMaybeMessage<::com::cwrubotix::glennifer::LocObsStateDetailed>(GetArenaNoVirtual());
    loc_obs_detailed_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.cwrubotix.glennifer.State.loc_obs_detailed)
  return loc_obs_detailed_;
}
inline void State::set_allocated_loc_obs_detailed(::com::cwrubotix::glennifer::LocObsStateDetailed* loc_obs_detailed) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete loc_obs_detailed_;
  }
  if (loc_obs_detailed) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      loc_obs_detailed = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, loc_obs_detailed, submessage_arena);
    }
    _has_bits_[0] |= 0x00000040u;
  } else {
    _has_bits_[0] &= ~0x00000040u;
  }
  loc_obs_detailed_ = loc_obs_detailed;
  // @@protoc_insertion_point(field_set_allocated:com.cwrubotix.glennifer.State.loc_obs_detailed)
}

// required .com.cwrubotix.glennifer.UnixTime timestamp = 8;
inline bool State::has_timestamp() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void State::clear_timestamp() {
  if (timestamp_ != NULL) timestamp_->Clear();
  _has_bits_[0] &= ~0x00000080u;
}
inline const ::com::cwrubotix::glennifer::UnixTime& State::timestamp() const {
  const ::com::cwrubotix::glennifer::UnixTime* p = timestamp_;
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.State.timestamp)
  return p != NULL ? *p : *reinterpret_cast<const ::com::cwrubotix::glennifer::UnixTime*>(
      &::com::cwrubotix::glennifer::_UnixTime_default_instance_);
}
inline ::com::cwrubotix::glennifer::UnixTime* State::release_timestamp() {
  // @@protoc_insertion_point(field_release:com.cwrubotix.glennifer.State.timestamp)
  _has_bits_[0] &= ~0x00000080u;
  ::com::cwrubotix::glennifer::UnixTime* temp = timestamp_;
  timestamp_ = NULL;
  return temp;
}
inline ::com::cwrubotix::glennifer::UnixTime* State::mutable_timestamp() {
  _has_bits_[0] |= 0x00000080u;
  if (timestamp_ == NULL) {
    auto* p = CreateMaybeMessage<::com::cwrubotix::glennifer::UnixTime>(GetArenaNoVirtual());
    timestamp_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.cwrubotix.glennifer.State.timestamp)
  return timestamp_;
}
inline void State::set_allocated_timestamp(::com::cwrubotix::glennifer::UnixTime* timestamp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete timestamp_;
  }
  if (timestamp) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      timestamp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, timestamp, submessage_arena);
    }
    _has_bits_[0] |= 0x00000080u;
  } else {
    _has_bits_[0] &= ~0x00000080u;
  }
  timestamp_ = timestamp;
  // @@protoc_insertion_point(field_set_allocated:com.cwrubotix.glennifer.State.timestamp)
}

// -------------------------------------------------------------------

// LocomotionStateSummary

// required float speed = 1;
inline bool LocomotionStateSummary::has_speed() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LocomotionStateSummary::clear_speed() {
  speed_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline float LocomotionStateSummary::speed() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.LocomotionStateSummary.speed)
  return speed_;
}
inline void LocomotionStateSummary::set_speed(float value) {
  _has_bits_[0] |= 0x00000001u;
  speed_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.LocomotionStateSummary.speed)
}

// -------------------------------------------------------------------

// LocomotionStateDetailed

// required float front_left_rpm = 1;
inline bool LocomotionStateDetailed::has_front_left_rpm() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LocomotionStateDetailed::clear_front_left_rpm() {
  front_left_rpm_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline float LocomotionStateDetailed::front_left_rpm() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.LocomotionStateDetailed.front_left_rpm)
  return front_left_rpm_;
}
inline void LocomotionStateDetailed::set_front_left_rpm(float value) {
  _has_bits_[0] |= 0x00000001u;
  front_left_rpm_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.LocomotionStateDetailed.front_left_rpm)
}

// required float front_right_rpm = 2;
inline bool LocomotionStateDetailed::has_front_right_rpm() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LocomotionStateDetailed::clear_front_right_rpm() {
  front_right_rpm_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float LocomotionStateDetailed::front_right_rpm() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.LocomotionStateDetailed.front_right_rpm)
  return front_right_rpm_;
}
inline void LocomotionStateDetailed::set_front_right_rpm(float value) {
  _has_bits_[0] |= 0x00000002u;
  front_right_rpm_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.LocomotionStateDetailed.front_right_rpm)
}

// required float back_left_rpm = 3;
inline bool LocomotionStateDetailed::has_back_left_rpm() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LocomotionStateDetailed::clear_back_left_rpm() {
  back_left_rpm_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline float LocomotionStateDetailed::back_left_rpm() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.LocomotionStateDetailed.back_left_rpm)
  return back_left_rpm_;
}
inline void LocomotionStateDetailed::set_back_left_rpm(float value) {
  _has_bits_[0] |= 0x00000004u;
  back_left_rpm_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.LocomotionStateDetailed.back_left_rpm)
}

// required float back_right_rpm = 4;
inline bool LocomotionStateDetailed::has_back_right_rpm() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LocomotionStateDetailed::clear_back_right_rpm() {
  back_right_rpm_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline float LocomotionStateDetailed::back_right_rpm() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.LocomotionStateDetailed.back_right_rpm)
  return back_right_rpm_;
}
inline void LocomotionStateDetailed::set_back_right_rpm(float value) {
  _has_bits_[0] |= 0x00000008u;
  back_right_rpm_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.LocomotionStateDetailed.back_right_rpm)
}

// -------------------------------------------------------------------

// ExcavationStateSummary

// required float rpm = 1;
inline bool ExcavationStateSummary::has_rpm() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExcavationStateSummary::clear_rpm() {
  rpm_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline float ExcavationStateSummary::rpm() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.ExcavationStateSummary.rpm)
  return rpm_;
}
inline void ExcavationStateSummary::set_rpm(float value) {
  _has_bits_[0] |= 0x00000001u;
  rpm_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.ExcavationStateSummary.rpm)
}

// required float displacement = 2;
inline bool ExcavationStateSummary::has_displacement() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ExcavationStateSummary::clear_displacement() {
  displacement_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float ExcavationStateSummary::displacement() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.ExcavationStateSummary.displacement)
  return displacement_;
}
inline void ExcavationStateSummary::set_displacement(float value) {
  _has_bits_[0] |= 0x00000002u;
  displacement_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.ExcavationStateSummary.displacement)
}

// required float arm_pos = 3;
inline bool ExcavationStateSummary::has_arm_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ExcavationStateSummary::clear_arm_pos() {
  arm_pos_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline float ExcavationStateSummary::arm_pos() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.ExcavationStateSummary.arm_pos)
  return arm_pos_;
}
inline void ExcavationStateSummary::set_arm_pos(float value) {
  _has_bits_[0] |= 0x00000004u;
  arm_pos_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.ExcavationStateSummary.arm_pos)
}

// required float current = 4;
inline bool ExcavationStateSummary::has_current() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ExcavationStateSummary::clear_current() {
  current_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline float ExcavationStateSummary::current() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.ExcavationStateSummary.current)
  return current_;
}
inline void ExcavationStateSummary::set_current(float value) {
  _has_bits_[0] |= 0x00000008u;
  current_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.ExcavationStateSummary.current)
}

// required bool arm_extended = 5;
inline bool ExcavationStateSummary::has_arm_extended() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ExcavationStateSummary::clear_arm_extended() {
  arm_extended_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool ExcavationStateSummary::arm_extended() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.ExcavationStateSummary.arm_extended)
  return arm_extended_;
}
inline void ExcavationStateSummary::set_arm_extended(bool value) {
  _has_bits_[0] |= 0x00000010u;
  arm_extended_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.ExcavationStateSummary.arm_extended)
}

// required bool translation_extended = 6;
inline bool ExcavationStateSummary::has_translation_extended() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ExcavationStateSummary::clear_translation_extended() {
  translation_extended_ = false;
  _has_bits_[0] &= ~0x00000020u;
}
inline bool ExcavationStateSummary::translation_extended() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.ExcavationStateSummary.translation_extended)
  return translation_extended_;
}
inline void ExcavationStateSummary::set_translation_extended(bool value) {
  _has_bits_[0] |= 0x00000020u;
  translation_extended_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.ExcavationStateSummary.translation_extended)
}

// required bool translation_retracted = 7;
inline bool ExcavationStateSummary::has_translation_retracted() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ExcavationStateSummary::clear_translation_retracted() {
  translation_retracted_ = false;
  _has_bits_[0] &= ~0x00000040u;
}
inline bool ExcavationStateSummary::translation_retracted() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.ExcavationStateSummary.translation_retracted)
  return translation_retracted_;
}
inline void ExcavationStateSummary::set_translation_retracted(bool value) {
  _has_bits_[0] |= 0x00000040u;
  translation_retracted_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.ExcavationStateSummary.translation_retracted)
}

// -------------------------------------------------------------------

// ExcavationStateDetailed

// required float rpm = 1;
inline bool ExcavationStateDetailed::has_rpm() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExcavationStateDetailed::clear_rpm() {
  rpm_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline float ExcavationStateDetailed::rpm() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.ExcavationStateDetailed.rpm)
  return rpm_;
}
inline void ExcavationStateDetailed::set_rpm(float value) {
  _has_bits_[0] |= 0x00000001u;
  rpm_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.ExcavationStateDetailed.rpm)
}

// required float displacement = 2;
inline bool ExcavationStateDetailed::has_displacement() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ExcavationStateDetailed::clear_displacement() {
  displacement_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float ExcavationStateDetailed::displacement() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.ExcavationStateDetailed.displacement)
  return displacement_;
}
inline void ExcavationStateDetailed::set_displacement(float value) {
  _has_bits_[0] |= 0x00000002u;
  displacement_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.ExcavationStateDetailed.displacement)
}

// required float arm_pos = 3;
inline bool ExcavationStateDetailed::has_arm_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ExcavationStateDetailed::clear_arm_pos() {
  arm_pos_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline float ExcavationStateDetailed::arm_pos() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.ExcavationStateDetailed.arm_pos)
  return arm_pos_;
}
inline void ExcavationStateDetailed::set_arm_pos(float value) {
  _has_bits_[0] |= 0x00000004u;
  arm_pos_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.ExcavationStateDetailed.arm_pos)
}

// required float current = 4;
inline bool ExcavationStateDetailed::has_current() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ExcavationStateDetailed::clear_current() {
  current_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline float ExcavationStateDetailed::current() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.ExcavationStateDetailed.current)
  return current_;
}
inline void ExcavationStateDetailed::set_current(float value) {
  _has_bits_[0] |= 0x00000008u;
  current_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.ExcavationStateDetailed.current)
}

// required bool arm_left_extended = 5;
inline bool ExcavationStateDetailed::has_arm_left_extended() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ExcavationStateDetailed::clear_arm_left_extended() {
  arm_left_extended_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool ExcavationStateDetailed::arm_left_extended() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.ExcavationStateDetailed.arm_left_extended)
  return arm_left_extended_;
}
inline void ExcavationStateDetailed::set_arm_left_extended(bool value) {
  _has_bits_[0] |= 0x00000010u;
  arm_left_extended_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.ExcavationStateDetailed.arm_left_extended)
}

// required bool arm_right_extended = 6;
inline bool ExcavationStateDetailed::has_arm_right_extended() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ExcavationStateDetailed::clear_arm_right_extended() {
  arm_right_extended_ = false;
  _has_bits_[0] &= ~0x00000020u;
}
inline bool ExcavationStateDetailed::arm_right_extended() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.ExcavationStateDetailed.arm_right_extended)
  return arm_right_extended_;
}
inline void ExcavationStateDetailed::set_arm_right_extended(bool value) {
  _has_bits_[0] |= 0x00000020u;
  arm_right_extended_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.ExcavationStateDetailed.arm_right_extended)
}

// required bool translation_left_extended = 7;
inline bool ExcavationStateDetailed::has_translation_left_extended() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ExcavationStateDetailed::clear_translation_left_extended() {
  translation_left_extended_ = false;
  _has_bits_[0] &= ~0x00000040u;
}
inline bool ExcavationStateDetailed::translation_left_extended() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.ExcavationStateDetailed.translation_left_extended)
  return translation_left_extended_;
}
inline void ExcavationStateDetailed::set_translation_left_extended(bool value) {
  _has_bits_[0] |= 0x00000040u;
  translation_left_extended_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.ExcavationStateDetailed.translation_left_extended)
}

// required bool translation_right_extended = 8;
inline bool ExcavationStateDetailed::has_translation_right_extended() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ExcavationStateDetailed::clear_translation_right_extended() {
  translation_right_extended_ = false;
  _has_bits_[0] &= ~0x00000080u;
}
inline bool ExcavationStateDetailed::translation_right_extended() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.ExcavationStateDetailed.translation_right_extended)
  return translation_right_extended_;
}
inline void ExcavationStateDetailed::set_translation_right_extended(bool value) {
  _has_bits_[0] |= 0x00000080u;
  translation_right_extended_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.ExcavationStateDetailed.translation_right_extended)
}

// required bool translation_retracted = 9;
inline bool ExcavationStateDetailed::has_translation_retracted() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ExcavationStateDetailed::clear_translation_retracted() {
  translation_retracted_ = false;
  _has_bits_[0] &= ~0x00000100u;
}
inline bool ExcavationStateDetailed::translation_retracted() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.ExcavationStateDetailed.translation_retracted)
  return translation_retracted_;
}
inline void ExcavationStateDetailed::set_translation_retracted(bool value) {
  _has_bits_[0] |= 0x00000100u;
  translation_retracted_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.ExcavationStateDetailed.translation_retracted)
}

// -------------------------------------------------------------------

// DepositionStateSummary

// required float load = 1;
inline bool DepositionStateSummary::has_load() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DepositionStateSummary::clear_load() {
  load_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline float DepositionStateSummary::load() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.DepositionStateSummary.load)
  return load_;
}
inline void DepositionStateSummary::set_load(float value) {
  _has_bits_[0] |= 0x00000001u;
  load_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.DepositionStateSummary.load)
}

// required bool dump_extended = 2;
inline bool DepositionStateSummary::has_dump_extended() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DepositionStateSummary::clear_dump_extended() {
  dump_extended_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool DepositionStateSummary::dump_extended() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.DepositionStateSummary.dump_extended)
  return dump_extended_;
}
inline void DepositionStateSummary::set_dump_extended(bool value) {
  _has_bits_[0] |= 0x00000002u;
  dump_extended_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.DepositionStateSummary.dump_extended)
}

// required bool dump_retracted = 3;
inline bool DepositionStateSummary::has_dump_retracted() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DepositionStateSummary::clear_dump_retracted() {
  dump_retracted_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool DepositionStateSummary::dump_retracted() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.DepositionStateSummary.dump_retracted)
  return dump_retracted_;
}
inline void DepositionStateSummary::set_dump_retracted(bool value) {
  _has_bits_[0] |= 0x00000004u;
  dump_retracted_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.DepositionStateSummary.dump_retracted)
}

// -------------------------------------------------------------------

// DepositionStateDetailed

// required float left_load = 1;
inline bool DepositionStateDetailed::has_left_load() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DepositionStateDetailed::clear_left_load() {
  left_load_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline float DepositionStateDetailed::left_load() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.DepositionStateDetailed.left_load)
  return left_load_;
}
inline void DepositionStateDetailed::set_left_load(float value) {
  _has_bits_[0] |= 0x00000001u;
  left_load_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.DepositionStateDetailed.left_load)
}

// required float right_load = 2;
inline bool DepositionStateDetailed::has_right_load() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DepositionStateDetailed::clear_right_load() {
  right_load_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float DepositionStateDetailed::right_load() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.DepositionStateDetailed.right_load)
  return right_load_;
}
inline void DepositionStateDetailed::set_right_load(float value) {
  _has_bits_[0] |= 0x00000002u;
  right_load_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.DepositionStateDetailed.right_load)
}

// required bool dump_left_extended = 3;
inline bool DepositionStateDetailed::has_dump_left_extended() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DepositionStateDetailed::clear_dump_left_extended() {
  dump_left_extended_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool DepositionStateDetailed::dump_left_extended() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.DepositionStateDetailed.dump_left_extended)
  return dump_left_extended_;
}
inline void DepositionStateDetailed::set_dump_left_extended(bool value) {
  _has_bits_[0] |= 0x00000004u;
  dump_left_extended_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.DepositionStateDetailed.dump_left_extended)
}

// required bool dump_right_extended = 4;
inline bool DepositionStateDetailed::has_dump_right_extended() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DepositionStateDetailed::clear_dump_right_extended() {
  dump_right_extended_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool DepositionStateDetailed::dump_right_extended() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.DepositionStateDetailed.dump_right_extended)
  return dump_right_extended_;
}
inline void DepositionStateDetailed::set_dump_right_extended(bool value) {
  _has_bits_[0] |= 0x00000008u;
  dump_right_extended_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.DepositionStateDetailed.dump_right_extended)
}

// required bool dump_left_retracted = 5;
inline bool DepositionStateDetailed::has_dump_left_retracted() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DepositionStateDetailed::clear_dump_left_retracted() {
  dump_left_retracted_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool DepositionStateDetailed::dump_left_retracted() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.DepositionStateDetailed.dump_left_retracted)
  return dump_left_retracted_;
}
inline void DepositionStateDetailed::set_dump_left_retracted(bool value) {
  _has_bits_[0] |= 0x00000010u;
  dump_left_retracted_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.DepositionStateDetailed.dump_left_retracted)
}

// required bool dump_right_retracted = 6;
inline bool DepositionStateDetailed::has_dump_right_retracted() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DepositionStateDetailed::clear_dump_right_retracted() {
  dump_right_retracted_ = false;
  _has_bits_[0] &= ~0x00000020u;
}
inline bool DepositionStateDetailed::dump_right_retracted() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.DepositionStateDetailed.dump_right_retracted)
  return dump_right_retracted_;
}
inline void DepositionStateDetailed::set_dump_right_retracted(bool value) {
  _has_bits_[0] |= 0x00000020u;
  dump_right_retracted_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.DepositionStateDetailed.dump_right_retracted)
}

// -------------------------------------------------------------------

// LocObsStateDetailed

// required .com.cwrubotix.glennifer.LocalizationPosition loc_position = 1;
inline bool LocObsStateDetailed::has_loc_position() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LocObsStateDetailed::clear_loc_position() {
  if (loc_position_ != NULL) loc_position_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::com::cwrubotix::glennifer::LocalizationPosition& LocObsStateDetailed::loc_position() const {
  const ::com::cwrubotix::glennifer::LocalizationPosition* p = loc_position_;
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.LocObsStateDetailed.loc_position)
  return p != NULL ? *p : *reinterpret_cast<const ::com::cwrubotix::glennifer::LocalizationPosition*>(
      &::com::cwrubotix::glennifer::_LocalizationPosition_default_instance_);
}
inline ::com::cwrubotix::glennifer::LocalizationPosition* LocObsStateDetailed::release_loc_position() {
  // @@protoc_insertion_point(field_release:com.cwrubotix.glennifer.LocObsStateDetailed.loc_position)
  _has_bits_[0] &= ~0x00000001u;
  ::com::cwrubotix::glennifer::LocalizationPosition* temp = loc_position_;
  loc_position_ = NULL;
  return temp;
}
inline ::com::cwrubotix::glennifer::LocalizationPosition* LocObsStateDetailed::mutable_loc_position() {
  _has_bits_[0] |= 0x00000001u;
  if (loc_position_ == NULL) {
    auto* p = CreateMaybeMessage<::com::cwrubotix::glennifer::LocalizationPosition>(GetArenaNoVirtual());
    loc_position_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.cwrubotix.glennifer.LocObsStateDetailed.loc_position)
  return loc_position_;
}
inline void LocObsStateDetailed::set_allocated_loc_position(::com::cwrubotix::glennifer::LocalizationPosition* loc_position) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete loc_position_;
  }
  if (loc_position) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      loc_position = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, loc_position, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  loc_position_ = loc_position;
  // @@protoc_insertion_point(field_set_allocated:com.cwrubotix.glennifer.LocObsStateDetailed.loc_position)
}

// repeated .com.cwrubotix.glennifer.ObstaclePosition obstacles = 2;
inline int LocObsStateDetailed::obstacles_size() const {
  return obstacles_.size();
}
inline void LocObsStateDetailed::clear_obstacles() {
  obstacles_.Clear();
}
inline ::com::cwrubotix::glennifer::ObstaclePosition* LocObsStateDetailed::mutable_obstacles(int index) {
  // @@protoc_insertion_point(field_mutable:com.cwrubotix.glennifer.LocObsStateDetailed.obstacles)
  return obstacles_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::com::cwrubotix::glennifer::ObstaclePosition >*
LocObsStateDetailed::mutable_obstacles() {
  // @@protoc_insertion_point(field_mutable_list:com.cwrubotix.glennifer.LocObsStateDetailed.obstacles)
  return &obstacles_;
}
inline const ::com::cwrubotix::glennifer::ObstaclePosition& LocObsStateDetailed::obstacles(int index) const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.LocObsStateDetailed.obstacles)
  return obstacles_.Get(index);
}
inline ::com::cwrubotix::glennifer::ObstaclePosition* LocObsStateDetailed::add_obstacles() {
  // @@protoc_insertion_point(field_add:com.cwrubotix.glennifer.LocObsStateDetailed.obstacles)
  return obstacles_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::cwrubotix::glennifer::ObstaclePosition >&
LocObsStateDetailed::obstacles() const {
  // @@protoc_insertion_point(field_list:com.cwrubotix.glennifer.LocObsStateDetailed.obstacles)
  return obstacles_;
}

// -------------------------------------------------------------------

// LocalizationPosition

// required float x_position = 1;
inline bool LocalizationPosition::has_x_position() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LocalizationPosition::clear_x_position() {
  x_position_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline float LocalizationPosition::x_position() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.LocalizationPosition.x_position)
  return x_position_;
}
inline void LocalizationPosition::set_x_position(float value) {
  _has_bits_[0] |= 0x00000001u;
  x_position_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.LocalizationPosition.x_position)
}

// required float y_position = 2;
inline bool LocalizationPosition::has_y_position() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LocalizationPosition::clear_y_position() {
  y_position_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float LocalizationPosition::y_position() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.LocalizationPosition.y_position)
  return y_position_;
}
inline void LocalizationPosition::set_y_position(float value) {
  _has_bits_[0] |= 0x00000002u;
  y_position_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.LocalizationPosition.y_position)
}

// required float bearing_angle = 3;
inline bool LocalizationPosition::has_bearing_angle() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LocalizationPosition::clear_bearing_angle() {
  bearing_angle_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline float LocalizationPosition::bearing_angle() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.LocalizationPosition.bearing_angle)
  return bearing_angle_;
}
inline void LocalizationPosition::set_bearing_angle(float value) {
  _has_bits_[0] |= 0x00000004u;
  bearing_angle_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.LocalizationPosition.bearing_angle)
}

// -------------------------------------------------------------------

// ObstaclePosition

// required float x_position = 1;
inline bool ObstaclePosition::has_x_position() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ObstaclePosition::clear_x_position() {
  x_position_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline float ObstaclePosition::x_position() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.ObstaclePosition.x_position)
  return x_position_;
}
inline void ObstaclePosition::set_x_position(float value) {
  _has_bits_[0] |= 0x00000001u;
  x_position_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.ObstaclePosition.x_position)
}

// required float y_position = 2;
inline bool ObstaclePosition::has_y_position() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ObstaclePosition::clear_y_position() {
  y_position_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float ObstaclePosition::y_position() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.ObstaclePosition.y_position)
  return y_position_;
}
inline void ObstaclePosition::set_y_position(float value) {
  _has_bits_[0] |= 0x00000002u;
  y_position_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.ObstaclePosition.y_position)
}

// required float z_position = 3;
inline bool ObstaclePosition::has_z_position() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ObstaclePosition::clear_z_position() {
  z_position_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline float ObstaclePosition::z_position() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.ObstaclePosition.z_position)
  return z_position_;
}
inline void ObstaclePosition::set_z_position(float value) {
  _has_bits_[0] |= 0x00000004u;
  z_position_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.ObstaclePosition.z_position)
}

// required float diameter = 4;
inline bool ObstaclePosition::has_diameter() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ObstaclePosition::clear_diameter() {
  diameter_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline float ObstaclePosition::diameter() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.ObstaclePosition.diameter)
  return diameter_;
}
inline void ObstaclePosition::set_diameter(float value) {
  _has_bits_[0] |= 0x00000008u;
  diameter_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.ObstaclePosition.diameter)
}

// -------------------------------------------------------------------

// LaunchTransit

// required float cur_x_pos = 1;
inline bool LaunchTransit::has_cur_x_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LaunchTransit::clear_cur_x_pos() {
  cur_x_pos_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float LaunchTransit::cur_x_pos() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.LaunchTransit.cur_x_pos)
  return cur_x_pos_;
}
inline void LaunchTransit::set_cur_x_pos(float value) {
  _has_bits_[0] |= 0x00000002u;
  cur_x_pos_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.LaunchTransit.cur_x_pos)
}

// required float cur_y_pos = 2;
inline bool LaunchTransit::has_cur_y_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LaunchTransit::clear_cur_y_pos() {
  cur_y_pos_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline float LaunchTransit::cur_y_pos() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.LaunchTransit.cur_y_pos)
  return cur_y_pos_;
}
inline void LaunchTransit::set_cur_y_pos(float value) {
  _has_bits_[0] |= 0x00000004u;
  cur_y_pos_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.LaunchTransit.cur_y_pos)
}

// required float cur_heading = 3;
inline bool LaunchTransit::has_cur_heading() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LaunchTransit::clear_cur_heading() {
  cur_heading_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline float LaunchTransit::cur_heading() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.LaunchTransit.cur_heading)
  return cur_heading_;
}
inline void LaunchTransit::set_cur_heading(float value) {
  _has_bits_[0] |= 0x00000008u;
  cur_heading_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.LaunchTransit.cur_heading)
}

// required float dest_x_pos = 4;
inline bool LaunchTransit::has_dest_x_pos() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LaunchTransit::clear_dest_x_pos() {
  dest_x_pos_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline float LaunchTransit::dest_x_pos() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.LaunchTransit.dest_x_pos)
  return dest_x_pos_;
}
inline void LaunchTransit::set_dest_x_pos(float value) {
  _has_bits_[0] |= 0x00000010u;
  dest_x_pos_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.LaunchTransit.dest_x_pos)
}

// required float dest_y_pos = 5;
inline bool LaunchTransit::has_dest_y_pos() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LaunchTransit::clear_dest_y_pos() {
  dest_y_pos_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline float LaunchTransit::dest_y_pos() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.LaunchTransit.dest_y_pos)
  return dest_y_pos_;
}
inline void LaunchTransit::set_dest_y_pos(float value) {
  _has_bits_[0] |= 0x00000020u;
  dest_y_pos_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.LaunchTransit.dest_y_pos)
}

// required float time_alloc = 6;
inline bool LaunchTransit::has_time_alloc() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void LaunchTransit::clear_time_alloc() {
  time_alloc_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline float LaunchTransit::time_alloc() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.LaunchTransit.time_alloc)
  return time_alloc_;
}
inline void LaunchTransit::set_time_alloc(float value) {
  _has_bits_[0] |= 0x00000040u;
  time_alloc_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.LaunchTransit.time_alloc)
}

// required .com.cwrubotix.glennifer.UnixTime timestamp = 7;
inline bool LaunchTransit::has_timestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LaunchTransit::clear_timestamp() {
  if (timestamp_ != NULL) timestamp_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::com::cwrubotix::glennifer::UnixTime& LaunchTransit::timestamp() const {
  const ::com::cwrubotix::glennifer::UnixTime* p = timestamp_;
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.LaunchTransit.timestamp)
  return p != NULL ? *p : *reinterpret_cast<const ::com::cwrubotix::glennifer::UnixTime*>(
      &::com::cwrubotix::glennifer::_UnixTime_default_instance_);
}
inline ::com::cwrubotix::glennifer::UnixTime* LaunchTransit::release_timestamp() {
  // @@protoc_insertion_point(field_release:com.cwrubotix.glennifer.LaunchTransit.timestamp)
  _has_bits_[0] &= ~0x00000001u;
  ::com::cwrubotix::glennifer::UnixTime* temp = timestamp_;
  timestamp_ = NULL;
  return temp;
}
inline ::com::cwrubotix::glennifer::UnixTime* LaunchTransit::mutable_timestamp() {
  _has_bits_[0] |= 0x00000001u;
  if (timestamp_ == NULL) {
    auto* p = CreateMaybeMessage<::com::cwrubotix::glennifer::UnixTime>(GetArenaNoVirtual());
    timestamp_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.cwrubotix.glennifer.LaunchTransit.timestamp)
  return timestamp_;
}
inline void LaunchTransit::set_allocated_timestamp(::com::cwrubotix::glennifer::UnixTime* timestamp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete timestamp_;
  }
  if (timestamp) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      timestamp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, timestamp, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  timestamp_ = timestamp;
  // @@protoc_insertion_point(field_set_allocated:com.cwrubotix.glennifer.LaunchTransit.timestamp)
}

// -------------------------------------------------------------------

// LaunchDrill

// required float current_x = 1;
inline bool LaunchDrill::has_current_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LaunchDrill::clear_current_x() {
  current_x_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float LaunchDrill::current_x() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.LaunchDrill.current_x)
  return current_x_;
}
inline void LaunchDrill::set_current_x(float value) {
  _has_bits_[0] |= 0x00000002u;
  current_x_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.LaunchDrill.current_x)
}

// required float current_y = 2;
inline bool LaunchDrill::has_current_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LaunchDrill::clear_current_y() {
  current_y_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline float LaunchDrill::current_y() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.LaunchDrill.current_y)
  return current_y_;
}
inline void LaunchDrill::set_current_y(float value) {
  _has_bits_[0] |= 0x00000004u;
  current_y_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.LaunchDrill.current_y)
}

// required float current_Heading = 3;
inline bool LaunchDrill::has_current_heading() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LaunchDrill::clear_current_heading() {
  current_heading_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline float LaunchDrill::current_heading() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.LaunchDrill.current_Heading)
  return current_heading_;
}
inline void LaunchDrill::set_current_heading(float value) {
  _has_bits_[0] |= 0x00000008u;
  current_heading_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.LaunchDrill.current_Heading)
}

// required float load_desired = 4;
inline bool LaunchDrill::has_load_desired() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LaunchDrill::clear_load_desired() {
  load_desired_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline float LaunchDrill::load_desired() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.LaunchDrill.load_desired)
  return load_desired_;
}
inline void LaunchDrill::set_load_desired(float value) {
  _has_bits_[0] |= 0x00000010u;
  load_desired_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.LaunchDrill.load_desired)
}

// required bool start = 5;
inline bool LaunchDrill::has_start() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LaunchDrill::clear_start() {
  start_ = false;
  _has_bits_[0] &= ~0x00000020u;
}
inline bool LaunchDrill::start() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.LaunchDrill.start)
  return start_;
}
inline void LaunchDrill::set_start(bool value) {
  _has_bits_[0] |= 0x00000020u;
  start_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.LaunchDrill.start)
}

// required float time_allocation = 6;
inline bool LaunchDrill::has_time_allocation() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void LaunchDrill::clear_time_allocation() {
  time_allocation_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline float LaunchDrill::time_allocation() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.LaunchDrill.time_allocation)
  return time_allocation_;
}
inline void LaunchDrill::set_time_allocation(float value) {
  _has_bits_[0] |= 0x00000040u;
  time_allocation_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.LaunchDrill.time_allocation)
}

// required .com.cwrubotix.glennifer.UnixTime timestamp = 7;
inline bool LaunchDrill::has_timestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LaunchDrill::clear_timestamp() {
  if (timestamp_ != NULL) timestamp_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::com::cwrubotix::glennifer::UnixTime& LaunchDrill::timestamp() const {
  const ::com::cwrubotix::glennifer::UnixTime* p = timestamp_;
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.LaunchDrill.timestamp)
  return p != NULL ? *p : *reinterpret_cast<const ::com::cwrubotix::glennifer::UnixTime*>(
      &::com::cwrubotix::glennifer::_UnixTime_default_instance_);
}
inline ::com::cwrubotix::glennifer::UnixTime* LaunchDrill::release_timestamp() {
  // @@protoc_insertion_point(field_release:com.cwrubotix.glennifer.LaunchDrill.timestamp)
  _has_bits_[0] &= ~0x00000001u;
  ::com::cwrubotix::glennifer::UnixTime* temp = timestamp_;
  timestamp_ = NULL;
  return temp;
}
inline ::com::cwrubotix::glennifer::UnixTime* LaunchDrill::mutable_timestamp() {
  _has_bits_[0] |= 0x00000001u;
  if (timestamp_ == NULL) {
    auto* p = CreateMaybeMessage<::com::cwrubotix::glennifer::UnixTime>(GetArenaNoVirtual());
    timestamp_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.cwrubotix.glennifer.LaunchDrill.timestamp)
  return timestamp_;
}
inline void LaunchDrill::set_allocated_timestamp(::com::cwrubotix::glennifer::UnixTime* timestamp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete timestamp_;
  }
  if (timestamp) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      timestamp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, timestamp, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  timestamp_ = timestamp;
  // @@protoc_insertion_point(field_set_allocated:com.cwrubotix.glennifer.LaunchDrill.timestamp)
}

// -------------------------------------------------------------------

// LaunchDump

// required float current_length = 1;
inline bool LaunchDump::has_current_length() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LaunchDump::clear_current_length() {
  current_length_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float LaunchDump::current_length() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.LaunchDump.current_length)
  return current_length_;
}
inline void LaunchDump::set_current_length(float value) {
  _has_bits_[0] |= 0x00000002u;
  current_length_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.LaunchDump.current_length)
}

// required float current_angle = 2;
inline bool LaunchDump::has_current_angle() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LaunchDump::clear_current_angle() {
  current_angle_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline float LaunchDump::current_angle() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.LaunchDump.current_angle)
  return current_angle_;
}
inline void LaunchDump::set_current_angle(float value) {
  _has_bits_[0] |= 0x00000004u;
  current_angle_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.LaunchDump.current_angle)
}

// required bool start = 3;
inline bool LaunchDump::has_start() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LaunchDump::clear_start() {
  start_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool LaunchDump::start() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.LaunchDump.start)
  return start_;
}
inline void LaunchDump::set_start(bool value) {
  _has_bits_[0] |= 0x00000008u;
  start_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.LaunchDump.start)
}

// required float time_allocation = 4;
inline bool LaunchDump::has_time_allocation() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LaunchDump::clear_time_allocation() {
  time_allocation_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline float LaunchDump::time_allocation() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.LaunchDump.time_allocation)
  return time_allocation_;
}
inline void LaunchDump::set_time_allocation(float value) {
  _has_bits_[0] |= 0x00000010u;
  time_allocation_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.LaunchDump.time_allocation)
}

// required .com.cwrubotix.glennifer.UnixTime timestamp = 5;
inline bool LaunchDump::has_timestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LaunchDump::clear_timestamp() {
  if (timestamp_ != NULL) timestamp_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::com::cwrubotix::glennifer::UnixTime& LaunchDump::timestamp() const {
  const ::com::cwrubotix::glennifer::UnixTime* p = timestamp_;
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.LaunchDump.timestamp)
  return p != NULL ? *p : *reinterpret_cast<const ::com::cwrubotix::glennifer::UnixTime*>(
      &::com::cwrubotix::glennifer::_UnixTime_default_instance_);
}
inline ::com::cwrubotix::glennifer::UnixTime* LaunchDump::release_timestamp() {
  // @@protoc_insertion_point(field_release:com.cwrubotix.glennifer.LaunchDump.timestamp)
  _has_bits_[0] &= ~0x00000001u;
  ::com::cwrubotix::glennifer::UnixTime* temp = timestamp_;
  timestamp_ = NULL;
  return temp;
}
inline ::com::cwrubotix::glennifer::UnixTime* LaunchDump::mutable_timestamp() {
  _has_bits_[0] |= 0x00000001u;
  if (timestamp_ == NULL) {
    auto* p = CreateMaybeMessage<::com::cwrubotix::glennifer::UnixTime>(GetArenaNoVirtual());
    timestamp_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.cwrubotix.glennifer.LaunchDump.timestamp)
  return timestamp_;
}
inline void LaunchDump::set_allocated_timestamp(::com::cwrubotix::glennifer::UnixTime* timestamp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete timestamp_;
  }
  if (timestamp) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      timestamp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, timestamp, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  timestamp_ = timestamp;
  // @@protoc_insertion_point(field_set_allocated:com.cwrubotix.glennifer.LaunchDump.timestamp)
}

// -------------------------------------------------------------------

// ProgressReport

// required bool done = 1;
inline bool ProgressReport::has_done() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProgressReport::clear_done() {
  done_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool ProgressReport::done() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.ProgressReport.done)
  return done_;
}
inline void ProgressReport::set_done(bool value) {
  _has_bits_[0] |= 0x00000002u;
  done_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.ProgressReport.done)
}

// required .com.cwrubotix.glennifer.UnixTime timestamp = 2;
inline bool ProgressReport::has_timestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProgressReport::clear_timestamp() {
  if (timestamp_ != NULL) timestamp_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::com::cwrubotix::glennifer::UnixTime& ProgressReport::timestamp() const {
  const ::com::cwrubotix::glennifer::UnixTime* p = timestamp_;
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.ProgressReport.timestamp)
  return p != NULL ? *p : *reinterpret_cast<const ::com::cwrubotix::glennifer::UnixTime*>(
      &::com::cwrubotix::glennifer::_UnixTime_default_instance_);
}
inline ::com::cwrubotix::glennifer::UnixTime* ProgressReport::release_timestamp() {
  // @@protoc_insertion_point(field_release:com.cwrubotix.glennifer.ProgressReport.timestamp)
  _has_bits_[0] &= ~0x00000001u;
  ::com::cwrubotix::glennifer::UnixTime* temp = timestamp_;
  timestamp_ = NULL;
  return temp;
}
inline ::com::cwrubotix::glennifer::UnixTime* ProgressReport::mutable_timestamp() {
  _has_bits_[0] |= 0x00000001u;
  if (timestamp_ == NULL) {
    auto* p = CreateMaybeMessage<::com::cwrubotix::glennifer::UnixTime>(GetArenaNoVirtual());
    timestamp_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.cwrubotix.glennifer.ProgressReport.timestamp)
  return timestamp_;
}
inline void ProgressReport::set_allocated_timestamp(::com::cwrubotix::glennifer::UnixTime* timestamp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete timestamp_;
  }
  if (timestamp) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      timestamp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, timestamp, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  timestamp_ = timestamp;
  // @@protoc_insertion_point(field_set_allocated:com.cwrubotix.glennifer.ProgressReport.timestamp)
}

// -------------------------------------------------------------------

// ErrorReport

// required bool resolved = 1;
inline bool ErrorReport::has_resolved() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ErrorReport::clear_resolved() {
  resolved_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool ErrorReport::resolved() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.ErrorReport.resolved)
  return resolved_;
}
inline void ErrorReport::set_resolved(bool value) {
  _has_bits_[0] |= 0x00000002u;
  resolved_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.ErrorReport.resolved)
}

// required .com.cwrubotix.glennifer.UnixTime timestamp = 2;
inline bool ErrorReport::has_timestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ErrorReport::clear_timestamp() {
  if (timestamp_ != NULL) timestamp_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::com::cwrubotix::glennifer::UnixTime& ErrorReport::timestamp() const {
  const ::com::cwrubotix::glennifer::UnixTime* p = timestamp_;
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.ErrorReport.timestamp)
  return p != NULL ? *p : *reinterpret_cast<const ::com::cwrubotix::glennifer::UnixTime*>(
      &::com::cwrubotix::glennifer::_UnixTime_default_instance_);
}
inline ::com::cwrubotix::glennifer::UnixTime* ErrorReport::release_timestamp() {
  // @@protoc_insertion_point(field_release:com.cwrubotix.glennifer.ErrorReport.timestamp)
  _has_bits_[0] &= ~0x00000001u;
  ::com::cwrubotix::glennifer::UnixTime* temp = timestamp_;
  timestamp_ = NULL;
  return temp;
}
inline ::com::cwrubotix::glennifer::UnixTime* ErrorReport::mutable_timestamp() {
  _has_bits_[0] |= 0x00000001u;
  if (timestamp_ == NULL) {
    auto* p = CreateMaybeMessage<::com::cwrubotix::glennifer::UnixTime>(GetArenaNoVirtual());
    timestamp_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.cwrubotix.glennifer.ErrorReport.timestamp)
  return timestamp_;
}
inline void ErrorReport::set_allocated_timestamp(::com::cwrubotix::glennifer::UnixTime* timestamp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete timestamp_;
  }
  if (timestamp) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      timestamp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, timestamp, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  timestamp_ = timestamp;
  // @@protoc_insertion_point(field_set_allocated:com.cwrubotix.glennifer.ErrorReport.timestamp)
}

// -------------------------------------------------------------------

// TransitSoftStop

// required float timeLeft = 1;
inline bool TransitSoftStop::has_timeleft() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TransitSoftStop::clear_timeleft() {
  timeleft_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float TransitSoftStop::timeleft() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.TransitSoftStop.timeLeft)
  return timeleft_;
}
inline void TransitSoftStop::set_timeleft(float value) {
  _has_bits_[0] |= 0x00000002u;
  timeleft_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.TransitSoftStop.timeLeft)
}

// required bool stop = 2;
inline bool TransitSoftStop::has_stop() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TransitSoftStop::clear_stop() {
  stop_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool TransitSoftStop::stop() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.TransitSoftStop.stop)
  return stop_;
}
inline void TransitSoftStop::set_stop(bool value) {
  _has_bits_[0] |= 0x00000004u;
  stop_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.TransitSoftStop.stop)
}

// required .com.cwrubotix.glennifer.UnixTime timestamp = 3;
inline bool TransitSoftStop::has_timestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TransitSoftStop::clear_timestamp() {
  if (timestamp_ != NULL) timestamp_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::com::cwrubotix::glennifer::UnixTime& TransitSoftStop::timestamp() const {
  const ::com::cwrubotix::glennifer::UnixTime* p = timestamp_;
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.TransitSoftStop.timestamp)
  return p != NULL ? *p : *reinterpret_cast<const ::com::cwrubotix::glennifer::UnixTime*>(
      &::com::cwrubotix::glennifer::_UnixTime_default_instance_);
}
inline ::com::cwrubotix::glennifer::UnixTime* TransitSoftStop::release_timestamp() {
  // @@protoc_insertion_point(field_release:com.cwrubotix.glennifer.TransitSoftStop.timestamp)
  _has_bits_[0] &= ~0x00000001u;
  ::com::cwrubotix::glennifer::UnixTime* temp = timestamp_;
  timestamp_ = NULL;
  return temp;
}
inline ::com::cwrubotix::glennifer::UnixTime* TransitSoftStop::mutable_timestamp() {
  _has_bits_[0] |= 0x00000001u;
  if (timestamp_ == NULL) {
    auto* p = CreateMaybeMessage<::com::cwrubotix::glennifer::UnixTime>(GetArenaNoVirtual());
    timestamp_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.cwrubotix.glennifer.TransitSoftStop.timestamp)
  return timestamp_;
}
inline void TransitSoftStop::set_allocated_timestamp(::com::cwrubotix::glennifer::UnixTime* timestamp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete timestamp_;
  }
  if (timestamp) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      timestamp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, timestamp, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  timestamp_ = timestamp;
  // @@protoc_insertion_point(field_set_allocated:com.cwrubotix.glennifer.TransitSoftStop.timestamp)
}

// -------------------------------------------------------------------

// DrillSoftStop

// required float timeLeft = 1;
inline bool DrillSoftStop::has_timeleft() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DrillSoftStop::clear_timeleft() {
  timeleft_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float DrillSoftStop::timeleft() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.DrillSoftStop.timeLeft)
  return timeleft_;
}
inline void DrillSoftStop::set_timeleft(float value) {
  _has_bits_[0] |= 0x00000002u;
  timeleft_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.DrillSoftStop.timeLeft)
}

// required bool stop = 2;
inline bool DrillSoftStop::has_stop() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DrillSoftStop::clear_stop() {
  stop_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool DrillSoftStop::stop() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.DrillSoftStop.stop)
  return stop_;
}
inline void DrillSoftStop::set_stop(bool value) {
  _has_bits_[0] |= 0x00000004u;
  stop_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.DrillSoftStop.stop)
}

// required .com.cwrubotix.glennifer.UnixTime timestamp = 3;
inline bool DrillSoftStop::has_timestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DrillSoftStop::clear_timestamp() {
  if (timestamp_ != NULL) timestamp_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::com::cwrubotix::glennifer::UnixTime& DrillSoftStop::timestamp() const {
  const ::com::cwrubotix::glennifer::UnixTime* p = timestamp_;
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.DrillSoftStop.timestamp)
  return p != NULL ? *p : *reinterpret_cast<const ::com::cwrubotix::glennifer::UnixTime*>(
      &::com::cwrubotix::glennifer::_UnixTime_default_instance_);
}
inline ::com::cwrubotix::glennifer::UnixTime* DrillSoftStop::release_timestamp() {
  // @@protoc_insertion_point(field_release:com.cwrubotix.glennifer.DrillSoftStop.timestamp)
  _has_bits_[0] &= ~0x00000001u;
  ::com::cwrubotix::glennifer::UnixTime* temp = timestamp_;
  timestamp_ = NULL;
  return temp;
}
inline ::com::cwrubotix::glennifer::UnixTime* DrillSoftStop::mutable_timestamp() {
  _has_bits_[0] |= 0x00000001u;
  if (timestamp_ == NULL) {
    auto* p = CreateMaybeMessage<::com::cwrubotix::glennifer::UnixTime>(GetArenaNoVirtual());
    timestamp_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.cwrubotix.glennifer.DrillSoftStop.timestamp)
  return timestamp_;
}
inline void DrillSoftStop::set_allocated_timestamp(::com::cwrubotix::glennifer::UnixTime* timestamp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete timestamp_;
  }
  if (timestamp) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      timestamp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, timestamp, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  timestamp_ = timestamp;
  // @@protoc_insertion_point(field_set_allocated:com.cwrubotix.glennifer.DrillSoftStop.timestamp)
}

// -------------------------------------------------------------------

// DumpSoftStop

// required float timeLeft = 1;
inline bool DumpSoftStop::has_timeleft() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DumpSoftStop::clear_timeleft() {
  timeleft_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float DumpSoftStop::timeleft() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.DumpSoftStop.timeLeft)
  return timeleft_;
}
inline void DumpSoftStop::set_timeleft(float value) {
  _has_bits_[0] |= 0x00000002u;
  timeleft_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.DumpSoftStop.timeLeft)
}

// required bool stop = 2;
inline bool DumpSoftStop::has_stop() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DumpSoftStop::clear_stop() {
  stop_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool DumpSoftStop::stop() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.DumpSoftStop.stop)
  return stop_;
}
inline void DumpSoftStop::set_stop(bool value) {
  _has_bits_[0] |= 0x00000004u;
  stop_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.DumpSoftStop.stop)
}

// required .com.cwrubotix.glennifer.UnixTime timestamp = 3;
inline bool DumpSoftStop::has_timestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DumpSoftStop::clear_timestamp() {
  if (timestamp_ != NULL) timestamp_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::com::cwrubotix::glennifer::UnixTime& DumpSoftStop::timestamp() const {
  const ::com::cwrubotix::glennifer::UnixTime* p = timestamp_;
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.DumpSoftStop.timestamp)
  return p != NULL ? *p : *reinterpret_cast<const ::com::cwrubotix::glennifer::UnixTime*>(
      &::com::cwrubotix::glennifer::_UnixTime_default_instance_);
}
inline ::com::cwrubotix::glennifer::UnixTime* DumpSoftStop::release_timestamp() {
  // @@protoc_insertion_point(field_release:com.cwrubotix.glennifer.DumpSoftStop.timestamp)
  _has_bits_[0] &= ~0x00000001u;
  ::com::cwrubotix::glennifer::UnixTime* temp = timestamp_;
  timestamp_ = NULL;
  return temp;
}
inline ::com::cwrubotix::glennifer::UnixTime* DumpSoftStop::mutable_timestamp() {
  _has_bits_[0] |= 0x00000001u;
  if (timestamp_ == NULL) {
    auto* p = CreateMaybeMessage<::com::cwrubotix::glennifer::UnixTime>(GetArenaNoVirtual());
    timestamp_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.cwrubotix.glennifer.DumpSoftStop.timestamp)
  return timestamp_;
}
inline void DumpSoftStop::set_allocated_timestamp(::com::cwrubotix::glennifer::UnixTime* timestamp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete timestamp_;
  }
  if (timestamp) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      timestamp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, timestamp, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  timestamp_ = timestamp;
  // @@protoc_insertion_point(field_set_allocated:com.cwrubotix.glennifer.DumpSoftStop.timestamp)
}

// -------------------------------------------------------------------

// TransitHardStop

// required bool stop = 1;
inline bool TransitHardStop::has_stop() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TransitHardStop::clear_stop() {
  stop_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool TransitHardStop::stop() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.TransitHardStop.stop)
  return stop_;
}
inline void TransitHardStop::set_stop(bool value) {
  _has_bits_[0] |= 0x00000002u;
  stop_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.TransitHardStop.stop)
}

// required .com.cwrubotix.glennifer.UnixTime timestamp = 2;
inline bool TransitHardStop::has_timestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TransitHardStop::clear_timestamp() {
  if (timestamp_ != NULL) timestamp_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::com::cwrubotix::glennifer::UnixTime& TransitHardStop::timestamp() const {
  const ::com::cwrubotix::glennifer::UnixTime* p = timestamp_;
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.TransitHardStop.timestamp)
  return p != NULL ? *p : *reinterpret_cast<const ::com::cwrubotix::glennifer::UnixTime*>(
      &::com::cwrubotix::glennifer::_UnixTime_default_instance_);
}
inline ::com::cwrubotix::glennifer::UnixTime* TransitHardStop::release_timestamp() {
  // @@protoc_insertion_point(field_release:com.cwrubotix.glennifer.TransitHardStop.timestamp)
  _has_bits_[0] &= ~0x00000001u;
  ::com::cwrubotix::glennifer::UnixTime* temp = timestamp_;
  timestamp_ = NULL;
  return temp;
}
inline ::com::cwrubotix::glennifer::UnixTime* TransitHardStop::mutable_timestamp() {
  _has_bits_[0] |= 0x00000001u;
  if (timestamp_ == NULL) {
    auto* p = CreateMaybeMessage<::com::cwrubotix::glennifer::UnixTime>(GetArenaNoVirtual());
    timestamp_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.cwrubotix.glennifer.TransitHardStop.timestamp)
  return timestamp_;
}
inline void TransitHardStop::set_allocated_timestamp(::com::cwrubotix::glennifer::UnixTime* timestamp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete timestamp_;
  }
  if (timestamp) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      timestamp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, timestamp, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  timestamp_ = timestamp;
  // @@protoc_insertion_point(field_set_allocated:com.cwrubotix.glennifer.TransitHardStop.timestamp)
}

// -------------------------------------------------------------------

// DrillHardStop

// required bool stop = 1;
inline bool DrillHardStop::has_stop() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DrillHardStop::clear_stop() {
  stop_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool DrillHardStop::stop() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.DrillHardStop.stop)
  return stop_;
}
inline void DrillHardStop::set_stop(bool value) {
  _has_bits_[0] |= 0x00000002u;
  stop_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.DrillHardStop.stop)
}

// required .com.cwrubotix.glennifer.UnixTime timestamp = 2;
inline bool DrillHardStop::has_timestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DrillHardStop::clear_timestamp() {
  if (timestamp_ != NULL) timestamp_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::com::cwrubotix::glennifer::UnixTime& DrillHardStop::timestamp() const {
  const ::com::cwrubotix::glennifer::UnixTime* p = timestamp_;
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.DrillHardStop.timestamp)
  return p != NULL ? *p : *reinterpret_cast<const ::com::cwrubotix::glennifer::UnixTime*>(
      &::com::cwrubotix::glennifer::_UnixTime_default_instance_);
}
inline ::com::cwrubotix::glennifer::UnixTime* DrillHardStop::release_timestamp() {
  // @@protoc_insertion_point(field_release:com.cwrubotix.glennifer.DrillHardStop.timestamp)
  _has_bits_[0] &= ~0x00000001u;
  ::com::cwrubotix::glennifer::UnixTime* temp = timestamp_;
  timestamp_ = NULL;
  return temp;
}
inline ::com::cwrubotix::glennifer::UnixTime* DrillHardStop::mutable_timestamp() {
  _has_bits_[0] |= 0x00000001u;
  if (timestamp_ == NULL) {
    auto* p = CreateMaybeMessage<::com::cwrubotix::glennifer::UnixTime>(GetArenaNoVirtual());
    timestamp_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.cwrubotix.glennifer.DrillHardStop.timestamp)
  return timestamp_;
}
inline void DrillHardStop::set_allocated_timestamp(::com::cwrubotix::glennifer::UnixTime* timestamp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete timestamp_;
  }
  if (timestamp) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      timestamp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, timestamp, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  timestamp_ = timestamp;
  // @@protoc_insertion_point(field_set_allocated:com.cwrubotix.glennifer.DrillHardStop.timestamp)
}

// -------------------------------------------------------------------

// DumpHardStop

// required bool stop = 1;
inline bool DumpHardStop::has_stop() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DumpHardStop::clear_stop() {
  stop_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool DumpHardStop::stop() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.DumpHardStop.stop)
  return stop_;
}
inline void DumpHardStop::set_stop(bool value) {
  _has_bits_[0] |= 0x00000002u;
  stop_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.DumpHardStop.stop)
}

// required .com.cwrubotix.glennifer.UnixTime timestamp = 2;
inline bool DumpHardStop::has_timestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DumpHardStop::clear_timestamp() {
  if (timestamp_ != NULL) timestamp_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::com::cwrubotix::glennifer::UnixTime& DumpHardStop::timestamp() const {
  const ::com::cwrubotix::glennifer::UnixTime* p = timestamp_;
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.DumpHardStop.timestamp)
  return p != NULL ? *p : *reinterpret_cast<const ::com::cwrubotix::glennifer::UnixTime*>(
      &::com::cwrubotix::glennifer::_UnixTime_default_instance_);
}
inline ::com::cwrubotix::glennifer::UnixTime* DumpHardStop::release_timestamp() {
  // @@protoc_insertion_point(field_release:com.cwrubotix.glennifer.DumpHardStop.timestamp)
  _has_bits_[0] &= ~0x00000001u;
  ::com::cwrubotix::glennifer::UnixTime* temp = timestamp_;
  timestamp_ = NULL;
  return temp;
}
inline ::com::cwrubotix::glennifer::UnixTime* DumpHardStop::mutable_timestamp() {
  _has_bits_[0] |= 0x00000001u;
  if (timestamp_ == NULL) {
    auto* p = CreateMaybeMessage<::com::cwrubotix::glennifer::UnixTime>(GetArenaNoVirtual());
    timestamp_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.cwrubotix.glennifer.DumpHardStop.timestamp)
  return timestamp_;
}
inline void DumpHardStop::set_allocated_timestamp(::com::cwrubotix::glennifer::UnixTime* timestamp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete timestamp_;
  }
  if (timestamp) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      timestamp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, timestamp, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  timestamp_ = timestamp;
  // @@protoc_insertion_point(field_set_allocated:com.cwrubotix.glennifer.DumpHardStop.timestamp)
}

// -------------------------------------------------------------------

// TransitNewObstacle

// required float x_pos = 1;
inline bool TransitNewObstacle::has_x_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TransitNewObstacle::clear_x_pos() {
  x_pos_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float TransitNewObstacle::x_pos() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.TransitNewObstacle.x_pos)
  return x_pos_;
}
inline void TransitNewObstacle::set_x_pos(float value) {
  _has_bits_[0] |= 0x00000002u;
  x_pos_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.TransitNewObstacle.x_pos)
}

// required float y_pos = 2;
inline bool TransitNewObstacle::has_y_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TransitNewObstacle::clear_y_pos() {
  y_pos_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline float TransitNewObstacle::y_pos() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.TransitNewObstacle.y_pos)
  return y_pos_;
}
inline void TransitNewObstacle::set_y_pos(float value) {
  _has_bits_[0] |= 0x00000004u;
  y_pos_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.TransitNewObstacle.y_pos)
}

// required float diameter = 3;
inline bool TransitNewObstacle::has_diameter() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TransitNewObstacle::clear_diameter() {
  diameter_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline float TransitNewObstacle::diameter() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.TransitNewObstacle.diameter)
  return diameter_;
}
inline void TransitNewObstacle::set_diameter(float value) {
  _has_bits_[0] |= 0x00000008u;
  diameter_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.TransitNewObstacle.diameter)
}

// required .com.cwrubotix.glennifer.UnixTime timestamp = 4;
inline bool TransitNewObstacle::has_timestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TransitNewObstacle::clear_timestamp() {
  if (timestamp_ != NULL) timestamp_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::com::cwrubotix::glennifer::UnixTime& TransitNewObstacle::timestamp() const {
  const ::com::cwrubotix::glennifer::UnixTime* p = timestamp_;
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.TransitNewObstacle.timestamp)
  return p != NULL ? *p : *reinterpret_cast<const ::com::cwrubotix::glennifer::UnixTime*>(
      &::com::cwrubotix::glennifer::_UnixTime_default_instance_);
}
inline ::com::cwrubotix::glennifer::UnixTime* TransitNewObstacle::release_timestamp() {
  // @@protoc_insertion_point(field_release:com.cwrubotix.glennifer.TransitNewObstacle.timestamp)
  _has_bits_[0] &= ~0x00000001u;
  ::com::cwrubotix::glennifer::UnixTime* temp = timestamp_;
  timestamp_ = NULL;
  return temp;
}
inline ::com::cwrubotix::glennifer::UnixTime* TransitNewObstacle::mutable_timestamp() {
  _has_bits_[0] |= 0x00000001u;
  if (timestamp_ == NULL) {
    auto* p = CreateMaybeMessage<::com::cwrubotix::glennifer::UnixTime>(GetArenaNoVirtual());
    timestamp_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.cwrubotix.glennifer.TransitNewObstacle.timestamp)
  return timestamp_;
}
inline void TransitNewObstacle::set_allocated_timestamp(::com::cwrubotix::glennifer::UnixTime* timestamp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete timestamp_;
  }
  if (timestamp) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      timestamp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, timestamp, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  timestamp_ = timestamp;
  // @@protoc_insertion_point(field_set_allocated:com.cwrubotix.glennifer.TransitNewObstacle.timestamp)
}

// -------------------------------------------------------------------

// AutonomyNextHeading

// required float heading = 1;
inline bool AutonomyNextHeading::has_heading() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AutonomyNextHeading::clear_heading() {
  heading_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float AutonomyNextHeading::heading() const {
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.AutonomyNextHeading.heading)
  return heading_;
}
inline void AutonomyNextHeading::set_heading(float value) {
  _has_bits_[0] |= 0x00000002u;
  heading_ = value;
  // @@protoc_insertion_point(field_set:com.cwrubotix.glennifer.AutonomyNextHeading.heading)
}

// optional .com.cwrubotix.glennifer.UnixTime timestamp = 2;
inline bool AutonomyNextHeading::has_timestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AutonomyNextHeading::clear_timestamp() {
  if (timestamp_ != NULL) timestamp_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::com::cwrubotix::glennifer::UnixTime& AutonomyNextHeading::timestamp() const {
  const ::com::cwrubotix::glennifer::UnixTime* p = timestamp_;
  // @@protoc_insertion_point(field_get:com.cwrubotix.glennifer.AutonomyNextHeading.timestamp)
  return p != NULL ? *p : *reinterpret_cast<const ::com::cwrubotix::glennifer::UnixTime*>(
      &::com::cwrubotix::glennifer::_UnixTime_default_instance_);
}
inline ::com::cwrubotix::glennifer::UnixTime* AutonomyNextHeading::release_timestamp() {
  // @@protoc_insertion_point(field_release:com.cwrubotix.glennifer.AutonomyNextHeading.timestamp)
  _has_bits_[0] &= ~0x00000001u;
  ::com::cwrubotix::glennifer::UnixTime* temp = timestamp_;
  timestamp_ = NULL;
  return temp;
}
inline ::com::cwrubotix::glennifer::UnixTime* AutonomyNextHeading::mutable_timestamp() {
  _has_bits_[0] |= 0x00000001u;
  if (timestamp_ == NULL) {
    auto* p = CreateMaybeMessage<::com::cwrubotix::glennifer::UnixTime>(GetArenaNoVirtual());
    timestamp_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.cwrubotix.glennifer.AutonomyNextHeading.timestamp)
  return timestamp_;
}
inline void AutonomyNextHeading::set_allocated_timestamp(::com::cwrubotix::glennifer::UnixTime* timestamp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete timestamp_;
  }
  if (timestamp) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      timestamp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, timestamp, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  timestamp_ = timestamp;
  // @@protoc_insertion_point(field_set_allocated:com.cwrubotix.glennifer.AutonomyNextHeading.timestamp)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace glennifer
}  // namespace cwrubotix
}  // namespace com

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_messages_2eproto
